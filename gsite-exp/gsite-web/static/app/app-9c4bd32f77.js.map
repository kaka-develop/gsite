{"version":3,"sources":["app/app.module.js","app/web-modules/m-toolbar/m-toolbar-dialog.controller.js","app/web-modules/m-toolbar/m-toolbar.controller.js","app/web-modules/m-song/m-song-dialog.controller.js","app/web-modules/m-song/m-song.service.js","app/web-modules/m-song/m-song.controller.js","app/web-modules/m-sidenav/m-sidenav-dialog.controller.js","app/web-modules/m-sidenav/m-sidenav.controller.js","app/web-modules/m-photo/m-photo-view-dialog.controller.js","app/web-modules/m-photo/m-photo-dialog.controller.js","app/web-modules/m-photo/m-photo.service.js","app/web-modules/m-photo/m-photo.controller.js","app/web-modules/m-home/m-home-dialog.controller.js","app/web-modules/m-home/m-home.service.js","app/web-modules/m-home/m-home.controller.js","app/web-modules/m-footer/m-footer-dialog.controller.js","app/web-modules/m-footer/m-footer.controller.js","app/web-modules/m-basic-info/m-basic-info-dialog.controller.js","app/web-modules/m-basic-info/m-basic-info.controller.js","app/web-modules/m-audio-player/m-audio-player.controller.js","app/view-website/view-website.state.js","app/templates/template-search.service.js","app/templates/template.state.js","app/templates/template.service.js","app/templates/template.controller.js","app/templates/latest-template/latest-template.state.js","app/templates/latest-template/latest-template.controller.js","app/templates/beautiful-template/beautiful-template.state.js","app/templates/beautiful-template/beautiful-template.controller.js","app/templates/basic-template/basic-template.state.js","app/templates/basic-template/basic-template.controller.js","app/services/user/user.service.js","app/services/storage/template-storage.service.js","app/services/storage/storage.service.js","app/services/storage/my-website-storage.service.js","app/services/profiles/profile.service.js","app/services/profiles/page-ribbon.directive.js","app/services/mail/mail.service.js","app/services/facebook/facebook.service.js","app/services/auth/sessions.service.js","app/services/auth/register.service.js","app/services/auth/principal.service.js","app/services/auth/password-reset-init.service.js","app/services/auth/password-reset-finish.service.js","app/services/auth/password.service.js","app/services/auth/has-authority.directive.js","app/services/auth/has-any-authority.directive.js","app/services/auth/auth.service.js","app/services/auth/auth.jwt.service.js","app/services/auth/activate.service.js","app/services/auth/account.service.js","app/payment/website-payment/website-payment.state.js","app/payment/website-payment/website-payment.service.js","app/payment/website-payment/website-payment.paypal.controller.js","app/payment/website-payment/website-payment.controller.js","app/payment/payment.state.js","app/manager/website/website-dialog.controller.js","app/manager/website/website-detail.controller.js","app/manager/website/website.state.js","app/manager/website/website.service.js","app/manager/website/website.controller.js","app/manager/web-template/web-template-dialog.controller.js","app/manager/web-template/web-template-detail.controller.js","app/manager/web-template/web-template.state.js","app/manager/web-template/web-template.service.js","app/manager/web-template/web-template.controller.js","app/manager/question/question-dialog.controller.js","app/manager/question/question-detail.controller.js","app/manager/question/question.state.js","app/manager/question/question.service.js","app/manager/question/question.controller.js","app/manager/notification/notification-dialog.controller.js","app/manager/notification/notification-detail.controller.js","app/manager/notification/notification.state.js","app/manager/notification/notification.service.js","app/manager/notification/notification.controller.js","app/manager/manager.state.js","app/manager/feedback/feedback-dialog.controller.js","app/manager/feedback/feedback-detail.controller.js","app/manager/feedback/feedback.state.js","app/manager/feedback/feedback.service.js","app/manager/feedback/feedback.controller.js","app/layouts/toolbar/toolbar.service.js","app/layouts/toolbar/toolbar.controller.js","app/layouts/supportbar/supportbar.controller.js","app/layouts/sidenav/sidenav.controller.js","app/layouts/quicktool/quicktool.controller.js","app/layouts/managerbar/managerbar.controller.js","app/layouts/footer/footer.controller.js","app/layouts/error/error.state.js","app/layouts/custom-sidenav/custom-sidenav.controller.js","app/layouts/adminbar/adminbar.controller.js","app/layouts/accountbar/accountbar.controller.js","app/home/home.state.js","app/home/home.controller.js","app/entities/entity.state.js","app/customer/support/support.state.js","app/customer/support/my-question/my-question-dialog.controller.js","app/customer/support/my-question/my-question.state.js","app/customer/support/my-question/my-question.service.js","app/customer/support/my-question/my-question.controller.js","app/customer/support/my-feedback/my-feedback-option.service.js","app/customer/support/my-feedback/my-feedback-dialog.controller.js","app/customer/support/my-feedback/my-feedback.state.js","app/customer/support/my-feedback/my-feedback.service.js","app/customer/support/my-feedback/my-feedback.controller.js","app/customer/support/faq/faq.state.js","app/customer/support/faq/faq.service.js","app/customer/support/faq/faq.controller.js","app/customer/my-website/my-website-view.controller.js","app/customer/my-website/my-website-share.controller.js","app/customer/my-website/my-website-offline.service.js","app/customer/my-website/my-website-mail.controller.js","app/customer/my-website/my-website-dialog.controller.js","app/customer/my-website/my-website-custom.controller.js","app/customer/my-website/my-website.state.js","app/customer/my-website/my-website.service.js","app/customer/my-website/my-website.controller.js","app/customer/my-notification/my-notification-view.controller.js","app/customer/my-notification/my-notification.state.js","app/customer/my-notification/my-notification.service.js","app/customer/my-notification/my-notification.controller.js","app/customer/customer.state.js","app/components/util/truncate-words.filter.js","app/components/util/truncate-characters.filter.js","app/components/util/sort-by.directive.js","app/components/util/sort.directive.js","app/components/util/parse-links.service.js","app/components/util/pagination-util.service.js","app/components/util/jhi-item-count.directive.js","app/components/util/date-util.service.js","app/components/util/data-util.service.js","app/components/util/capitalize.filter.js","app/components/util/base64.service.js","app/components/login/login.service.js","app/components/login/login.controller.js","app/components/language/language.service.js","app/components/language/language.filter.js","app/components/language/language.controller.js","app/components/language/language.constants.js","app/components/form/show-validation.directive.js","app/components/form/pagination.constants.js","app/components/form/minbytes.directive.js","app/components/form/maxbytes.directive.js","app/components/alert/alert.service.js","app/components/alert/alert.controller.js","app/blocks/interceptor/errorhandler.interceptor.js","app/blocks/interceptor/auth-expired.interceptor.js","app/blocks/interceptor/auth.interceptor.js","app/blocks/handlers/translation.handler.js","app/blocks/handlers/subdomain.handler.js","app/blocks/handlers/state.handler.js","app/blocks/config/uib-pagination.config.js","app/blocks/config/uib-pager.config.js","app/blocks/config/translation-storage.provider.js","app/blocks/config/translation.config.js","app/blocks/config/localstorage.config.js","app/blocks/config/http.config.js","app/blocks/config/html5.mode.config.js","app/blocks/config/fb-sdk.config.js","app/blocks/config/compile.config.js","app/blocks/config/cache-buster.config.js","app/app.theme.js","app/app.state.js","app/app.constants.js","app/admin/user-management/user-management-dialog.controller.js","app/admin/user-management/user-management-detail.controller.js","app/admin/user-management/user-management.state.js","app/admin/user-management/user-management.controller.js","app/admin/metrics/metrics.state.js","app/admin/metrics/metrics.service.js","app/admin/metrics/metrics.controller.js","app/admin/logs/logs.state.js","app/admin/logs/logs.service.js","app/admin/logs/logs.controller.js","app/admin/health/health.state.js","app/admin/health/health.service.js","app/admin/health/health.modal.controller.js","app/admin/health/health.controller.js","app/admin/docs/docs.state.js","app/admin/configuration/configuration.state.js","app/admin/configuration/configuration.service.js","app/admin/configuration/configuration.controller.js","app/admin/audits/audits.state.js","app/admin/audits/audits.service.js","app/admin/audits/audits.controller.js","app/admin/admin.state.js","app/account/social/social-register.controller.js","app/account/social/social-auth.controller.js","app/account/social/social.state.js","app/account/social/social.service.js","app/account/social/directive/social.directive.js","app/account/settings/settings.state.js","app/account/settings/settings.controller.js","app/account/sessions/sessions.state.js","app/account/sessions/sessions.controller.js","app/account/reset/request/reset.request.state.js","app/account/reset/request/reset.request.controller.js","app/account/reset/finish/reset.finish.state.js","app/account/reset/finish/reset.finish.controller.js","app/account/register/register.state.js","app/account/register/register.controller.js","app/account/password/password-strength-bar.directive.js","app/account/password/password.state.js","app/account/password/password.controller.js","app/account/activate/activate.state.js","app/account/activate/activate.controller.js","app/account/account.state.js","app/app.js"],"names":["run","stateHandler","subdomainHandler","translationHandler","initialize","angular","module","$inject","MToolbarDialogController","entity","vm","this","toolbar","controller","MToolBarController","$scope","$state","$mdSidenav","buildToggler","componentId","toggle","loadDefault","isEnable","title","textColor","list","choices","subTitle","icon","state","homeState","current","name","indexOf","split","website","custom","toggleLeft","MSongDialogController","Principal","MyWebsiteStorage","webId","reset","item","artist","url","songFile","loading","submit","isExisted","uploadSong","i","song","items","length","deleteItem","index","onSuccess","response","splice","onError","fileName","deleteUserWebSong","userLogin","then","upload","file","push","uploadUserWebSong","identity","user","login","MSongService","ngAudio","$rootScope","loadSongList","songList","getList","loadSongAt","currentIndex","currentSong","audio","stop","load","tempLink","play","isPlaying","notify","pause","playNext","playPrevious","setLoop","isLoop","loop","checkPlaying","getCurrentSong","getCurrentAudio","subscribe","scope","callback","handler","$on","$emit","instance","factory","MSongController","playAt","downloadSongAt","songs","songUrl","$window","open","MSidenavDialogController","sidenav","MSidenavController","backgroundColor","MPhotoViewDialogController","photo","MPhotoDialogController","des","photoFile","uploadPhoto","deleteUserWebImage","uploadUserWebImage","MPhotoService","$mdDialog","view","show","templateUrl","controllerAs","targetEvent","clickOutsideToClose","fullscreen","resolve","viewAt","photoList","loadPhotoList","MPhotoController","photos","MHomeDialogController","homepage","mainImage","console","log","getMainImage","tempImageLink","data","link","getUserWebImage","MHomeService","setWebId","id","getWebId","loadImageLink","mainImageLink","getImageLink","service","MHomeController","loadCustom","loadMainImage","loadSong","loadPhoto","date","loadImageForWebItem","loadSongForWebItem","viewPhoto","playSongAt","user_id","MFooterDialogController","getIndex","choice","footer","MFooterController","LanguageService","changeEnglish","changeLanguage","changeVietnam","MBasicInfoDialogController","basicinfo","MBasicInfoController","basicInfo","firstName","lastName","email","age","MAudioPlayerController","hide","isShow","next","back","repeatOne","isRepeatOne","stateConfig","$stateProvider","authorities","params","views","content@","$stateParams","template","m-home@view-website","m-toolbar@view-website","m-sidenav@view-website","m-footer@view-website","m-audio-player@view-website","translatePartialLoader","$translate","$translatePartialLoader","addPart","refresh","parent","config","TemplateSearch","WebTemplate","TemplateStorage","getTemplates","templates","setSortType","type","sortType","setSearchType","searchType","search","text","query","field","sort","searchText","loadAll","result","loadImages","webTemplates","image","loadImageForWebTemplateItem","TemplateService","all","TemplateController","$timeout","loadTemplates","changeSearchType","currentSearch","changeSortType","currentSort","currentPage","m-home@latest-template","m-toolbar@latest-template","m-sidenav@latest-template","m-footer@latest-template","m-audio-player@latest-template","LatestTemplateController","m-home@beautiful-template","m-toolbar@beautiful-template","m-sidenav@beautiful-template","m-footer@beautiful-template","m-audio-player@beautiful-template","BeautifulTemplateController","m-home@basic-template","m-toolbar@basic-template","m-sidenav@basic-template","m-footer@basic-template","m-audio-player@basic-template","BasicTemplateController","User","$resource","method","isArray","get","transformResponse","fromJson","save","update","delete","$http","Storage","uploadTemplateImage","templateId","req","uploadUrl","headers","Authorization","storageToken","Content-Type","Dropbox-API-Arg","getTemplateImage","getUrl","path","deleteTemplateImage","deleteUrl","success","getToken","getUploadUrl","getLoadUrl","getDeleteUrl","userId","getUserWebSong","deleteUserWebImageFolder","ProfileService","getProfileInfo","isUndefined","dataPromise","activeProfiles","ribbonEnv","inProduction","swaggerEnabled","pageRibbon","linkFunc","element","attrs","addClass","removeClass","directive","replace","restrict","Mail","share","Facebook","FB","ui","display","href","Sessions","getAll","Register","$q","Account","authenticate","_identity","_authenticated","hasAnyAuthority","hasAuthority","authority","_id","when","force","getAccountThen","account","deferred","getAccountCatch","defer","undefined","isDefined","promise","$promise","catch","isAuthenticated","isIdentityResolved","PasswordResetInit","PasswordResetFinish","Password","setVisible","setHidden","defineVisibility","$watch","Auth","$sessionStorage","AuthServerProvider","LoginService","Activate","MyWebsiteOffline","activateAccount","key","cb","noop","err","bind","authorize","authThen","toState","go","fromState","getPreviousState","previousState","resetPreviousState","storePreviousState","toStateParams","authReturn","changePassword","newPassword","createAccount","logout","credentials","loginThen","loadDefaultUserData","use","langKey","reject","loginWithToken","jwt","rememberMe","getSocialAccountThen","displayName","imageURL","reloadAll","social","resetPasswordFinish","keyAndPassword","resetPasswordInit","mail","updateAccount","previousStateName","previousStateParams","$localStorage","authenticationToken","authenticateSuccess","status","bearerToken","slice","storeAuthenticationToken","username","password","post","interceptor","pageTitle","Website","WebsitePayment","DateUtils","resourceUrl","create","execute","card","WebsitePaymentPayPalController","$location","MyWebsite","onExecuteSuccess","reload","paid","onExecuteError","payment","paymentID","paymentId","payerID","PayerID","WebsitePaymentController","AlertService","buyNow","location","approval_link","isPaying","buyWithCard","number","month","year","cvv","error","abstract","WebsiteDialogController","closeDialog","cancel","isSaving","onSaveSuccess","onSaveError","isDomainError","openCalendar","datePickerOpenStatus","findAllTemplates","page","size","findAllUsers","users","created","WebsiteDetailController","unsubscribe","event","manager-content@manager","onEnter","domain","Date","sharedUsers","fullName","avatar","currentStateData","confirm","textContent","ariaLabel","ok","convertDateTimeFromServer","WebsiteController","websites","WebTemplateDialogController","webTemplate","sources","WebTemplateDetailController","source","category","rating","price","WebTemplateController","message","QuestionDialogController","Question","question","QuestionDetailController","setFrequent","content","answer","isFrequent","myquestion","faq","QuestionController","questions","NotificationDialogController","Notification","notification","NotificationDetailController","isRead","sentUsers","mynotifications","NotificationController","notifications","managerbar@manager","FeedbackDialogController","Feedback","feedback","FeedbackDetailController","myfeedback","FeedbackController","feedbacks","ToolbarService","getService","toggleSidenav","$get","provider","ToolbarController","focus","checkState","showLoginDialog","predicate","SupportBarController","currentState","SidenavController","$anchorScroll","getUserInfo","userEmail","userImage","goFeatureSec","hash","goHomeSec","QuickToolController","ManagerBarController","FooterController","mainTranslatePartialLoader","CustomSidenavController","goTemplateSec","AdminBarController","AccountBarController","HomeController","getAccount","loadAllTemplates","register","supportbar@support","MyQuestionDialogController","MyQuestionService","add","is_frequent","support-content@support","template_id","MyQuestionController","MyFeedbackOptionService","hashMap","del","options","MyFeedbackDialogController","MyFeedbackService","MyFeedbackController","FAQService","FAQController","faqs","MyWebsiteViewController","MyWebsiteShareController","$mdBottomSheet","closeShare","shareFacebook","getHost","myWebsite","shareTwitter","checkUser","user_email","concat","web","updateWeb","deleteWeb","refuse","onRefuseSuccess","MyWebsiteMailController","sendEmail","shareWithEmail","deleteEmail","currentAccount","sendMail","toEmail","fromName","toName","lang","from_name","to_name","to_email","web_id","MyWebsiteDialogController","clearUnPaidWebsites","getUnpaid","MyWebsiteCustomController","customizeToolbar","customDialog","customizeSidenav","customizeHomepage","customizeBasicInfo","customizeSong","customizePhoto","clickedItem","m-home@my-website-view","m-toolbar@my-website-view","m-sidenav@my-website-view","m-footer@my-website-view","m-audio-player@my-website-view","MyWebsiteController","loadWebsites","MyNotificationViewController","MyNotificationService","MyNotificationController","words","wordsFilter","input","isNaN","inputWords","join","filter","characters","charactersFilter","chars","breakOnWord","substring","charAt","substr","lastspace","lastIndexOf","jhSortBy","parentCtrl","require","jhSort","ascending","SortController","bindToController","$element","applyClass","thisIcon","find","sortIcon","sortAsc","sortDesc","remove","resetClasses","allThIcons","$apply","triggerApply","values","$watchGroup","ParseLinks","parse","header","Error","parts","links","forEach","p","section","trim","queryString","RegExp","$0","$1","$2","$3","isString","parseInt","PaginationUtil","parseAscending","sortArray","parsePage","parsePredicate","pop","jhiItemCount","bindings","queryCount","itemsPerPage","component","$filter","convertLocalDateFromServer","dateString","convertLocalDateToServer","dateformat","DataUtils","abbreviate","byteSize","base64String","endsWith","suffix","str","paddingSize","formatAsBytes","toString","openFile","toBase64","fileReader","FileReader","readAsDataURL","onload","e","base64Data","target","capitalize","capitalizeFilter","toLowerCase","toUpperCase","Base64","encode","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","charCodeAt","keyStr","decode","String","fromCharCode","modalInstance","animation","resetModal","LoginController","closeLoginDialog","authenticationError","preventDefault","$broadcast","requestResetPassword","LANGUAGES","tmhDynamicLocale","getCurrent","language","storage","set","findLanguageFromKey","findLanguageFromKeyFilter","en","vi","LanguageController","languageKey","languages","constant","showValidation","formCtrl","each","$formGroup","$inputs","$input","inputName","attr","$invalid","$dirty","isInvalid","toggleClass","minbytes","ngModel","$validators","modelValue","$isEmpty","numberOfBytes","maxbytes","$mdToast","msg","style","warning","info","hideDelay","toastClass","AlertController","errorHandlerInterceptor","responseError","authExpiredInterceptor","$injector","authInterceptor","request","isExternal","token","translateChangeSuccess","updateTitle","titleKey","$current","document","loadSubdomain","sub","fullHost","protocol","host","port","array","subdomain","handleSubdomain","getSubdomain","VERSION","stateChangeStart","external","stateChangeSuccess","toParams","fromParams","paginationConfig","uibPaginationConfig","paginationConstants","maxSize","boundaryLinks","firstText","previousText","nextText","lastText","pagerConfig","uibPagerConfig","translationStorageProvider","$cookies","$log","getObject","putObject","put","value","translationConfig","$translateProvider","tmhDynamicLocaleProvider","useLoader","urlTemplate","preferredLanguage","useStorage","useSanitizeValueStrategy","addInterpolation","localeLocationPattern","useCookieStorage","storageKey","localStorageConfig","$localStorageProvider","$sessionStorageProvider","setKeyPrefix","httpConfig","$urlRouterProvider","$httpProvider","httpRequestInterceptorCacheBusterProvider","$urlMatcherFactoryProvider","setMatchlist","otherwise","interceptors","val","equals","a","b","is","pattern","html5ModeConfig","$locationProvider","html5Mode","enabled","requireBase","window","fbAsyncInit","init","appId","xfbml","version","AppEvents","logPageView","d","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","compileServiceConfig","$compileProvider","DEBUG_INFO_ENABLED","debugInfoEnabled","cacheBusterConfig","themeConfig","$mdThemingProvider","theme","primaryPalette","dark","sidenav@","toolbar@","quicktool@","footer@","custom-sidenav@","UserManagementDialogController","choose","deleteChoice","UserManagementDetailController","setActivated","activated","setLanguage","admin-content@admin","squash","pagingParams","createdBy","createdDate","modifiedBy","modifiedDate","UserManagementController","setActive","isActivated","clear","lastModifiedBy","lastModifiedDate","resetDate","resetKey","MetricsService","getMetrics","threadDump","MetricsMonitoringController","updatingMetrics","metrics","servicesStats","newValue","timers","LogsService","findAll","changeLevel","LogsController","level","loggers","HealthService","checkHealth","transformHealthData","flattenHealthData","getBaseName","getSubSystemName","remainder","isHealthObject","hasSubSystem","addHealthObject","getModuleName","isLeaf","healthObject","healthData","details","hasDetails","extend","separator","HealthModalController","currentHealth","baseName","subSystemName","HealthCheckController","getLabelClass","statusState","updatingHealth","showHealth","health","ConfigurationService","getConfigPropsComplete","properties","orderBy","getEnv","getEnvComplete","vals","v","k","ConfigurationController","allConfiguration","configuration","AuditsService","fromDate","toDate","AuditsController","onChangeDate","dateFormat","audits","totalItems","today","getFullYear","getMonth","getDate","previousMonth","loadPage","adminbar@admin","SocialRegisterController","providerLabel","SocialAuthController","SocialService","getProviderSetting","getProviderURL","getCSRF","defaults","xsrfCookieName","socialService","jhSocial","label","providerSetting","providerURL","csrf","account-content@account","SettingsController","settingsAccount","copyAccount","SessionsController","invalidate","series","encodeURIComponent","sessions","RequestResetController","requestReset","errorEmailNotExists","resetAccount","ResetFinishController","finishReset","keyMissing","confirmPassword","RegisterController","registerAccount","errorUserExists","errorEmailExists","passwordStrengthBar","iElement","strength","colors","mesureStrength","_force","_regex","_lowerLetters","test","_upperLetters","_numbers","_symbols","_flags","_passedMatches","$","grep","el","Math","min","getColor","idx","col","c","children","css","background-color","passwordToCheck","PasswordController","ActivationController","accountbar@account","$templateCache"],"mappings":"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","file":"app/app-9c4bd32f77.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp', [\n            'ngStorage',\n            'tmh.dynamicLocale',\n            'pascalprecht.translate',\n            'ngResource',\n            'ngCookies',\n            'ngAria',\n            'ngCacheBuster',\n            'ngFileUpload',\n            'ui.bootstrap',\n            'ui.router',\n            'infinite-scroll',\n            // jhipster-needle-angularjs-add-module JHipster will add new module here\n            'angular-loading-bar',\n            'ngMaterial',\n            'mdColorPicker',\n            'ngFileUpload',\n            'ngAudio',\n            'ngMessages',\n            'ngPassword'\n        ])\n        .run(run);\n\n    run.$inject = ['stateHandler','subdomainHandler', 'translationHandler'];\n\n    function run(stateHandler, subdomainHandler,translationHandler) {\n        stateHandler.initialize();\n        subdomainHandler.initialize();\n        translationHandler.initialize();\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MToolbarDialogController', MToolbarDialogController);\n\n    MToolbarDialogController.$inject = ['entity'];\n\n    function MToolbarDialogController(entity) {\n        var vm = this;\n\n        vm.toolbar = entity;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MToolBarController', MToolBarController);\n\n    MToolBarController.$inject = ['$scope','$state', '$mdSidenav', 'entity'];\n\n    function MToolBarController($scope,$state, $mdSidenav, entity) {\n        var vm = this;\n\n        vm.homeState = $state.current.name;\n\n        // prevent reload page => make change root state\n        if (vm.homeState.indexOf('.') > 0) {\n            vm.homeState = vm.homeState.split('.')[0];\n        }\n        vm.website = entity;\n        vm.toolbar = vm.website.custom.toolbar;\n        if (vm.toolbar == null)\n            loadDefault();\n\n        // sidenav\n        vm.toggleLeft = buildToggler('m-sidenav');\n\n        function buildToggler(componentId) {\n            return function () {\n                $mdSidenav(componentId).toggle();\n            };\n        }\n\n        function loadDefault() {\n            vm.toolbar = {\n                isEnable: true,\n                title: 'Person',\n                textColor: '#FFFFFF'\n            };\n\n            vm.list = {\n                isEnable: true,\n                choices: [{\n                        title: 'Information',\n                        subTitle: 'Overview of what you should know',\n                        icon: 'person',\n                        state: vm.homeState + '.info'\n                    },\n                    {\n                        title: 'Photos',\n                        subTitle: 'Album contain all photo of reciever',\n                        icon: 'photo_library',\n                        state: vm.homeState + '.photo'\n                    },\n                    {\n                        title: 'Songs',\n                        subTitle: 'All favorite songs and their playlist',\n                        icon: 'library_music',\n                        state: vm.homeState + '.song'\n                    }\n                ]\n            };\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MSongDialogController', MSongDialogController);\n\n    MSongDialogController.$inject = ['entity', 'Principal', 'MyWebsiteStorage', 'webId'];\n\n    function MSongDialogController(entity, Principal, MyWebsiteStorage, webId) {\n        var vm = this;\n        vm.song = entity;\n\n        vm.submit = submit;\n        vm.deleteItem = deleteItem;\n        var userLogin = null;\n        vm.loading = false;\n        vm.songFile = null;\n\n        vm.item = {\n            title: null,\n            artist: null,\n            url: null\n        };\n\n        vm.upload = upload;\n\n        Principal.identity().then(function (user) {\n            userLogin = user.login;\n        });\n\n        function reset() {\n            vm.item = {\n                title: null,\n                artist: null,\n                url: null\n            };\n            vm.songFile = null;\n            vm.loading = false;\n        }\n\n        function submit(item) {\n            if (!isExisted(item)) {\n                uploadSong();\n            }\n        }\n\n        function isExisted(item) {\n            for (var i = 0; i < vm.song.items.length; i++) {\n                var song = vm.song.items[i];\n                if (song.title == item.title)\n                    return true;\n            }\n            return false;\n        }\n\n        function deleteItem(index) {\n            var fileName = vm.song.items[index].url;\n            vm.loading = true;\n            MyWebsiteStorage.deleteUserWebSong(userLogin, webId, fileName).then(onSuccess, onError);\n            function onSuccess(response) {\n                vm.song.items.splice(index, 1);\n                reset();\n            }\n\n            function onError(response) {\n                reset();\n            }\n\n        }\n\n        function upload(file) {\n            if (file != null) {\n                vm.item.url = file.name;\n                vm.item.title = file.name.split('.')[0];\n            }\n        }\n\n        function uploadSong() {\n            if (vm.songFile != null) {\n                vm.loading = true;\n                vm.song.items.push(vm.item);\n                MyWebsiteStorage.uploadUserWebSong(userLogin, webId, vm.songFile, vm.item.url).then(onSuccess, onError);\n            }\n\n            function onSuccess(response) {\n                reset();\n            }\n\n            function onError(response) {\n                reset();\n            }\n        }\n    }\n})();\n","(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MSongService', MSongService);\n\n    MSongService.$inject = ['ngAudio', '$rootScope'];\n\n    function MSongService(ngAudio, $rootScope) {\n        var songList = null;\n        var currentSong = null;\n        var audio = null;\n        var isPlaying = false;\n        var currentIndex = 0;\n\n        var instance = {\n            loadSongList: loadSongList,\n            getList: getList,\n            loadSongAt: loadSongAt,\n            play: play,\n            stop: stop,\n            pause: pause,\n            playNext: playNext,\n            playPrevious: playPrevious,\n            subscribe: subscribe,\n            checkPlaying: checkPlaying,\n            getCurrentSong: getCurrentSong,\n            getCurrentAudio: getCurrentAudio,\n            setLoop: setLoop\n        };\n\n\n        function loadSongList(list) {\n            songList = list;\n        }\n\n        function getList() {\n            return songList;\n        }\n\n        function loadSongAt(index) {\n            currentIndex = index;\n            currentSong = songList[index];\n            if (audio)\n                stop();\n            audio = ngAudio.load(currentSong.tempLink);\n            return audio;\n        }\n\n        function play() {\n            audio.play();\n            isPlaying = true;\n            notify();\n        }\n\n        function stop() {\n            if (audio) {\n                audio.stop();\n                isPlaying = false;\n                notify();\n            }\n        }\n\n        function pause() {\n            audio.pause();\n            isPlaying = false;\n            notify();\n        }\n\n        function playNext() {\n            if (currentIndex + 1 < songList.length)\n                loadSongAt(currentIndex + 1);\n            else\n                loadSongAt(0);\n\n            play();\n        }\n\n        function playPrevious() {\n            if (currentIndex - 1 >= 0)\n                loadSongAt(currentIndex - 1);\n            else\n                loadSongAt(songList.length - 1);\n\n            play();\n        }\n\n        function setLoop(isLoop) {\n            audio.loop = isLoop;\n        }\n\n        function checkPlaying() {\n            return isPlaying;\n        }\n\n        function getCurrentSong() {\n            return currentSong;\n        }\n\n        function getCurrentAudio() {\n            return audio;\n        }\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n        return instance;\n    }\n\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MSongController', MSongController);\n\n    MSongController.$inject = ['MSongService'];\n\n    function MSongController(MSongService) {\n        var vm = this;\n\n        vm.songs = MSongService.getList();\n\n        vm.playAt = playAt;\n        vm.downloadSongAt = downloadSongAt;\n\n        function playAt(index) {\n            MSongService.loadSongAt(index);\n            MSongService.play();\n        }\n\n        function downloadSongAt(index) {\n            var song = vm.songs[index];\n            var songUrl = song.tempLink;\n            $window.open(songUrl, '_blank');\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MSidenavDialogController', MSidenavDialogController);\n\n    MSidenavDialogController.$inject = ['entity'];\n\n    function MSidenavDialogController(entity) {\n        var vm = this;\n\n        vm.sidenav = entity;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MSidenavController', MSidenavController);\n\n    MSidenavController.$inject = ['$state', '$mdSidenav', 'entity'];\n\n    function MSidenavController($state, $mdSidenav, entity) {\n        var vm = this;\n\n        vm.homeState = $state.current.name;\n\n        // prevent reload page => make change root state\n        if (vm.homeState.indexOf('.') > 0) {\n            vm.homeState = vm.homeState.split('.')[0];\n        }\n\n        vm.website = entity;\n        vm.sidenav = vm.website.custom.sidenav;\n        if (vm.sidenav == null)\n            loadDefault();\n        // sidenav\n        vm.toggleLeft = buildToggler('m-sidenav');\n\n        function buildToggler(componentId) {\n            return function () {\n                $mdSidenav(componentId).toggle();\n            }\n        }\n\n        function loadDefault() {\n            vm.sidenav = {\n                isEnable: true,\n                title: 'About Person',\n                textColor: '#FFFFFF',\n                backgroundColor: 'white'\n            };\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MPhotoViewDialogController', MPhotoViewDialogController);\n\n    MPhotoViewDialogController.$inject = ['entity'];\n\n    function MPhotoViewDialogController(entity) {\n        var vm = this;\n\n        vm.photo = entity;\n        if (vm.photo == null)\n            loadDefault();\n\n\n        function loadDefault() {\n            vm.photo = {\n                title: 'best photo',\n                url: 'content/images/content/images/photos/kaka-photo.jpg'\n            };\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MPhotoDialogController', MPhotoDialogController);\n\n    MPhotoDialogController.$inject = ['entity', 'Principal', 'MyWebsiteStorage', 'webId'];\n\n    function MPhotoDialogController(entity, Principal, MyWebsiteStorage, webId) {\n        var vm = this;\n\n        vm.photo = entity;\n\n        vm.submit = submit;\n        vm.deleteItem = deleteItem;\n\n        var userLogin = null;\n        vm.loading = false;\n        vm.photoFile = null;\n\n        vm.item = {\n            title: null,\n            artist: null,\n            url: null\n        };\n\n        vm.upload = upload;\n\n        Principal.identity().then(function (user) {\n            userLogin = user.login;\n        });\n\n        function reset() {\n            vm.item = {\n                name: null,\n                des: null,\n                url: null\n            };\n            vm.photoFile = null;\n            vm.loading = false;\n        }\n\n\n        function submit() {\n            if (!isExisted(vm.item)) {\n                uploadPhoto();\n            }\n        }\n\n        function isExisted(item) {\n            for (var i = 0; i < vm.photo.items.length; i++) {\n                var photo = vm.photo.items[i];\n                if (photo.name == item.name)\n                    return true;\n            }\n            return false;\n        }\n\n        function deleteItem(index) {\n            var fileName = vm.photo.items[index].url;\n            vm.loading = true;\n            MyWebsiteStorage.deleteUserWebImage(userLogin, webId, fileName).then(onSuccess, onError);\n\n            function onSuccess(response) {\n                vm.photo.items.splice(index, 1);\n                reset();\n            }\n\n            function onError(response) {\n                reset();\n            }\n\n\n        }\n\n\n        function upload(file) {\n            if (file != null) {\n                vm.item.url = file.name;\n                vm.item.name = file.name.split('.')[0];\n            }\n        }\n\n        function uploadPhoto() {\n            if (vm.photoFile != null) {\n                vm.loading = true;\n                MyWebsiteStorage.uploadUserWebImage(userLogin, webId, vm.photoFile, vm.item.url).then(onSuccess, onError);\n            }\n\n            function onSuccess(response) {\n                vm.photo.items.push(vm.item);\n                reset();\n            }\n\n            function onError(response) {\n                reset();\n            }\n        }\n\n    }\n})();\n","(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MPhotoService', MPhotoService);\n\n    MPhotoService.$inject = ['$mdDialog'];\n\n    function MPhotoService($mdDialog) {\n\n        var photoList = null;\n\n        var instance = {\n            loadPhotoList: loadPhotoList,\n            view: view,\n            viewAt: viewAt,\n            getList: getList\n        };\n\n        function view(photo) {\n            $mdDialog.show({\n                templateUrl: 'app/web-modules/m-photo/m-photo-view-dialog.html',\n                controller: 'MPhotoViewDialogController',\n                controllerAs: 'vm',\n                targetEvent: null,\n                clickOutsideToClose: true,\n                fullscreen: false,\n                resolve: {\n                    entity: function () {\n                        return photo;\n                    }\n                }\n            });\n        }\n\n        function viewAt(index) {\n            var photo = photoList[index];\n            view(photo);\n        }\n\n        function loadPhotoList(list) {\n            photoList = list;\n        }\n\n        function getList() {\n            return photoList;\n        }\n\n        return instance;\n    }\n\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MPhotoController', MPhotoController);\n\n    MPhotoController.$inject = ['MPhotoService'];\n\n    function MPhotoController(MPhotoService) {\n        var vm = this;\n\n        vm.photos = MPhotoService.getList();\n\n        vm.viewAt = viewAt;\n\n\n        function viewAt(index) {\n            MPhotoService.viewAt(index);\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MHomeDialogController', MHomeDialogController);\n\n    MHomeDialogController.$inject = [ 'entity', 'Principal', 'MyWebsiteStorage','webId'];\n\n    function MHomeDialogController( entity, Principal, MyWebsiteStorage, webId) {\n        var vm = this;\n\n        vm.homepage = entity;\n        var fileName = 'mainImage.jpg';\n        var userLogin = null;\n\n        vm.loading = false;\n\n        vm.upload = upload;\n\n        Principal.identity().then(function (user) {\n            userLogin = user.login;\n            getMainImage();\n        });\n\n\n        function upload(file) {\n            if (file != null) {\n                vm.loading = true;\n                MyWebsiteStorage.uploadUserWebImage(userLogin, webId, file, fileName).then(onSuccess, onError);\n            }\n\n            function onSuccess(response) {\n                vm.loading = false;\n                vm.homepage.mainImage = fileName;\n            }\n\n            function onError(response) {\n                vm.loading = false;\n                console.log(response);\n            }\n        }\n\n        function getMainImage() {\n            if (vm.homepage.mainImage == 'none')\n                return;\n            if(vm.homepage.tempImageLink != null)\n                return;\n\n            MyWebsiteStorage.getUserWebImage(userLogin, webId, fileName).then(onSuccess, onError);\n            function onSuccess(response) {\n                vm.homepage.tempImageLink = response.data.link;\n            }\n\n            function onError(response) {\n                console.log(response);\n            }\n        }\n\n\n    }\n})();\n","(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MHomeService', MHomeService);\n\n    MHomeService.$inject = [];\n\n    function MHomeService() {\n\n        var mainImageLink = null;\n        var webId = null;\n        var service = {\n            setWebId: setWebId,\n            getWebId: getWebId,\n            loadImageLink: loadImageLink,\n            getImageLink: getImageLink\n        };\n\n        function setWebId(id) {\n\n        }\n\n        function getWebId() {\n            return webId;\n        }\n\n        function loadImageLink(link) {\n            mainImageLink = link;\n        }\n\n        function getImageLink() {\n            return mainImageLink;\n        }\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MHomeController', MHomeController);\n\n    MHomeController.$inject = ['$state', '$window', 'entity', 'MHomeService', 'MPhotoService', 'MSongService', 'MyWebsiteStorage'];\n\n    function MHomeController($state, $window, entity, MHomeService, MPhotoService, MSongService, MyWebsiteStorage) {\n        var vm = this;\n\n\n        var website = entity;\n        vm.song = website.custom.song;\n        vm.photo = website.custom.photo;\n        var userLogin = website.user_id;\n        var webId = website.id;\n\n        vm.songs = [];\n        vm.photos = [];\n\n        vm.homepage = website.custom.homepage;\n        vm.homeState = $state.current.name;\n        vm.mainImageLink = null;\n\n\n        if (vm.homepage == null)\n            loadDefault();\n        else {\n            if (MHomeService.getWebId() == null || MHomeService.getWebId() != website.id)\n                loadCustom();\n            else {\n                vm.mainImageLink = MHomeService.getImageLink();\n                vm.photos = MPhotoService.getList();\n                vm.songs = MSongService.getList();\n            }\n        }\n\n\n        vm.viewPhoto = viewPhoto;\n        vm.playSongAt = playSongAt;\n        vm.downloadSongAt = downloadSongAt;\n\n        function loadCustom() {\n            MHomeService.setWebId(website.id);\n            loadMainImage(userLogin);\n\n            if (vm.song.isEnable) {\n                vm.songs = vm.song.items;\n                loadSong(userLogin, vm.songs);\n            }\n            if (vm.photo.isEnable) {\n                vm.photos = vm.photo.items;\n                loadPhoto(userLogin, vm.photos);\n            }\n\n        }\n\n\n        function loadDefault() {\n            vm.photos = [\n                {\n                    name: 'kaka-photo',\n                    des: 'Real win in champion league. This is the most viewed photo of Ricardo Kaka.',\n                    tempLink: 'content/images/photos/kaka-photo.jpg'\n                },\n                {\n                    name: 'chelsea-arse',\n                    des: 'Best match, we should not miss in sunday',\n                    tempLink: 'content/images/photos/chelsea-arse.jpg'\n                },\n                {\n                    name: 'chelsea-liv',\n                    des: 'Super match with chelsea and liverpool',\n                    tempLink: 'content/images/photos/chelsea-liv.jpg'\n                }\n            ];\n\n            vm.songs = [\n                {\n                    title: 'Happy',\n                    artist: 'Pharrell Williams',\n                    tempLink: 'content/media/songs/Happy.mp3',\n                    length: '3:00',\n                    date: '2017-01-12'\n                },\n                {\n                    title: 'Paris',\n                    artist: 'The Chainsmokers',\n                    tempLink: 'content/media/songs/Paris.mp3',\n                    length: '3:15',\n                    date: '2017-01-15'\n                },\n                {\n                    title: 'Shape of You',\n                    artist: 'Ed Sheeran',\n                    tempLink: 'content/media/songs/Shape-of-You.mp3',\n                    length: '2:45',\n                    date: '2016-09-01'\n                }\n            ];\n\n            MSongService.loadSongList(vm.songs);\n\n\n            MPhotoService.loadPhotoList(vm.photos);\n        }\n\n        function loadMainImage(userLogin) {\n\n            if (vm.homepage.mainImage == 'none')\n                return;\n\n            MyWebsiteStorage.getUserWebImage(userLogin, webId, \"mainImage.jpg\").then(onSuccess, onError);\n            function onSuccess(response) {\n                vm.mainImageLink = response.data.link;\n                MHomeService.loadImageLink(vm.mainImageLink);\n            }\n\n            function onError(response) {\n                console.log(response);\n            }\n        }\n\n        function loadPhoto(userLogin, photos) {\n            for (var i = 0; i < photos.length; i++) {\n                var photo = photos[i];\n                MyWebsiteStorage.loadImageForWebItem(userLogin, webId, photo, photo.url);\n\n            }\n            MPhotoService.loadPhotoList(vm.photos);\n        }\n\n        function loadSong(userLogin, songs) {\n            for (var i = 0; i < songs.length; i++) {\n                var song = songs[i];\n                MyWebsiteStorage.loadSongForWebItem(userLogin, webId, song, song.url);\n            }\n            MSongService.loadSongList(vm.songs);\n        }\n\n        function viewPhoto(photo) {\n            MPhotoService.view(photo);\n        }\n\n        function playSongAt(index) {\n            MSongService.loadSongAt(index);\n            MSongService.play();\n        }\n\n        function downloadSongAt(index) {\n            var song = vm.songs[index];\n            var songUrl = song.tempLink;\n            $window.open(songUrl, '_blank');\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MFooterDialogController', MFooterDialogController);\n\n    MFooterDialogController.$inject = ['$state', 'entity'];\n\n    function MFooterDialogController($state, entity) {\n        var vm = this;\n\n        vm.footer = entity;\n        vm.item = null;\n\n        vm.submit = submit;\n        vm.deleteItem = deleteItem;\n\n\n        function submit() {\n            if (getIndex(vm.choice) < 0)\n                vm.footer.items.push(vm.item);\n        }\n\n        function getIndex(item) {\n            return vm.footer.items.indexOf(item);\n        }\n\n        function deleteItem(index) {\n            vm.footer.items.splice(index, 1);\n        }\n    }\n})();","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MFooterController', MFooterController);\n\n    MFooterController.$inject = ['$state', 'entity','LanguageService'];\n\n    function MFooterController($state, entity,LanguageService) {\n        var vm = this;\n\n        vm.website = entity;\n        vm.footer = vm.website.custom.footer;\n        vm.changeEnglish = changeEnglish;\n        vm.changeVietnam = changeVietnam;\n        vm.homeState = $state.current.name;\n\n        // prevent reload page => make change root state\n        if (vm.homeState.indexOf('.') > 0) {\n            vm.homeState = vm.homeState.split('.')[0];\n        }\n\n        function changeEnglish() {\n            LanguageService.changeLanguage('en');\n        }\n\n        function changeVietnam() {\n            LanguageService.changeLanguage('vi');\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MBasicInfoDialogController', MBasicInfoDialogController);\n\n    MBasicInfoDialogController.$inject = ['entity'];\n\n    function MBasicInfoDialogController( entity) {\n        var vm = this;\n        vm.basicinfo = entity;\n\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MBasicInfoController', MBasicInfoController);\n\n    MBasicInfoController.$inject = ['entity'];\n\n    function MBasicInfoController(entity) {\n        var vm = this;\n\n        vm.basicInfo = entity;\n\n        if (vm.basicInfo == null)\n            loadDefault();\n\n\n        function loadDefault() {\n            vm.basicInfo = {\n                isEnable: true,\n                firstName: 'first name',\n                lastName: 'last name',\n                email: 'email@gmail.com',\n                age: 21,\n                des: 'description'\n            };\n        }\n\n\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MAudioPlayerController', MAudioPlayerController);\n\n    MAudioPlayerController.$inject = ['$scope', 'MSongService'];\n\n    function MAudioPlayerController($scope, MSongService) {\n        var vm = this;\n\n        vm.isShow = false;\n        vm.hide = hide;\n        vm.song = MSongService.getCurrentSong();\n\n        vm.isPlaying = false;\n        vm.isRepeatOne = false;\n        vm.play = play;\n        vm.back = back;\n        vm.next = next;\n        vm.repeatOne = repeatOne;\n        vm.audio = null;\n\n        MSongService.subscribe($scope, function somethingChanged() {\n            vm.isPlaying = MSongService.checkPlaying();\n            vm.song = MSongService.getCurrentSong();\n            vm.audio = MSongService.getCurrentAudio();\n            vm.isShow = true;\n        });\n\n        function hide() {\n            MSongService.stop();\n            vm.isShow = false;\n        }\n\n        function play() {\n            if (vm.isPlaying) {\n                MSongService.pause();\n            } else {\n                MSongService.play();\n            }\n        }\n\n        function next() {\n            MSongService.playNext();\n        }\n\n        function back() {\n            MSongService.playPrevious();\n        }\n\n        function repeatOne() {\n            vm.isRepeatOne = !vm.isRepeatOne;\n            MSongService.setLoop(vm.isRepeatOne);\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('view-website', {\n            url: '/ai',\n            data: {\n                authorities: []\n            },\n            params: {\n                website: null\n            },\n            views: {\n                'content@': {\n                    templateUrl: function ($stateParams) {\n                        return 'app/templates/' + $stateParams.website.template + '/' + $stateParams.website.template + '.html';\n                    },\n                    controller: 'MyWebsiteViewController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-home@view-website': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.homepage.isEnable)\n                            return 'app/web-modules/m-home/m-home.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MHomeController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-toolbar@view-website': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.toolbar.isEnable)\n                            return 'app/web-modules/m-toolbar/m-toolbar.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MToolBarController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-sidenav@view-website': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.sidenav.isEnable)\n                            return 'app/web-modules/m-sidenav/m-sidenav.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MSidenavController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-footer@view-website': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.footer.isEnable)\n                            return 'app/web-modules/m-footer/m-footer.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MFooterController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-audio-player@view-website': {\n                    templateUrl: 'app/web-modules/m-audio-player/m-audio-player.html',\n                    controller: 'MAudioPlayerController',\n                    controllerAs: 'vm'\n                }\n            }, resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('template');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('view-website.info', {\n            parent: 'view-website',\n            url: '/info',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@view-website': {\n                    templateUrl: 'app/web-modules/m-basic-info/m-basic-info.html',\n                    controller: 'MBasicInfoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website.custom.basicInfo;\n                        }\n                    }\n                }\n            }\n        }).state('view-website.photo', {\n            parent: 'view-website',\n            url: '/photos',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@view-website': {\n                    templateUrl: 'app/web-modules/m-photo/m-photo.html',\n                    controller: 'MPhotoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                    }\n                }\n            }\n        }).state('view-website.song', {\n            parent: 'view-website',\n            url: '/songs',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@view-website': {\n                    templateUrl: 'app/web-modules/m-song/m-song.html',\n                    controller: 'MSongController',\n                    controllerAs: 'vm',\n                    resolve: {\n\n                    }\n                }\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('TemplateSearch', TemplateSearch);\n\n    TemplateSearch.$inject = ['$rootScope', 'WebTemplate','TemplateStorage'];\n\n    function TemplateSearch($rootScope, WebTemplate,TemplateStorage) {\n        var searchType = 'name';\n        var sortType = 'name';\n        var searchText = null;\n        var templates = [];\n\n        var instance = {\n            subscribe: subscribe,\n            search: search,\n            getTemplates: getTemplates,\n            setSortType: setSortType,\n            setSearchType: setSearchType\n        };\n\n        loadAll();\n\n        function getTemplates() {\n            return templates;\n        }\n\n        function setSortType(type) {\n            sortType = type;\n        }\n\n        function setSearchType(type) {\n            searchType = type;\n        }\n\n        function search(text) {\n            if (text) {\n                WebTemplate.search({\n                    query: text,\n                    field: searchType,\n                    sort: sort\n                }, onSuccess);\n                searchText = text;\n            } else\n                loadAll();\n        }\n\n\n        function loadAll() {\n            WebTemplate.query({\n                sort: sort()\n            }, onSuccess);\n        }\n\n        function sort() {\n            var result = [sortType + ',' + ('asc')];\n            if (sortType !== 'id') {\n                result.push('id');\n            }\n            return result;\n        }\n\n        function onSuccess(data) {\n            templates = data;\n            loadImages(templates);\n            notify();\n        }\n\n        function loadImages(webTemplates) {\n            for (var i = 0; i < webTemplates.length; i++) {\n                var template  = webTemplates[i];\n                if(template.image  != null){\n                    TemplateStorage.loadImageForWebTemplateItem(template.id,template,\"mainImage.jpg\");\n                }\n            }\n\n        }\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n\n        return instance;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('template', {\n            parent: 'app',\n            url: '/template?text&type',\n            data: {\n                authorities: []\n            },\n            params: {\n              text: null\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/templates/templates.html',\n                    controller: 'TemplateController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('template');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('TemplateService', TemplateService);\n\n    TemplateService.$inject = ['$rootScope','WebTemplate','TemplateStorage'];\n\n    function TemplateService($rootScope,WebTemplate,TemplateStorage) {\n        var instance = {\n            all: all,\n            subscribe: subscribe\n        };\n\n        var templates = [];\n\n        loadAll();\n\n        function all() {\n            return templates;\n        }\n\n        function loadAll() {\n            WebTemplate.query({}, onSuccess);\n        }\n\n        function onSuccess(data) {\n            templates = data;\n            loadImages(templates);\n            notify();\n        }\n\n        function loadImages(webTemplates) {\n            for (var i = 0; i < webTemplates.length; i++) {\n                var template = webTemplates[i];\n                if (template.image != null) {\n                    TemplateStorage.loadImageForWebTemplateItem(template.id, template, \"mainImage.jpg\");\n                }\n            }\n        }\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n\n        return instance;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('TemplateController', TemplateController);\n\n    TemplateController.$inject = ['$scope', '$timeout','TemplateSearch', '$stateParams'];\n\n    function TemplateController($scope, $timeout,TemplateSearch, $stateParams) {\n        var vm = this;\n        vm.currentPage = 0;\n\n        vm.webTemplates = [];\n\n\n        vm.currentSearch = 'name';\n        vm.currentSort = 'name';\n        vm.changeSearchType = changeSearchType;\n        vm.changeSortType = changeSortType;\n\n        loadTemplates();\n\n        function loadTemplates() {\n            vm.webTemplates = TemplateSearch.getTemplates();\n        }\n\n        TemplateSearch.subscribe($scope, function somethingChanged() {\n            loadTemplates();\n        });\n\n        function changeSearchType() {\n            TemplateSearch.setSearchType(vm.currentSearch);\n        }\n\n        function changeSortType() {\n            TemplateSearch.setSortType(vm.currentSort);\n        }\n\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('latest-template', {\n            url: '/latest-template',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/templates/latest-template/latest-template.html',\n                    controller: 'LatestTemplateController',\n                    controllerAs: 'vm'\n                },\n                'm-home@latest-template': {\n                    templateUrl: 'app/web-modules/m-home/m-home.html',\n                    controller: 'MHomeController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }],\n                        song: [function () {\n                            return null;\n                        }],\n                        photo: [function () {\n                            return null;\n                        }],\n                        webId: [function () {\n                            return null;\n                        }],\n                        userLogin: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-toolbar@latest-template': {\n                    templateUrl: 'app/web-modules/m-toolbar/m-toolbar.html',\n                    controller: 'MToolBarController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-sidenav@latest-template': {\n                    templateUrl: 'app/web-modules/m-sidenav/m-sidenav.html',\n                    controller: 'MSidenavController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-footer@latest-template': {\n                    templateUrl: 'app/web-modules/m-footer/m-footer.html',\n                    controller: 'MFooterController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-audio-player@latest-template': {\n                    templateUrl: 'app/web-modules/m-audio-player/m-audio-player.html',\n                    controller: 'MAudioPlayerController',\n                    controllerAs: 'vm'\n                }\n            }, resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('template');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('latest-template.info', {\n            parent: 'latest-template',\n            url: '/info',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@latest-template': {\n                    templateUrl: 'app/web-modules/m-basic-info/m-basic-info.html',\n                    controller: 'MBasicInfoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        }).state('latest-template.photo', {\n            parent: 'latest-template',\n            url: '/photos',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@latest-template': {\n                    templateUrl: 'app/web-modules/m-photo/m-photo.html',\n                    controller: 'MPhotoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        }).state('latest-template.song', {\n            parent: 'latest-template',\n            url: '/songs',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@latest-template': {\n                    templateUrl: 'app/web-modules/m-song/m-song.html',\n                    controller: 'MSongController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('LatestTemplateController', LatestTemplateController);\n\n    LatestTemplateController.$inject = ['$scope','MSongService'];\n\n    function LatestTemplateController($scope,MSongService) {\n        var vm = this;\n\n        $scope.$on('$destroy', function handler() {\n            // destruction code here\n            MSongService.stop();\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('beautiful-template', {\n            url: '/beautiful-template',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/templates/beautiful-template/beautiful-template.html',\n                    controller: 'BeautifulTemplateController',\n                    controllerAs: 'vm'\n                },\n                'm-home@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-home/m-home.html',\n                    controller: 'MHomeController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }],\n                        song: [function () {\n                            return null;\n                        }],\n                        photo: [function () {\n                            return null;\n                        }],\n                        webId: [function () {\n                            return null;\n                        }],\n                        userLogin: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-toolbar@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-toolbar/m-toolbar.html',\n                    controller: 'MToolBarController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-sidenav@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-sidenav/m-sidenav.html',\n                    controller: 'MSidenavController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-footer@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-footer/m-footer.html',\n                    controller: 'MFooterController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-audio-player@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-audio-player/m-audio-player.html',\n                    controller: 'MAudioPlayerController',\n                    controllerAs: 'vm'\n                }\n            }, resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('template');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('beautiful-template.info', {\n            parent: 'beautiful-template',\n            url: '/info',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-basic-info/m-basic-info.html',\n                    controller: 'MBasicInfoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        }).state('beautiful-template.photo', {\n            parent: 'beautiful-template',\n            url: '/photos',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-photo/m-photo.html',\n                    controller: 'MPhotoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        }).state('beautiful-template.song', {\n            parent: 'beautiful-template',\n            url: '/songs',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-song/m-song.html',\n                    controller: 'MSongController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('BeautifulTemplateController', BeautifulTemplateController);\n\n    BeautifulTemplateController.$inject = ['$scope','MSongService'];\n\n    function BeautifulTemplateController($scope,MSongService) {\n        var vm = this;\n\n        $scope.$on('$destroy', function handler() {\n            // destruction code here\n            MSongService.stop();\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('basic-template', {\n            url: '/basic-template',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/templates/basic-template/basic-template.html',\n                    controller: 'BasicTemplateController',\n                    controllerAs: 'vm'\n                },\n                'm-home@basic-template': {\n                    templateUrl: 'app/web-modules/m-home/m-home.html',\n                    controller: 'MHomeController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }],\n                        song: [function () {\n                            return null;\n                        }],\n                        photo: [function () {\n                            return null;\n                        }],\n                        webId: [function () {\n                            return null;\n                        }],\n                        userLogin: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-toolbar@basic-template': {\n                    templateUrl: 'app/web-modules/m-toolbar/m-toolbar.html',\n                    controller: 'MToolBarController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-sidenav@basic-template': {\n                    templateUrl: 'app/web-modules/m-sidenav/m-sidenav.html',\n                    controller: 'MSidenavController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-footer@basic-template': {\n                    templateUrl: 'app/web-modules/m-footer/m-footer.html',\n                    controller: 'MFooterController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-audio-player@basic-template': {\n                    templateUrl: 'app/web-modules/m-audio-player/m-audio-player.html',\n                    controller: 'MAudioPlayerController',\n                    controllerAs: 'vm'\n                }\n            }, resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('template');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('basic-template.info', {\n            parent: 'basic-template',\n            url: '/info',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@basic-template': {\n                    templateUrl: 'app/web-modules/m-basic-info/m-basic-info.html',\n                    controller: 'MBasicInfoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        }).state('basic-template.photo', {\n            parent: 'basic-template',\n            url: '/photos',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@basic-template': {\n                    templateUrl: 'app/web-modules/m-photo/m-photo.html',\n                    controller: 'MPhotoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        }).state('basic-template.song', {\n            parent: 'basic-template',\n            url: '/songs',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@basic-template': {\n                    templateUrl: 'app/web-modules/m-song/m-song.html',\n                    controller: 'MSongController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('BasicTemplateController', BasicTemplateController);\n\n    BasicTemplateController.$inject = ['$scope','MSongService'];\n\n    function BasicTemplateController($scope,MSongService) {\n        var vm = this;\n\n        $scope.$on(\"$destroy\", function handler() {\n            // destruction code here\n            MSongService.stop();\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('User', User);\n\n    User.$inject = ['$resource'];\n\n    function User($resource) {\n        var service = $resource('api/users/:login', {}, {\n            'query': {method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    data = angular.fromJson(data);\n                    return data;\n                }\n            },\n            'save': {method: 'POST'},\n            'update': {method: 'PUT'},\n            'delete': {method: 'DELETE'},\n            'email': {\n                method: 'GET',\n                url: 'api/users/email',\n                transformResponse: function (data) {\n                    if(data)\n                     data = angular.fromJson(data);\n                    return data;\n                }\n            }\n        });\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('TemplateStorage', TemplateStorage);\n\n    TemplateStorage.$inject = ['$http','Storage'];\n\n    function TemplateStorage($http,Storage) {\n\n        var storageToken = Storage.getToken();\n        var uploadUrl = Storage.getUploadUrl();\n        var getUrl = Storage.getLoadUrl();\n        var deleteUrl = Storage.getDeleteUrl();\n\n        var service = {\n            uploadTemplateImage: uploadTemplateImage,\n            getTemplateImage: getTemplateImage,\n            deleteTemplateImage: deleteTemplateImage,\n            loadImageForWebTemplateItem: loadImageForWebTemplateItem\n        };\n\n        function uploadTemplateImage(templateId,file,fileName) {\n            var req = {\n                method: 'POST',\n                url: uploadUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/octet-stream',\n                    'Dropbox-API-Arg': '{\"path\": \"/api/images/templates/' + templateId + '/'  + fileName + '\", \"autorename\": false,\"mode\":{\".tag\":\"overwrite\"}}'\n                },\n                data: file\n            }\n\n            return $http(req);\n        }\n\n        function getTemplateImage(templateId,fileName) {\n            var req = {\n                method: 'POST',\n                url: getUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/images/templates/\" + templateId + '/'  + fileName\n                }\n            }\n\n            return $http(req);\n        }\n\n        function deleteTemplateImage(templateId,fileName) {\n            var req = {\n                method: 'POST',\n                url: deleteUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/images/templates/\" + templateId + '/'  + fileName\n                }\n            }\n\n            return $http(req);\n        }\n\n        function loadImageForWebTemplateItem(templateId,item,fileName) {\n            var req = {\n                method: 'POST',\n                url: getUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/images/templates/\" + templateId + '/'  + fileName\n                }\n            }\n            $http(req).success(function (response) {\n                item['tempLink'] = response.link;\n            });\n        }\n\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Storage', Storage);\n\n    Storage.$inject = ['$http'];\n\n    function Storage($http) {\n\n        var storageToken = \"sHqhTAgPouAAAAAAAAACZd2ylvKjki_lxskKjwGaWh3Y3GdF-6il8ytpoJYlDNNO\";\n        var uploadUrl = \"https://content.dropboxapi.com/2/files/alpha/upload\";\n        var getUrl = \"https://api.dropboxapi.com/2/files/get_temporary_link\";\n        var deleteUrl = \"https://api.dropboxapi.com/2/files/delete\";\n\n        var service = {\n            getToken: getToken,\n            getUploadUrl: getUploadUrl,\n            getLoadUrl: getLoadUrl,\n            getDeleteUrl: getDeleteUrl\n        };\n\n        function getToken() {\n            return storageToken;\n        }\n\n        function getUploadUrl() {\n            return uploadUrl;\n        }\n\n        function getLoadUrl() {\n            return getUrl;\n        }\n\n        function getDeleteUrl() {\n            return deleteUrl;\n        }\n\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('MyWebsiteStorage', MyWebsiteStorage);\n\n    MyWebsiteStorage.$inject = ['$http','Storage'];\n\n    function MyWebsiteStorage($http,Storage) {\n\n        var storageToken = Storage.getToken();\n        var uploadUrl = Storage.getUploadUrl();\n        var getUrl = Storage.getLoadUrl();\n        var deleteUrl = Storage.getDeleteUrl();\n\n        var service = {\n            uploadUserWebImage: uploadUserWebImage,\n            getUserWebImage: getUserWebImage,\n            getUserWebSong: getUserWebSong,\n            uploadUserWebSong: uploadUserWebSong,\n            deleteUserWebImage: deleteUserWebImage,\n            deleteUserWebSong: deleteUserWebSong,\n            deleteUserWebImageFolder: deleteUserWebImageFolder,\n            loadImageForWebItem: loadImageForWebItem,\n            loadSongForWebItem: loadSongForWebItem\n        };\n\n        function uploadUserWebImage(userId,webId,file,fileName) {\n            var req = {\n                method: 'POST',\n                url: uploadUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/octet-stream',\n                    'Dropbox-API-Arg': '{\"path\": \"/api/images/' + userId + '/' + webId + '/'  + fileName + '\", \"autorename\": false,\"mode\":{\".tag\":\"overwrite\"}}'\n                },\n                data: file\n            }\n\n            return $http(req);\n        }\n\n        function uploadUserWebSong(userId,webId,file,fileName) {\n            var req = {\n                method: 'POST',\n                url: uploadUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/octet-stream',\n                    'Dropbox-API-Arg': '{\"path\": \"/api/songs/' + userId + '/' + webId + '/'  + fileName + '\", \"autorename\": false,\"mode\":{\".tag\":\"overwrite\"}}'\n                },\n                data: file\n            }\n\n            return $http(req);\n        }\n\n        function getUserWebImage(userId,webId, fileName) {\n            var req = {\n                method: 'POST',\n                url: getUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/images/\" + userId + '/' + webId + '/' + fileName\n                }\n            }\n            return $http(req);\n        }\n\n        function getUserWebSong(userId,webId, fileName) {\n            var req = {\n                method: 'POST',\n                url: getUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/songs/\" + userId + '/' + webId + '/' + fileName\n                }\n            }\n\n            return $http(req);\n        }\n\n        function deleteUserWebImageFolder(userId,webId) {\n            var req = {\n                method: 'POST',\n                url: deleteUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/images/\" + userId + '/' + webId\n                }\n            }\n            return  $http(req);\n        }\n\n        function deleteUserWebImage(userId,webId,fileName) {\n            var req = {\n                method: 'POST',\n                url: deleteUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/images/\" + userId + '/' + webId + '/' + fileName\n                }\n            }\n\n            return $http(req);\n        }\n\n        function deleteUserWebSong(userId,webId,fileName) {\n            var req = {\n                method: 'POST',\n                url: deleteUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/songs/\" + userId + '/' + webId + '/' + fileName\n                }\n            }\n\n            return $http(req);\n        }\n\n        function loadImageForWebItem(userId, webId, item, fileName) {\n            var req = {\n                method: 'POST',\n                url: getUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/images/\" + userId + '/' + webId + '/' + fileName\n                }\n            }\n            $http(req).success(function (response) {\n                item['tempLink'] = response.link;\n            });\n        }\n\n        function loadSongForWebItem(userId, webId, item, fileName) {\n            var req = {\n                method: 'POST',\n                url: getUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/songs/\" + userId + '/' + webId + '/' + fileName\n                }\n            }\n            $http(req).success(function (response) {\n                item['tempLink'] = response.link;\n            });\n        }\n\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('ProfileService', ProfileService);\n\n    ProfileService.$inject = ['$http'];\n\n    function ProfileService($http) {\n\n        var dataPromise;\n\n        var service = {\n            getProfileInfo : getProfileInfo\n        };\n\n        return service;\n\n        function getProfileInfo() {\n            if (angular.isUndefined(dataPromise)) {\n                dataPromise = $http.get('api/profile-info').then(function(result) {\n                    if (result.data.activeProfiles) {\n                        var response = {};\n                        response.activeProfiles = result.data.activeProfiles;\n                        response.ribbonEnv = result.data.ribbonEnv;\n                        response.inProduction = result.data.activeProfiles.indexOf(\"prod\") !== -1;\n                        response.swaggerEnabled = result.data.activeProfiles.indexOf(\"swagger\") !== -1;\n                        return response;\n                    }\n                });\n            }\n            return dataPromise;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('pageRibbon', pageRibbon);\n\n    pageRibbon.$inject = ['ProfileService', '$rootScope', '$translate'];\n\n    function pageRibbon(ProfileService, $rootScope, $translate) {\n        var directive = {\n            replace : true,\n            restrict : 'AE',\n            template : '<div class=\"ribbon hidden\"><a href=\"\" translate=\"global.ribbon.{{ribbonEnv}}\">{{ribbonEnv}}</a></div>',\n            link : linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            ProfileService.getProfileInfo().then(function(response) {\n                if (response.ribbonEnv) {\n                    scope.ribbonEnv = response.ribbonEnv;\n                    element.addClass(response.ribbonEnv);\n                    element.removeClass('hidden');\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Mail', Mail);\n\n    Mail.$inject = ['$resource'];\n\n    function Mail ($resource) {\n        var service = $resource('api/mail', {}, {\n            'share': { method: 'GET',\n                url: 'api/mail/share'}\n        });\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Facebook', Facebook);\n\n    Facebook.$inject = [];\n\n    function Facebook () {\n        var service ={\n            share: share\n        };\n\n        function share(url) {\n            FB.ui({\n                method: 'share',\n                display: 'popup',\n                href: url,\n            }, function(response){});\n        }\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Sessions', Sessions);\n\n    Sessions.$inject = ['$resource'];\n\n    function Sessions ($resource) {\n        return $resource('api/account/sessions/:series', {}, {\n            'getAll': { method: 'GET', isArray: true}\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Register', Register);\n\n    Register.$inject = ['$resource'];\n\n    function Register ($resource) {\n        return $resource('api/register', {}, {});\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Principal', Principal);\n\n    Principal.$inject = ['$q', 'Account', '$rootScope'];\n\n    function Principal($q, Account, $rootScope) {\n        var _identity,\n            _authenticated = false;\n\n        var service = {\n            authenticate: authenticate,\n            hasAnyAuthority: hasAnyAuthority,\n            hasAuthority: hasAuthority,\n            identity: identity,\n            isAuthenticated: isAuthenticated,\n            isIdentityResolved: isIdentityResolved\n        };\n\n        return service;\n\n        function authenticate(identity) {\n            _identity = identity;\n            _authenticated = identity !== null;\n\n        }\n\n\n        function hasAnyAuthority(authorities) {\n            if (!_authenticated || !_identity || !_identity.authorities) {\n                return false;\n            }\n\n            for (var i = 0; i < authorities.length; i++) {\n                if (_identity.authorities.indexOf(authorities[i]) !== -1) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        function hasAuthority(authority) {\n            if (!_authenticated) {\n                return $q.when(false);\n            }\n\n            return this.identity().then(function (_id) {\n                return _id.authorities && _id.authorities.indexOf(authority) !== -1;\n            }, function () {\n                return false;\n            });\n        }\n\n        function identity(force) {\n            var deferred = $q.defer();\n\n            if (force === true) {\n                _identity = undefined;\n            }\n\n            // check and see if we have retrieved the identity data from the server.\n            // if we have, reuse it by immediately resolving\n            if (angular.isDefined(_identity)) {\n                deferred.resolve(_identity);\n\n                return deferred.promise;\n            }\n\n            // retrieve the identity data from the server, update the identity object, and then resolve.\n            Account.get().$promise\n                .then(getAccountThen)\n                .catch(getAccountCatch);\n\n\n            return deferred.promise;\n\n            function getAccountThen(account) {\n                _identity = account.data;\n                _authenticated = true;\n                deferred.resolve(_identity);\n            }\n\n            function getAccountCatch() {\n                _identity = null;\n                _authenticated = false;\n                deferred.resolve(_identity);\n            }\n\n\n        }\n\n\n\n\n        function isAuthenticated() {\n            return _authenticated;\n        }\n\n        function isIdentityResolved() {\n            return angular.isDefined(_identity);\n        }\n\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('PasswordResetInit', PasswordResetInit);\n\n    PasswordResetInit.$inject = ['$resource'];\n\n    function PasswordResetInit($resource) {\n        var service = $resource('api/account/reset_password/init', {}, {});\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('PasswordResetFinish', PasswordResetFinish);\n\n    PasswordResetFinish.$inject = ['$resource'];\n\n    function PasswordResetFinish($resource) {\n        var service = $resource('api/account/reset_password/finish', {}, {});\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Password', Password);\n\n    Password.$inject = ['$resource'];\n\n    function Password($resource) {\n        var service = $resource('api/account/change_password', {}, {});\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('hasAuthority', hasAuthority);\n\n    hasAuthority.$inject = ['Principal'];\n\n    function hasAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authority = attrs.hasAuthority.replace(/\\s+/g, '');\n\n            var setVisible = function () {\n                    element.removeClass('hide');\n                },\n                setHidden = function () {\n                    element.addClass('hide');\n                },\n                defineVisibility = function (reset) {\n\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    Principal.hasAuthority(authority)\n                        .then(function (result) {\n                            if (result) {\n                                setVisible();\n                            } else {\n                                setHidden();\n                            }\n                        });\n                };\n\n            if (authority.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('hasAnyAuthority', hasAnyAuthority);\n\n    hasAnyAuthority.$inject = ['Principal'];\n\n    function hasAnyAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authorities = attrs.hasAnyAuthority.replace(/\\s+/g, '').split(',');\n\n            var setVisible = function () {\n                    element.removeClass('hidden');\n                },\n                setHidden = function () {\n                    element.addClass('hidden');\n                },\n                defineVisibility = function (reset) {\n                    var result;\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    result = Principal.hasAnyAuthority(authorities);\n                    if (result) {\n                        setVisible();\n                    } else {\n                        setHidden();\n                    }\n                };\n\n            if (authorities.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Auth', Auth);\n\n    Auth.$inject = ['$rootScope', '$state', '$sessionStorage', '$q', '$translate', 'Principal', 'AuthServerProvider', 'Account', 'LoginService', 'Register', 'Activate', 'Password', 'PasswordResetInit', 'PasswordResetFinish','MyWebsiteOffline'];\n\n    function Auth ($rootScope, $state, $sessionStorage, $q, $translate, Principal, AuthServerProvider, Account, LoginService, Register, Activate, Password, PasswordResetInit, PasswordResetFinish,MyWebsiteOffline) {\n        var service = {\n            activateAccount: activateAccount,\n            authorize: authorize,\n            changePassword: changePassword,\n            createAccount: createAccount,\n            getPreviousState: getPreviousState,\n            login: login,\n            logout: logout,\n            loginWithToken: loginWithToken,\n            resetPasswordFinish: resetPasswordFinish,\n            resetPasswordInit: resetPasswordInit,\n            resetPreviousState: resetPreviousState,\n            storePreviousState: storePreviousState,\n            updateAccount: updateAccount,\n            subscribe: subscribe\n        };\n\n        return service;\n\n        function activateAccount (key, callback) {\n            var cb = callback || angular.noop;\n\n            return Activate.get(key,\n                function (response) {\n                    return cb(response);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function authorize (force) {\n            var authReturn = Principal.identity(force).then(authThen);\n\n            return authReturn;\n\n            function authThen () {\n                var isAuthenticated = Principal.isAuthenticated();\n\n                // an authenticated user can't access to login and register pages\n                if (isAuthenticated && $rootScope.toState.parent === 'account' && ($rootScope.toState.name === 'login' || $rootScope.toState.name === 'register' || $rootScope.toState.name === 'social-auth')) {\n                    $state.go('home');\n                }\n\n                // recover and clear previousState after external login redirect (e.g. oauth2)\n                if (isAuthenticated && !$rootScope.fromState.name && getPreviousState()) {\n                    var previousState = getPreviousState();\n                    resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n\n                if ($rootScope.toState.data.authorities && $rootScope.toState.data.authorities.length > 0 && !Principal.hasAnyAuthority($rootScope.toState.data.authorities)) {\n                    if (isAuthenticated) {\n                        // user is signed in but not authorized for desired state\n                        $state.go('accessdenied');\n                    }\n                    else {\n                        // user is not authenticated. stow the state they wanted before you\n                        // send them to the login service, so you can return them when you're done\n                        storePreviousState($rootScope.toState.name, $rootScope.toStateParams);\n\n                        // now, send them to the signin state so they can log in\n                        $state.go('accessdenied').then(function() {\n                            LoginService.open();\n                        });\n                    }\n                }\n            }\n        }\n\n        function changePassword (newPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return Password.save(newPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function createAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Register.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    this.logout();\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function login (credentials, callback) {\n            var cb = callback || angular.noop;\n            var deferred = $q.defer();\n\n            AuthServerProvider.login(credentials)\n                .then(loginThen)\n                .catch(function (err) {\n                    this.logout();\n                    deferred.reject(err);\n                    return cb(err);\n                }.bind(this));\n\n            function loginThen (data) {\n                Principal.identity(true).then(function(account) {\n                    // After the login the language will be changed to\n                    // the language selected by the user during his registration\n                    if (account!== null) {\n                         loadDefaultUserData(account);\n                        $translate.use(account.langKey).then(function () {\n                            $translate.refresh();\n                        });\n                    }\n                    deferred.resolve(data);\n                });\n                return cb();\n            }\n\n            return deferred.promise;\n        }\n\n        function loginWithToken(jwt, rememberMe) {\n            return AuthServerProvider.loginWithToken(jwt, rememberMe);\n        }\n\n        function loadDefaultUserData(account) {\n            MyWebsiteOffline.reloadAll();\n            Account.social().$promise\n                .then(getSocialAccountThen);\n\n            function getSocialAccountThen(result) {\n                if(account.data != \"\"){\n                    account[\"displayName\"] = result.data.displayName;\n                    account[\"imageURL\"] = result.data.imageURL;\n                    notify();\n                }\n            }\n            notify();\n        }\n\n\n\n        function logout () {\n            AuthServerProvider.logout();\n            Principal.authenticate(null);\n        }\n\n        function resetPasswordFinish (keyAndPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetFinish.save(keyAndPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function resetPasswordInit (mail, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetInit.save(mail, function() {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function updateAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Account.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function getPreviousState() {\n            var previousState = $sessionStorage.previousState;\n            return previousState;\n        }\n\n        function resetPreviousState() {\n            delete $sessionStorage.previousState;\n        }\n\n        function storePreviousState(previousStateName, previousStateParams) {\n            var previousState = { \"name\": previousStateName, \"params\": previousStateParams };\n            $sessionStorage.previousState = previousState;\n        }\n\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('AuthServerProvider', AuthServerProvider);\n\n    AuthServerProvider.$inject = ['$http', '$localStorage', '$sessionStorage', '$q'];\n\n    function AuthServerProvider ($http, $localStorage, $sessionStorage, $q) {\n        var service = {\n            getToken: getToken,\n            login: login,\n            loginWithToken: loginWithToken,\n            storeAuthenticationToken: storeAuthenticationToken,\n            logout: logout\n        };\n\n        return service;\n\n        function getToken () {\n            return $localStorage.authenticationToken || $sessionStorage.authenticationToken;\n        }\n\n        function login (credentials) {\n\n            var data = {\n                username: credentials.username,\n                password: credentials.password,\n                rememberMe: credentials.rememberMe\n            };\n            return $http.post('api/authenticate', data).success(authenticateSuccess);\n\n            function authenticateSuccess (data, status, headers) {\n                var bearerToken = headers('Authorization');\n                if (angular.isDefined(bearerToken) && bearerToken.slice(0, 7) === 'Bearer ') {\n                    var jwt = bearerToken.slice(7, bearerToken.length);\n                    service.storeAuthenticationToken(jwt, credentials.rememberMe);\n                    return jwt;\n                }\n            }\n        }\n\n        function loginWithToken(jwt, rememberMe) {\n            var deferred = $q.defer();\n\n            if (angular.isDefined(jwt)) {\n                this.storeAuthenticationToken(jwt, rememberMe);\n                deferred.resolve(jwt);\n            } else {\n                deferred.reject();\n            }\n\n            return deferred.promise;\n        }\n\n        function storeAuthenticationToken(jwt, rememberMe) {\n            if(rememberMe){\n                $localStorage.authenticationToken = jwt;\n            } else {\n                $sessionStorage.authenticationToken = jwt;\n            }\n        }\n\n        function logout () {\n            delete $localStorage.authenticationToken;\n            delete $sessionStorage.authenticationToken;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Activate', Activate);\n\n    Activate.$inject = ['$resource'];\n\n    function Activate ($resource) {\n        var service = $resource('api/activate', {}, {\n            'get': { method: 'GET', params: {}, isArray: false}\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Account', Account);\n\n    Account.$inject = ['$resource'];\n\n    function Account ($resource) {\n        var service = $resource('api/account', {}, {\n            'get': { method: 'GET', params: {}, isArray: false,\n                interceptor: {\n                    response: function(response) {\n                        // expose response\n                        return response;\n                    }\n                }\n            },\n            'social': { method: 'GET', url: 'api/account/social', params: {}, isArray: false,\n                interceptor: {\n                    response: function(response) {\n                        // expose response\n                        return response;\n                    }\n                }\n            }\n        });\n\n        return service;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('website-payment', {\n            parent: 'payment',\n            url: '/payment/website/{id}',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'gsiteApp.website.detail.title'\n            },\n            params: {\n                id: null\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/payment/website-payment/website-payment.html',\n                    controller: 'WebsitePaymentController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('website-payment');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Website', function ($stateParams, Website) {\n                    return Website.get({id: $stateParams.id}).$promise;\n                }]\n            }\n        }).state('website-payment.pay', {\n            parent: 'payment',\n            url: '/website-payment/{id}',\n            data: {\n                authorities: ['ROLE_USER']\n            },\n            views: {\n                'content@': {\n                    controller: 'WebsitePaymentPayPalController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('website-payment');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Website', function ($stateParams, Website) {\n                    return Website.get({id: $stateParams.id}).$promise;\n                }]\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('WebsitePayment', WebsitePayment);\n\n    WebsitePayment.$inject = ['$resource', 'DateUtils'];\n\n    function WebsitePayment($resource, DateUtils) {\n        var resourceUrl = 'api/website-payment/';\n\n        return $resource(resourceUrl, {}, {\n            'create': {method: 'POST', url: 'api/website-payment/create'},\n            'execute': {method: 'POST', url: 'api/website-payment/execute'},\n            'card': {method: 'POST', url: 'api/website-payment/credit-card'}\n        });\n    }\n})();\n\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebsitePaymentPayPalController', WebsitePaymentPayPalController);\n\n    WebsitePaymentPayPalController.$inject = ['$state', '$stateParams', 'WebsitePayment', '$location', 'MyWebsite'];\n\n    function WebsitePaymentPayPalController( $state, $stateParams, WebsitePayment, $location, MyWebsite) {\n        var vm = this;\n\n        var payment = $location.search();\n\n        var webId = $stateParams.id;\n\n        WebsitePayment.execute({\n            paymentID: payment.paymentId, payerID: payment.PayerID\n        }, null, onExecuteSuccess, onExecuteError);\n\n\n        function onExecuteSuccess(data) {\n            MyWebsite.paid({id: webId},null, onSuccess);\n\n            function onSuccess() {\n                $state.go('my-website', null, {reload: 'my-website'});\n            }\n        }\n\n        function onExecuteError() {\n            $state.go('website-payment', {id: webId}, {reload: 'website-payment'});\n        }\n\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebsitePaymentController', WebsitePaymentController);\n\n    WebsitePaymentController.$inject = ['entity','$state','WebsitePayment','$window','MyWebsite','AlertService'];\n\n    function WebsitePaymentController( entity, $state, WebsitePayment, $window, MyWebsite, AlertService) {\n        var vm = this;\n\n        if(entity == null) {\n            $state.go(\"template\");\n            return;\n        }\n        vm.website = entity;\n\n        vm.buyNow = buyNow;\n        vm.buyWithCard = buyWithCard;\n        vm.card = {\n            number: null,\n            type: null,\n            firstName: null,\n            lastName: null,\n            month: null,\n            year: null,\n            cvv: null\n        };\n\n        function buyNow() {\n            vm.isPaying = true;\n            WebsitePayment.create({\n                webId: vm.website.id\n            },null, onSuccess);\n\n            function onSuccess(data) {\n                $window.location.href  = data.approval_link;\n            }\n        }\n\n        function buyWithCard() {\n            vm.isPaying = true;\n            WebsitePayment.card({\n                webId: vm.website.id,\n                number: vm.card.number,\n                type: vm.card.type,\n                firstName: vm.card.firstName,\n                lastName: vm.card.lastName,\n                month: vm.card.month,\n                year: vm.card.year,\n                cvv: vm.card.cvv\n            },null,onExecuteSuccess, onExecuteError);\n\n        }\n\n        function onExecuteSuccess() {\n            MyWebsite.paid({id: vm.website.id},null, onSuccess);\n            function onSuccess() {\n                $state.go('my-website', null, {reload: 'my-website'});\n            }\n        }\n\n        function onExecuteError() {\n            vm.isPaying = false;\n            AlertService.error(\"PayPal with timeout. Press buy button again!\");\n        }\n\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('payment', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebsiteDialogController', WebsiteDialogController);\n\n    WebsiteDialogController.$inject = ['$scope', '$mdDialog', 'entity', 'Website','WebTemplate','User'];\n\n    function WebsiteDialogController ( $scope, $mdDialog, entity, Website, WebTemplate, User) {\n        var vm = this;\n\n        vm.templates = [];\n        vm.users = [];\n\n        vm.website = entity;\n        vm.isDomainError = false;\n        vm.closeDialog = closeDialog;\n        vm.datePickerOpenStatus = {};\n        vm.openCalendar = openCalendar;\n        vm.save = save;\n\n        function closeDialog () {\n            $mdDialog.cancel('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.website.id !== null) {\n                Website.update(vm.website, onSaveSuccess, onSaveError);\n            } else {\n                Website.save(vm.website, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('gsiteApp:websiteUpdate', result);\n            $mdDialog.hide(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError (result) {\n            vm.isSaving = false;\n            if(result.data != null){\n                vm.isDomainError = true;\n            }\n        }\n\n        vm.datePickerOpenStatus.created = false;\n\n        function openCalendar (date) {\n            vm.datePickerOpenStatus[date] = true;\n        }\n\n        findAllTemplates();\n\n        function findAllTemplates() {\n            WebTemplate.query({\n                page: 0,\n                size: 5\n            }, onSuccess);\n\n            function onSuccess(data) {\n                for (var i = 0; i < data.length; i++) {\n                    vm.templates.push(data[i]);\n                }\n            }\n        }\n\n\n        findAllUsers();\n\n        function findAllUsers() {\n            User.query({\n                page: 0,\n                size: 5\n            }, onSuccess);\n\n            function onSuccess(data) {\n                for (var i = 0; i < data.length; i++) {\n                    vm.users.push(data[i]);\n                }\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebsiteDetailController', WebsiteDetailController);\n\n    WebsiteDetailController.$inject = ['$scope', '$rootScope', 'previousState', 'entity'];\n\n    function WebsiteDetailController($scope, $rootScope, previousState, entity) {\n        var vm = this;\n\n        vm.website = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('gsiteApp:websiteUpdate', function(event, result) {\n            vm.website = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('website', {\n                parent: 'manager',\n                url: '/website',\n                data: {\n                    authorities: ['ROLE_MANAGER'],\n                    pageTitle: 'gsiteApp.website.home.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/website/websites.html',\n                        controller: 'WebsiteController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('website');\n                        $translatePartialLoader.addPart('global');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('website.new', {\n                parent: 'website',\n                url: '/new',\n                data: {\n                    authorities: ['ROLE_MANAGER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/website/website-dialog.html',\n                        controller: 'WebsiteDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: function () {\n                                return {\n                                    id: null,\n                                    name: null,\n                                    des: null,\n                                    domain: null,\n                                    template: null,\n                                    created: new Date(),\n                                    user_id: null,\n                                    paid: false,\n                                    sharedUsers: [],\n                                    custom: {\n                                        toolbar: {\n                                            isEnable: true,\n                                            title: \"Person\",\n                                            textColor: '#FFFFFF'\n                                        },\n                                        homepage: {\n                                            isEnable: true,\n                                            name: \"name\",\n                                            fullName: \"Full name\",\n                                            avatar: null,\n                                            mainImage: 'none'\n                                        },\n                                        sidenav: {\n                                            isEnable: true,\n                                            title: \"Sidenav\",\n                                            textColor: '#FFFFFF',\n                                            backgroundColor: 'white'\n                                        },\n                                        footer: {\n                                            isEnable: true\n                                        },\n                                        basicinfo: {\n                                            isEnable: true,\n                                            firstName: 'First name',\n                                            lastName: 'Last name',\n                                            email: 'email',\n                                            age: 21,\n                                            des: 'description'\n                                        },\n                                        song: {\n                                            isEnable: true,\n                                            items: []\n                                        },\n                                        photo: {\n                                            isEnable: true,\n                                            items: []\n                                        }\n                                    }\n                                };\n                            }\n                        }\n                    }).then(function () {\n                        $state.go('website', null, {\n                            reload: 'website'\n                        });\n                    }, function () {\n                        $state.go('website');\n                    });\n                }]\n            })\n            .state('website.detail', {\n                parent: 'manager',\n                url: '/website/{id}',\n                data: {\n                    authorities: ['ROLE_MANAGER'],\n                    pageTitle: 'gsiteApp.website.detail.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/website/website-detail.html',\n                        controller: 'WebsiteDetailController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('website');\n                        return $translate.refresh();\n                    }],\n                    entity: ['$stateParams', 'Website', function ($stateParams, Website) {\n                        return Website.get({\n                            id: $stateParams.id\n                        }).$promise;\n                    }],\n                    previousState: [\"$state\", function ($state) {\n                        var currentStateData = {\n                            name: $state.current.name || 'website',\n                            params: $state.params,\n                            url: $state.href($state.current.name, $state.params)\n                        };\n                        return currentStateData;\n                    }]\n                }\n            })\n            .state('website.edit', {\n                parent: 'website',\n                url: '/{id}/edit',\n                data: {\n                    authorities: ['ROLE_MANAGER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/website/website-dialog.html',\n                        controller: 'WebsiteDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: ['Website', function (Website) {\n                                return Website.get({\n                                    id: $stateParams.id\n                                }).$promise;\n                            }]\n                        }\n                    }).then(function () {\n                        $state.go('website', null, {\n                            reload: 'website'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            })\n            .state('website.delete', {\n                parent: 'website',\n                url: '/{id}/delete',\n                data: {\n                    authorities: ['ROLE_MANAGER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', 'Website', function ($stateParams, $state, $mdDialog, Website) {\n                    var confirm = $mdDialog.confirm()\n                        .title('You delete this website?')\n                        .textContent('This website and its data will be lost forever!')\n                        .ariaLabel('Lucky day')\n                        .targetEvent(null)\n                        .ok('Yes')\n                        .cancel('Cancel');\n\n                    $mdDialog.show(confirm).then(function () {\n                        Website.delete({id: $stateParams.id});\n                        $state.go('website', null, {\n                            reload: 'website'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            });\n    }\n\n})();\n","(function() {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('Website', Website);\n\n    Website.$inject = ['$resource', 'DateUtils'];\n\n    function Website ($resource, DateUtils) {\n        var resourceUrl =  'api/websites/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                        data.created = DateUtils.convertDateTimeFromServer(data.created);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' },\n            'domain': {method: 'GET', url: 'api/websites/domain'}\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebsiteController', WebsiteController);\n\n    WebsiteController.$inject = ['Website'];\n\n    function WebsiteController(Website) {\n        var vm = this;\n\n        vm.websites = [];\n\n        loadAll();\n\n        function loadAll() {\n            Website.query(function (result) {\n                vm.websites = result;\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebTemplateDialogController', WebTemplateDialogController);\n\n    WebTemplateDialogController.$inject = [ '$scope', '$mdDialog', 'entity', 'WebTemplate'];\n\n    function WebTemplateDialogController ( $scope, $mdDialog, entity, WebTemplate) {\n        var vm = this;\n\n        vm.sources = ['basic-template','latest-template','beautiful-template'];\n        vm.webTemplate = entity;\n        vm.closeDialog = closeDialog;\n        vm.save = save;\n        vm.datePickerOpenStatus = {};\n        vm.openCalendar = openCalendar;\n\n\n        function closeDialog () {\n            $mdDialog.cancel('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.webTemplate.id !== null) {\n                WebTemplate.update(vm.webTemplate, onSaveSuccess, onSaveError);\n            } else {\n                WebTemplate.save(vm.webTemplate, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('gsiteApp:webTemplateUpdate', result);\n            $mdDialog.hide(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n        vm.datePickerOpenStatus.created = false;\n\n        function openCalendar (date) {\n            vm.datePickerOpenStatus[date] = true;\n        }\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebTemplateDetailController', WebTemplateDetailController);\n\n    WebTemplateDetailController.$inject = ['$scope', '$rootScope', 'previousState', 'entity', 'WebTemplate','TemplateStorage','AlertService'];\n\n    function WebTemplateDetailController($scope, $rootScope, previousState, entity, WebTemplate,TemplateStorage,AlertService) {\n        var vm = this;\n\n        vm.webTemplate = entity;\n        vm.previousState = previousState.name;\n\n        var fileName = 'mainImage.jpg';\n        vm.loading = false;\n        vm.upload = upload;\n\n        getMainImage();\n\n        function upload(file) {\n            if (file != null) {\n                vm.loading = true;\n                TemplateStorage.uploadTemplateImage(vm.webTemplate.id, file, fileName).then(onSuccess, onError);\n            }\n\n            function onSuccess(response) {\n                vm.loading = false;\n                vm.webTemplate.image = fileName;\n                WebTemplate.update(vm.webTemplate);\n                AlertService.success(\"OK !\")\n            }\n\n            function onError(response) {\n                vm.loading = false;\n                console.log(response);\n            }\n        }\n\n        function getMainImage() {\n            if (vm.webTemplate.image == null)\n                return;\n            TemplateStorage.getTemplateImage(vm.webTemplate.id, fileName).then(onSuccess, onError);\n            function onSuccess(response) {\n                vm.tempImageLink = response.data.link;\n            }\n\n            function onError(response) {\n                console.log(response);\n            }\n        }\n\n        var unsubscribe = $rootScope.$on('gsiteApp:webTemplateUpdate', function(event, result) {\n            vm.webTemplate = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('web-template', {\n                parent: 'manager',\n                url: '/web-template',\n                data: {\n                    authorities: ['ROLE_MANAGER'],\n                    pageTitle: 'gsiteApp.webTemplate.home.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/web-template/web-templates.html',\n                        controller: 'WebTemplateController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('webTemplate');\n                        $translatePartialLoader.addPart('global');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('web-template.new', {\n                parent: 'web-template',\n                url: '/new',\n                data: {\n                    authorities: ['ROLE_MANAGER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/web-template/web-template-dialog.html',\n                        controller: 'WebTemplateDialogController',\n                        controllerAs: 'vm',\n                        targetEvent: null,\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: function () {\n                                return {\n                                    name: null,\n                                    source: null,\n                                    id: null,\n                                    category: null,\n                                    rating: 1,\n                                    price: 0,\n                                    image: null,\n                                    created: new Date()\n                                };\n                            }\n                        }\n                    }).then(function () {\n                        $state.go('web-template', null, {\n                            reload: 'web-template'\n                        });\n                    }, function () {\n                        $state.go('web-template');\n                    });\n                }]\n            })\n            .state('web-template.detail', {\n                parent: 'manager',\n                url: '/web-template/{id}',\n                data: {\n                    authorities: ['ROLE_MANAGER'],\n                    pageTitle: 'gsiteApp.webTemplate.detail.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/web-template/web-template-detail.html',\n                        controller: 'WebTemplateDetailController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('webTemplate');\n                        return $translate.refresh();\n                    }],\n                    entity: ['$stateParams', 'WebTemplate', function ($stateParams, WebTemplate) {\n                        return WebTemplate.get({\n                            id: $stateParams.id\n                        }).$promise;\n                    }],\n                    previousState: [\"$state\", function ($state) {\n                        var currentStateData = {\n                            name: $state.current.name || 'web-template',\n                            params: $state.params,\n                            url: $state.href($state.current.name, $state.params)\n                        };\n                        return currentStateData;\n                    }]\n                }\n            })\n            .state('web-template.edit', {\n                parent: 'web-template',\n                url: '/{id}/edit',\n                data: {\n                    authorities: ['ROLE_MANAGER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/web-template/web-template-dialog.html',\n                        controller: 'WebTemplateDialogController',\n                        controllerAs: 'vm',\n                        targetEvent: null,\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: ['WebTemplate', function (WebTemplate) {\n                                return WebTemplate.get({\n                                    id: $stateParams.id\n                                }).$promise;\n                            }]\n                        }\n                    }).then(function () {\n                        $state.go('web-template', null, {\n                            reload: 'web-template'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            })\n            .state('web-template.delete', {\n                parent: 'web-template',\n                url: '/{id}/delete',\n                data: {\n                    authorities: ['ROLE_MANAGER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', 'WebTemplate', 'TemplateStorage', function ($stateParams, $state, $mdDialog, WebTemplate, TemplateStorage) {\n                    var confirm = $mdDialog.confirm()\n                        .title('You delete this template?')\n                        .textContent('This template and its data will be lost forever!')\n                        .ariaLabel('Lucky day')\n                        .targetEvent(null)\n                        .ok('Yes')\n                        .cancel('Cancel');\n\n                    $mdDialog.show(confirm).then(function () {\n                        WebTemplate.get({id: $stateParams.id}, function (data) {\n                            TemplateStorage.deleteTemplateImage(data.id, data.image);\n                            WebTemplate.delete({id: $stateParams.id});\n                            $state.go('web-template', null, {\n                                reload: 'web-template'\n                            });\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            });\n    }\n\n})();\n","(function() {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('WebTemplate', WebTemplate);\n\n    WebTemplate.$inject = ['$resource'];\n\n    function WebTemplate ($resource) {\n        var resourceUrl =  'api/web-templates/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' },\n            'search': {method: 'GET', url: 'api/_search/web-templates/:id', isArray: true}\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebTemplateController', WebTemplateController);\n\n    WebTemplateController.$inject = [ 'WebTemplate', 'AlertService'];\n\n    function WebTemplateController( WebTemplate, AlertService) {\n        var vm = this;\n\n        vm.webTemplates = [];\n\n        loadAll();\n        function loadAll() {\n            WebTemplate.query({}, onSuccess, onError);\n\n            function onSuccess(data) {\n                vm.webTemplates = data;\n            }\n\n            function onError(error) {\n                AlertService.error(error.data.message);\n            }\n        }\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('QuestionDialogController', QuestionDialogController);\n\n    QuestionDialogController.$inject = ['$scope', '$mdDialog', 'entity', 'Question', 'User'];\n\n    function QuestionDialogController ( $scope, $mdDialog, entity, Question, User) {\n        var vm = this;\n\n        vm.users = [];\n\n        vm.question = entity;\n        vm.closeDialog = closeDialog;\n        vm.datePickerOpenStatus = {};\n        vm.openCalendar = openCalendar;\n        vm.save = save;\n\n\n        function closeDialog () {\n            $mdDialog.cancel('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.question.id !== null) {\n                Question.update(vm.question, onSaveSuccess, onSaveError);\n            } else {\n                Question.save(vm.question, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('gsiteApp:questionUpdate', result);\n            $mdDialog.hide(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n        vm.datePickerOpenStatus.created = false;\n\n        function openCalendar (date) {\n            vm.datePickerOpenStatus[date] = true;\n        }\n\n        findAllUsers();\n\n        function findAllUsers() {\n            User.query({\n                page: 0,\n                size: 5\n            }, onSuccess);\n\n            function onSuccess(data) {\n                for(var i = 0; i < data.length; i++){\n                    vm.users.push(data[i]);\n                }\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('QuestionDetailController', QuestionDetailController);\n\n    QuestionDetailController.$inject = ['$scope', '$rootScope', 'previousState', 'entity', 'Question'];\n\n    function QuestionDetailController($scope, $rootScope, previousState, entity, Question) {\n        var vm = this;\n\n        vm.question = entity;\n        vm.previousState = previousState.name;\n        vm.setFrequent = setFrequent;\n\n\n\n        function setFrequent() {\n            if(vm.question.id != null)\n                Question.update(vm.question);\n        }\n\n        var unsubscribe = $rootScope.$on('gsiteApp:questionUpdate', function(event, result) {\n            vm.question = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n\n\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('question', {\n                parent: 'manager',\n                url: '/question',\n                data: {\n                    authorities: ['ROLE_USER'],\n                    pageTitle: 'gsiteApp.question.home.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/question/questions.html',\n                        controller: 'QuestionController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('question');\n                        $translatePartialLoader.addPart('global');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('question.new', {\n                parent: 'question',\n                url: '/new',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/question/question-dialog.html',\n                        controller: 'QuestionDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: function () {\n                                return {\n                                    content: null,\n                                    answer: null,\n                                    created: new Date(),\n                                    user_id: null,\n                                    isFrequent: false,\n                                    id: null\n                                };\n                            }\n                        }\n                    }).then(function () {\n                        $state.go('question', null, {\n                            reload: 'question'\n                        });\n                    }, function () {\n                        $state.go('question');\n                    });\n                }]\n            }).state('question.detail', {\n                parent: 'manager',\n                url: '/question/{id}',\n                data: {\n                    authorities: ['ROLE_USER'],\n                    pageTitle: 'gsiteApp.question.detail.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/question/question-detail.html',\n                        controller: 'QuestionDetailController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('question');\n                        return $translate.refresh();\n                    }],\n                    entity: ['$stateParams', 'Question', function ($stateParams, Question) {\n                        return Question.get({\n                            id: $stateParams.id\n                        }).$promise;\n                    }],\n                    previousState: [\"$state\", function ($state) {\n                        var currentStateData = {\n                            name: $state.current.name || 'question',\n                            params: $state.params,\n                            url: $state.href($state.current.name, $state.params)\n                        };\n                        return currentStateData;\n                    }]\n                }\n            })\n            .state('question.edit', {\n                parent: 'question',\n                url: '/{id}/edit',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/question/question-dialog.html',\n                        controller: 'QuestionDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: ['Question', function (Question) {\n                                return Question.get({\n                                    id: $stateParams.id\n                                }).$promise;\n                            }]\n                        }\n                    }).then(function () {\n                        $state.go('question', null, {\n                            reload: 'question'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            })\n            .state('question.delete', {\n                parent: 'question',\n                url: '/{id}/delete',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', 'Question', function ($stateParams, $state, $mdDialog, Question) {\n                    var confirm = $mdDialog.confirm()\n                        .title('You delete this question?')\n                        .textContent('This question and its data will be lost forever!')\n                        .ariaLabel('Lucky day')\n                        .targetEvent(null)\n                        .ok('Yes')\n                        .cancel('Cancel');\n\n                    $mdDialog.show(confirm).then(function () {\n                        Question.delete({id: $stateParams.id});\n                        $state.go('question', null, {\n                            reload: 'question'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            });\n    }\n\n})();\n","(function() {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('Question', Question);\n\n    Question.$inject = ['$resource', 'DateUtils'];\n\n    function Question ($resource, DateUtils) {\n        var resourceUrl =  'api/questions/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                        data.created = DateUtils.convertDateTimeFromServer(data.created);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' },\n            'myquestion': {method: 'GET', url: 'api/myquestions',isArray: true},\n            'faq': {method: 'GET', url: 'api/faq',isArray: true}\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('QuestionController', QuestionController);\n\n    QuestionController.$inject = [ 'Question', 'AlertService'];\n\n    function QuestionController ( Question, AlertService) {\n        var vm = this;\n\n        vm.questions = [];\n\n        loadAll();\n\n        function loadAll () {\n            Question.query({}, onSuccess, onError);\n\n            function onSuccess(data) {\n                vm.questions = data;\n            }\n\n            function onError(error) {\n                AlertService.error(error.data.message);\n            }\n        }\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('NotificationDialogController', NotificationDialogController);\n\n    NotificationDialogController.$inject = [ '$scope',  '$mdDialog', 'entity', 'Notification'];\n\n    function NotificationDialogController ( $scope,  $mdDialog, entity, Notification) {\n        var vm = this;\n\n        vm.users = [];\n\n        vm.notification = entity;\n        vm.closeDialog = closeDialog;\n        vm.save = save;\n\n\n        function closeDialog () {\n            $mdDialog.cancel('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.notification.id !== null) {\n                Notification.update(vm.notification, onSaveSuccess, onSaveError);\n            } else {\n                Notification.save(vm.notification, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('gsiteApp:notificationUpdate', result);\n            $mdDialog.hide(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('NotificationDetailController', NotificationDetailController);\n\n    NotificationDetailController.$inject = ['$scope', '$rootScope', 'previousState', 'entity'];\n\n    function NotificationDetailController($scope, $rootScope, previousState, entity) {\n        var vm = this;\n\n        vm.notification = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('gsiteApp:notificationUpdate', function(event, result) {\n            vm.notification = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('notification', {\n                parent: 'manager',\n                url: '/notification',\n                data: {\n                    authorities: ['ROLE_USER'],\n                    pageTitle: 'gsiteApp.notification.home.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/notification/notifications.html',\n                        controller: 'NotificationController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('notification');\n                        $translatePartialLoader.addPart('global');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('notification.detail', {\n                parent: 'notification',\n                url: '/notification/{id}',\n                data: {\n                    authorities: ['ROLE_USER'],\n                    pageTitle: 'gsiteApp.notification.detail.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/notification/notification-detail.html',\n                        controller: 'NotificationDetailController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('notification');\n                        return $translate.refresh();\n                    }],\n                    entity: ['$stateParams', 'Notification', function ($stateParams, Notification) {\n                        return Notification.get({id: $stateParams.id}).$promise;\n                    }],\n                    previousState: [\"$state\", function ($state) {\n                        var currentStateData = {\n                            name: $state.current.name || 'notification',\n                            params: $state.params,\n                            url: $state.href($state.current.name, $state.params)\n                        };\n                        return currentStateData;\n                    }]\n                }\n            })\n            .state('notification.new', {\n                parent: 'notification',\n                url: '/new',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/notification/notification-dialog.html',\n                        controller: 'NotificationDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: function () {\n                                return {\n                                    title: null,\n                                    content: null,\n                                    isRead: null,\n                                    created: new Date(),\n                                    sentUsers: [],\n                                    id: null\n                                };\n                            }\n                        }\n                    }).then(function () {\n                        $state.go('notification', null, {reload: 'notification'});\n                    }, function () {\n                        $state.go('notification');\n                    });\n                }]\n            })\n            .state('notification.edit', {\n                parent: 'notification',\n                url: '/{id}/edit',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/notification/notification-dialog.html',\n                        controller: 'NotificationDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: ['Notification', function (Notification) {\n                                return Notification.get({id: $stateParams.id}).$promise;\n                            }]\n                        }\n                    }).then(function () {\n                        $state.go('notification', null, {reload: 'notification'});\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            })\n            .state('notification.delete', {\n                parent: 'notification',\n                url: '/{id}/delete',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', 'Notification', function ($stateParams, $state, $mdDialog, Notification) {\n                    var confirm = $mdDialog.confirm()\n                        .title('You delete this notification?')\n                        .textContent('This notification and its data will be lost forever!')\n                        .ariaLabel('Lucky day')\n                        .targetEvent(null)\n                        .ok('Yes')\n                        .cancel('Cancel');\n\n                    $mdDialog.show(confirm).then(function () {\n                        Notification.delete({id: $stateParams.id});\n                        $state.go('notification', null, {\n                            reload: 'notification'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            });\n    }\n\n})();\n","(function() {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('Notification', Notification);\n\n    Notification.$inject = ['$resource', 'DateUtils'];\n\n    function Notification ($resource, DateUtils) {\n        var resourceUrl =  'api/notifications/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                        data.created = DateUtils.convertDateTimeFromServer(data.created);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' },\n            'mynotifications': { method: 'GET', url:'api/mynotifications', isArray: true}\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('NotificationController', NotificationController);\n\n    NotificationController.$inject = ['Notification', 'AlertService'];\n\n    function NotificationController(Notification, AlertService) {\n        var vm = this;\n\n        vm.notifications = [];\n\n        loadAll();\n\n        function loadAll() {\n            Notification.query({}, onSuccess, onError);\n\n\n            function onSuccess(data) {\n                vm.notifications = data;\n            }\n\n            function onError(error) {\n                AlertService.error(error.data.message);\n            }\n        }\n\n\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('manager', {\n            abstract: true,\n            parent: 'app',\n            views: {\n                'managerbar@manager': {\n                    templateUrl: 'app/layouts/managerbar/managerbar.html',\n                    controller: 'ManagerBarController',\n                    controllerAs: 'vm'\n                },\n                'content@': {\n                    templateUrl: 'app/manager/manager.html',\n                }\n\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('FeedbackDialogController', FeedbackDialogController);\n\n    FeedbackDialogController.$inject = [ '$scope', '$mdDialog', 'entity', 'Feedback', 'User'];\n\n    function FeedbackDialogController ( $scope,$mdDialog, entity, Feedback, User) {\n        var vm = this;\n\n        vm.users = [];\n\n        vm.feedback = entity;\n        vm.closeDialog = closeDialog;\n        vm.save = save;\n\n\n\n        function closeDialog () {\n            $mdDialog.cancel('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.feedback.id !== null) {\n                Feedback.update(vm.feedback, onSaveSuccess, onSaveError);\n            } else {\n                Feedback.save(vm.feedback, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('gsiteApp:feedbackUpdate', result);\n            $mdDialog.hide(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n        findAllUsers();\n\n        function findAllUsers() {\n            User.query({\n                page: 0,\n                size: 5\n            }, onSuccess);\n\n            function onSuccess(data) {\n                for(var i = 0; i < data.length; i++){\n                    vm.users.push(data[i]);\n                }\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('FeedbackDetailController', FeedbackDetailController);\n\n    FeedbackDetailController.$inject = ['$scope', '$rootScope',  'previousState', 'entity'];\n\n    function FeedbackDetailController($scope, $rootScope, previousState, entity) {\n        var vm = this;\n\n        vm.feedback = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('gsiteApp:feedbackUpdate', function(event, result) {\n            vm.feedback = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('feedback', {\n                parent: 'manager',\n                url: '/feedback',\n                data: {\n                    authorities: ['ROLE_USER'],\n                    pageTitle: 'gsiteApp.feedback.home.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/feedback/feedbacks.html',\n                        controller: 'FeedbackController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('feedback');\n                        $translatePartialLoader.addPart('global');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('feedback.new', {\n                parent: 'feedback',\n                url: '/new',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/feedback/feedback-dialog.html',\n                        controller: 'FeedbackDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: function () {\n                                return {\n                                    title: null,\n                                    content: null,\n                                    created: new Date(),\n                                    user_id: null,\n                                    id: null\n                                };\n                            }\n                        }\n                    }).then(function () {\n                        $state.go('feedback', null, {\n                            reload: 'feedback'\n                        });\n                    }, function () {\n                        $state.go('feedback');\n                    });\n                }]\n            })\n            .state('feedback.detail', {\n                parent: 'manager',\n                url: '/feedback/{id}',\n                data: {\n                    authorities: ['ROLE_USER'],\n                    pageTitle: 'gsiteApp.feedback.detail.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/feedback/feedback-detail.html',\n                        controller: 'FeedbackDetailController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('feedback');\n                        return $translate.refresh();\n                    }],\n                    entity: ['$stateParams', 'Feedback', function ($stateParams, Feedback) {\n                        return Feedback.get({\n                            id: $stateParams.id\n                        }).$promise;\n                    }],\n                    previousState: [\"$state\", function ($state) {\n                        var currentStateData = {\n                            name: $state.current.name || 'feedback',\n                            params: $state.params,\n                            url: $state.href($state.current.name, $state.params)\n                        };\n                        return currentStateData;\n                    }]\n                }\n            })\n            .state('feedback.edit', {\n                parent: 'feedback',\n                url: '/{id}/edit',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/feedback/feedback-dialog.html',\n                        controller: 'FeedbackDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: ['Feedback', function (Feedback) {\n                                return Feedback.get({\n                                    id: $stateParams.id\n                                }).$promise;\n                            }]\n                        }\n                    }).then(function () {\n                        $state.go('feedback', null, {\n                            reload: 'feedback'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            })\n            .state('feedback.delete', {\n                parent: 'feedback',\n                url: '/{id}/delete',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', 'Feedback', function ($stateParams, $state, $mdDialog, Feedback) {\n                    var confirm = $mdDialog.confirm()\n                        .title('You delete this feedback?')\n                        .textContent('This feedback and its data will be lost forever!')\n                        .ariaLabel('Lucky day')\n                        .targetEvent(null)\n                        .ok('Yes')\n                        .cancel('Cancel');\n\n                    $mdDialog.show(confirm).then(function () {\n                        Feedback.delete({id: $stateParams.id});\n                        $state.go('feedback', null, {\n                            reload: 'feedback'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            });\n    }\n\n})();\n","(function() {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('Feedback', Feedback);\n\n    Feedback.$inject = ['$resource', 'DateUtils'];\n\n    function Feedback ($resource, DateUtils) {\n        var resourceUrl =  'api/feedbacks/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                        data.created = DateUtils.convertDateTimeFromServer(data.created);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' },\n            'myfeedback': {method: 'GET', url: 'api/myfeedbacks',isArray: true}\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('FeedbackController', FeedbackController);\n\n    FeedbackController.$inject = ['Feedback', 'AlertService'];\n\n    function FeedbackController(Feedback,  AlertService) {\n        var vm = this;\n\n        vm.feedbacks = [];\n\n        loadAll();\n\n        function loadAll() {\n            Feedback.query({}, onSuccess, onError);\n\n\n            function onSuccess(data) {\n                vm.feedbacks = data;\n            }\n\n            function onError(error) {\n                AlertService.error(error.data.message);\n            }\n        }\n\n\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .provider('ToolbarService', ToolbarService);\n\n    function ToolbarService() {\n        this.$get = getService;\n\n        getService.$inject = ['$mdSidenav'];\n\n        function getService($mdSidenav) {\n\n            return {\n                toggleSidenav: toggleSidenav\n            };\n\n            function toggleSidenav() {\n                return function () {\n                    return $mdSidenav('sidenav')\n                        .toggle();\n                };\n            }\n        }\n\n    }\n})();","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('ToolbarController', ToolbarController);\n\n    ToolbarController.$inject = ['$state', '$timeout', 'ToolbarService', 'LanguageService', 'LoginService', 'Principal', 'TemplateSearch'];\n\n    function ToolbarController($state, $timeout, ToolbarService, LanguageService, LoginService, Principal, TemplateSearch) {\n\n        var vm = this;\n        vm.toggleSidenav = ToolbarService.toggleSidenav();\n        vm.showLoginDialog = LoginService.open;\n        vm.isAuthenticated = Principal.isAuthenticated;\n        vm.search = search;\n        vm.predicate = 'name';\n\n        vm.changeEnglish = changeEnglish;\n        vm.changeVietnam = changeVietnam;\n\n        function search() {\n            $timeout(function () {\n                angular.element('#searchInput').focus();\n            });\n\n            TemplateSearch.search(vm.searchText);\n            checkState();\n        }\n\n        function checkState() {\n            if ($state.current.name != 'template')\n                $state.go('template');\n        }\n\n        function changeEnglish() {\n            LanguageService.changeLanguage('en');\n        }\n\n        function changeVietnam() {\n            LanguageService.changeLanguage('vi');\n        }\n    }\n\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('SupportBarController', SupportBarController);\n\n    SupportBarController.$inject = ['$state','Principal'];\n\n    function SupportBarController($state,Principal) {\n        var vm = this;\n        vm.currentState = $state.current.name;\n\n        vm.isAuthenticated = Principal.isAuthenticated;\n\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('SidenavController', SidenavController);\n\n    SidenavController.$inject = ['$state','$scope', 'ToolbarService', 'LoginService', 'Principal', 'ProfileService', 'LanguageService', '$location', '$anchorScroll','Auth'];\n\n    function SidenavController($state, $scope,ToolbarService, LoginService, Principal, ProfileService, LanguageService, $location, $anchorScroll,Auth) {\n        var vm = this;\n\n        vm.toggleSidenav = ToolbarService.toggleSidenav();\n        vm.showLoginDialog = LoginService.open;\n\n\n        vm.isAuthenticated = Principal.isAuthenticated;\n\n        vm.showLoginDialog = LoginService.open;\n        vm.goFeatureSec = goFeatureSec;\n        vm.goHomeSec = goHomeSec;\n        vm.changeLanguage = changeLanguage;\n\n        vm.username = null;\n        vm.userEmail = null;\n\n        ProfileService.getProfileInfo().then(function (response) {\n            vm.inProduction = response.inProduction;\n            vm.swaggerEnabled = response.swaggerEnabled;\n        });\n\n        getUserInfo();\n\n        function getUserInfo() {\n            Principal.identity().then(function (user) {\n                vm.userEmail = user.email;\n                vm.userImage = user.imageURL;\n\n                if (user.displayName != null)\n                    vm.username = user.displayName;\n                else if (user.firstName == null)\n                    vm.username = user.login;\n                else\n                    vm.username = user.firstName + ' ' + user.lastName;\n\n            });\n        }\n\n        Auth.subscribe($scope, function somethingChanged() {\n                getUserInfo();\n        });\n\n\n        function goFeatureSec() {\n            vm.toggleSidenav();\n            if ($state.current.name == 'home') {\n                $location.hash('features');\n                $anchorScroll();\n            } else\n                $state.go('home');\n\n        }\n\n        function goHomeSec() {\n            vm.toggleSidenav();\n            if ($state.current.name == 'home') {\n                $location.hash('home');\n                $anchorScroll();\n            }\n            else\n                $state.go('home');\n        }\n\n\n        function changeLanguage() {\n            LanguageService.changeLanguage(vm.langKey);\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('QuickToolController', QuickToolController);\n\n    QuickToolController.$inject = [];\n\n    function QuickToolController() {\n        var vm = this;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('ManagerBarController', ManagerBarController);\n\n    ManagerBarController.$inject = ['$state'];\n\n    function ManagerBarController($state) {\n        var vm = this;\n        vm.currentState = $state.current.name;\n\n    }\n})();","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('FooterController', FooterController);\n\n    FooterController.$inject = ['$state'];\n\n    function FooterController($state) {\n        var vm = this;\n\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('error', {\n                parent: 'app',\n                url: '/error',\n                data: {\n                    authorities: [],\n                    pageTitle: 'error.title'\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/error.html'\n                    }\n                },\n                resolve: {\n                    mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('accessdenied', {\n                parent: 'app',\n                url: '/accessdenied',\n                data: {\n                    authorities: []\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/accessdenied.html'\n                    }\n                },\n                resolve: {\n                    mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            }).state('pagenotfound', {\n            url: '/pagenotfound',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/layouts/error/pagenotfound.html'\n                }\n            },\n            resolve: {\n                mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                    $translatePartialLoader.addPart('error');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('CustomSidenavController', CustomSidenavController);\n\n    CustomSidenavController.$inject = ['$state', '$scope', 'Principal', 'ProfileService', 'LoginService', '$location', '$anchorScroll','Auth'];\n\n    function CustomSidenavController($state, $scope, Principal, ProfileService, LoginService, $location, $anchorScroll,Auth) {\n        var vm = this;\n\n        vm.isAuthenticated = Principal.isAuthenticated;\n\n        vm.showLoginDialog = LoginService.open;\n        vm.goFeatureSec = goFeatureSec;\n        vm.goHomeSec = goHomeSec;\n        vm.goTemplateSec = goTemplateSec;\n\n        vm.username = null;\n        vm.userEmail = null;\n        vm.userImage = null;\n\n        ProfileService.getProfileInfo().then(function (response) {\n            vm.inProduction = response.inProduction;\n            vm.swaggerEnabled = response.swaggerEnabled;\n        });\n\n        getUserInfo();\n\n        function getUserInfo() {\n            Principal.identity().then(function (user) {\n                vm.userEmail = user.email;\n                vm.userImage = user.imageURL;\n\n                if (user.displayName != null)\n                    vm.username = user.displayName;\n                else if (user.firstName == null)\n                    vm.username = user.login;\n                else\n                    vm.username = user.firstName + ' ' + user.lastName;\n            });\n        }\n\n        Auth.subscribe($scope, function somethingChanged() {\n                getUserInfo();\n        });\n\n\n        function goFeatureSec() {\n            $location.hash('features');\n            $anchorScroll();\n        }\n\n        function goHomeSec() {\n            if ($state.current.name == 'home') {\n                $location.hash('home');\n                $anchorScroll();\n            }\n            else\n                $state.go('home');\n        }\n\n        function goTemplateSec() {\n            if ($state.current.name == 'home') {\n                $location.hash('templates');\n                $anchorScroll();\n            }\n            else\n                $state.go('template');\n        }\n\n\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('AdminBarController', AdminBarController);\n\n    AdminBarController.$inject = ['$state'];\n\n    function AdminBarController($state) {\n        var vm = this;\n        vm.currentState = $state.current.name;\n    }\n})();","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('AccountBarController', AccountBarController);\n\n    AccountBarController.$inject = ['$state'];\n\n    function AccountBarController($state) {\n        var vm = this;\n        vm.currentState = $state.current.name;\n\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('home', {\n            parent: 'app',\n            url: '/',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/home/home.html',\n                    controller: 'HomeController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                    $translatePartialLoader.addPart('home');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('HomeController', HomeController);\n\n    HomeController.$inject = ['$scope', 'Principal', 'LoginService', '$state', 'TemplateService'];\n\n    function HomeController($scope, Principal, LoginService, $state, TemplateService) {\n        var vm = this;\n\n        vm.account = null;\n        vm.isAuthenticated = null;\n        vm.login = LoginService.open;\n        vm.register = register;\n\n        $scope.$on('authenticationSuccess', function () {\n            getAccount();\n        });\n\n\n        getAccount();\n\n        function getAccount() {\n            Principal.identity().then(function (account) {\n                vm.account = account;\n                vm.isAuthenticated = Principal.isAuthenticated;\n            });\n        }\n\n        vm.webTemplates = [];\n\n\n        loadAllTemplates();\n\n        TemplateService.subscribe($scope, function somethingChanged() {\n            loadAllTemplates();\n        });\n\n        function loadAllTemplates() {\n            var templates = TemplateService.all();\n            if (templates.length > 3)\n                vm.webTemplates = templates.slice(0, 3)\n            else\n                vm.webTemplates = templates;\n        }\n\n        function register() {\n            $state.go('register');\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('entity', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('support', {\n            abstract: true,\n            parent: 'customer',\n            views: {\n                'supportbar@support': {\n                    templateUrl: 'app/layouts/supportbar/supportbar.html',\n                    controller: 'SupportBarController',\n                    controllerAs: 'vm'\n                },\n                'content@': {\n                    templateUrl: 'app/customer/support/support.html',\n                }\n            }\n        });\n    }\n})();","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyQuestionDialogController', MyQuestionDialogController);\n\n    MyQuestionDialogController.$inject = ['$mdDialog', 'MyQuestionService'];\n\n    function MyQuestionDialogController($mdDialog, MyQuestionService) {\n        var vm = this;\n        vm.question = {\n            content: null,\n            answer: null,\n            created: new Date(),\n            is_frequent: false,\n            userId: null\n        };\n\n        vm.closeDialog = closeDialog;\n        vm.submit = submit;\n\n        function closeDialog() {\n            $mdDialog.cancel();\n        }\n\n        function submit() {\n            MyQuestionService.add(vm.question);\n            $mdDialog.hide();\n        }\n\n\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('my-question', {\n            parent: 'support',\n            url: '/my-question',\n            data: {\n                authorities: [\"ROLE_USER\"],\n                pageTitle: 'gsiteApp.template.home.title'\n            },\n            views: {\n                'support-content@support': {\n                    templateUrl: 'app/customer/support/my-question/my-questions.html',\n                    controller: 'MyQuestionController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                    $translatePartialLoader.addPart('my-question');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('my-question.new', {\n            parent: 'my-question',\n            url: '/my-question/new',\n            data: {\n                authorities: [\"ROLE_USER\"]\n            },\n            params: {\n                template_id: null\n            },\n            onEnter: ['$state', '$mdDialog', function ($state, $mdDialog) {\n                $mdDialog.show({\n                    templateUrl: 'app/customer/support/my-question/my-question-dialog.html',\n                    controller: 'MyQuestionDialogController',\n                    controllerAs: 'vm',\n                    parent: 'my-question',\n                    targetEvent: null,\n                    clickOutsideToClose: true,\n                    fullscreen: false\n                }).then(function (answer) {\n                    $state.go('my-question', null);\n                }, function () {\n                    $state.go('my-question', null);\n                });\n            }]\n        });\n    }\n})();\n","(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MyQuestionService', MyQuestionService);\n\n    MyQuestionService.$inject = ['$rootScope','Question', 'Principal'];\n\n    function MyQuestionService($rootScope,Question, Principal) {\n        var instance = {\n            all: all,\n            add: add,\n            subscribe: subscribe\n        };\n\n        var userId = null;\n\n        var list = [];\n\n        Principal.identity().then(function (account) {\n            userId = account.id;\n            loadAll(account.id);\n        });\n\n\n        function loadAll(userId) {\n            Question.myquestion({\n                userId: userId\n            }, onSuccess, onError);\n\n            function onSuccess(data) {\n                list = data;\n                notify();\n            }\n\n            function onError(error) {\n                console.log(error);\n            }\n        }\n\n        function all() {\n            return list;\n        }\n\n        function add(question) {\n            question.user_id = userId;\n            Question.save(question, onSaveSuccess, onSaveError);\n\n            function onSaveSuccess (result) {\n                loadAll(userId);\n            }\n\n            function onSaveError (error) {\n                console.log(error);\n            }\n        }\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n\n        return instance;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyQuestionController', MyQuestionController);\n\n    MyQuestionController.$inject = ['$scope','MyQuestionService'];\n\n    function MyQuestionController ($scope,MyQuestionService) {\n        var vm = this;\n\n        vm.questions = [];\n\n        vm.questions = MyQuestionService.all();\n\n        MyQuestionService.subscribe($scope, function somethingChanged() {\n            vm.questions = MyQuestionService.all();\n        });\n    }\n})();\n","(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MyFeedbackOptionService', MyFeedbackOptionService);\n\n    MyFeedbackOptionService.$inject = [];\n\n    function MyFeedbackOptionService() {\n        var instance = {\n            all: all,\n            get: get,\n            del: del,\n            add: add\n        };\n\n        var list = [\n            {\n                title: 'Performance',\n                options: ['It is quite fast','Sometime slow','It is okay']\n            },\n             {\n                title: 'Experience',\n                options: ['It is quite convenient','Sometime it is laggy','It is okay']\n            }\n        ];\n\n        var hashMap = {};\n        hashMap[list[0].id] = list[0];\n        hashMap[list[1].id] = list[1];\n\n        function all() {\n            return list;\n        }\n\n        function get(id) {\n            return hashMap[id];\n        }\n\n        function del(id) {\n            var index = getIndex(id);\n            list.splice(index, 1);\n            delete hashMap[id];\n        }\n\n        function getIndex(id) {\n            var entity = hashMap[id];\n            return list.indexOf(entity);\n        }\n\n        function add(entity){\n            list.push(entity);\n            hashMap[entity.id] = entity;\n        }\n\n        return instance;\n    }\n})();","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyFeedbackDialogController', MyFeedbackDialogController);\n\n    MyFeedbackDialogController.$inject = ['$scope', '$mdDialog', 'MyFeedbackService'];\n\n    function MyFeedbackDialogController($scope, $mdDialog, MyFeedbackService) {\n        var vm = this;\n        vm.feedback = {\n            title: null,\n            content: null,\n            created: new Date(),\n            user_id: null\n        };\n\n        vm.closeDialog = closeDialog;\n        vm.submit = submit;\n\n        function closeDialog() {\n            $mdDialog.cancel();\n        }\n\n        function submit() {\n            MyFeedbackService.add(vm.feedback);\n            $mdDialog.hide();\n        }\n\n\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('my-feedback', {\n            parent: 'support',\n            url: '/my-feedback',\n            data: {\n                authorities: [\"ROLE_USER\"],\n                pageTitle: 'gsiteApp.template.home.title'\n            },\n            views: {\n                'support-content@support': {\n                    templateUrl: 'app/customer/support/my-feedback/my-feedbacks.html',\n                    controller: 'MyFeedbackController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                    $translatePartialLoader.addPart('my-feedback');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('my-feedback.new', {\n            parent: 'my-feedback',\n            url: '/my-feedback/new',\n            data: {\n                authorities: [\"ROLE_USER\"]\n            },\n            params: {\n                template_id: null\n            },\n            onEnter: ['$state', '$mdDialog', function ($state, $mdDialog) {\n                $mdDialog.show({\n                    templateUrl: 'app/customer/support/my-feedback/my-feedback-dialog.html',\n                    controller: 'MyFeedbackDialogController',\n                    controllerAs: 'vm',\n                    parent: 'my-feedback',\n                    targetEvent: null,\n                    clickOutsideToClose: true,\n                    fullscreen: false\n                }).then(function (answer) {\n                     $state.go('my-feedback', null);\n                }, function () {\n                    $state.go('my-feedback', null);\n                });\n            }]\n        });\n    }\n})();\n","(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MyFeedbackService', MyFeedbackService);\n\n    MyFeedbackService.$inject = ['$rootScope','Feedback', 'Principal'];\n\n    function MyFeedbackService($rootScope,Feedback, Principal) {\n        var instance = {\n            all: all,\n            add: add,\n            subscribe: subscribe\n        };\n\n        var userId = null;\n\n        var list = [];\n\n        Principal.identity().then(function (account) {\n            userId = account.id;\n            loadAll(account.id);\n        });\n\n\n        function loadAll(userId) {\n            Feedback.myfeedback({\n                userId: userId\n            }, onSuccess, onError);\n\n            function onSuccess(data) {\n                list = data;\n                notify();\n            }\n\n            function onError(error) {\n                console.log(error);\n            }\n        }\n\n        function add(feedback) {\n            feedback.user_id = userId;\n            Feedback.save(feedback, onSaveSuccess, onSaveError);\n\n            function onSaveSuccess (result) {\n                loadAll(userId);\n            }\n\n            function onSaveError (error) {\n                console.log(error);\n            }\n        }\n\n        function all() {\n            return list;\n        }\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n\n        return instance;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyFeedbackController', MyFeedbackController);\n\n    MyFeedbackController.$inject = ['$scope','MyFeedbackService'];\n\n    function MyFeedbackController ($scope,MyFeedbackService) {\n        var vm = this;\n\n        vm.feedbacks = [];\n\n        vm.feedbacks = MyFeedbackService.all();\n\n\n        MyFeedbackService.subscribe($scope, function somethingChanged() {\n            vm.feedbacks = MyFeedbackService.all();\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('faq', {\n            parent: 'support',\n            url: '/faq',\n            data: {\n                authorities: [],\n                pageTitle: 'gsiteApp.template.home.title'\n            },\n            views: {\n                'support-content@support': {\n                    templateUrl: 'app/customer/support/faq/faqs.html',\n                    controller: 'FAQController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('user-management');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('FAQService', FAQService);\n\n    FAQService.$inject = ['$rootScope','Question'];\n\n    function FAQService($rootScope,Question) {\n        var instance = {\n            all: all,\n            subscribe: subscribe\n        };\n\n        var list = [];\n\n        loadAll();\n\n\n        function loadAll() {\n            Question.faq({}, onSuccess, onError);\n\n            function onSuccess(data) {\n                list = data;\n                notify();\n            }\n\n            function onError(error) {\n                console.log(error);\n            }\n        }\n\n        function all() {\n            return list;\n        }\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n\n        return instance;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('FAQController', FAQController);\n\n    FAQController.$inject = ['$scope','FAQService'];\n\n    function FAQController ($scope,FAQService) {\n        var vm = this;\n\n        vm.faqs = [];\n\n        vm.faqs = FAQService.all();\n\n        FAQService.subscribe($scope, function somethingChanged() {\n            vm.faqs = FAQService.all();\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyWebsiteViewController', MyWebsiteViewController);\n\n    MyWebsiteViewController.$inject = ['$scope','MSongService'];\n\n    function MyWebsiteViewController($scope,MSongService) {\n        var vm = this;\n\n\n        $scope.$on(\"$destroy\", function handler() {\n            // destruction code here\n            MSongService.stop();\n        });\n\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyWebsiteShareController', MyWebsiteShareController);\n\n    MyWebsiteShareController.$inject = ['entity', '$mdBottomSheet','Facebook','$window','subdomainHandler'];\n\n    function MyWebsiteShareController(entity, $mdBottomSheet,Facebook,$window,subdomainHandler) {\n        var vm = this;\n\n        vm.myWebsite = entity;\n\n        vm.shareFacebook = shareFacebook;\n        vm.shareTwitter = shareTwitter;\n\n        vm.closeShare = closeShare;\n\n        function closeShare() {\n            $mdBottomSheet.hide();\n        }\n\n\n        function shareFacebook() {\n            var domain = subdomainHandler.getHost(vm.myWebsite.domain);\n            Facebook.share(domain);\n        }\n\n\n        function shareTwitter() {\n            var domain = subdomainHandler.getHost(vm.myWebsite.domain);\n            var text = vm.myWebsite.name;\n            var href = \"https://twitter.com/share?\"\n                + \"url=\" + domain\n                + \"&text=\" + text;\n            $window.open(href);\n        }\n\n    }\n})();\n","(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MyWebsiteOffline', MyWebsiteOffline);\n\n    MyWebsiteOffline.$inject = ['$rootScope', '$state', 'MyWebsite', 'Principal', 'Website', 'MyWebsiteStorage'];\n\n    function MyWebsiteOffline($rootScope, $state, MyWebsite, Principal, Website, MyWebsiteStorage) {\n        var service = {\n            subscribe: subscribe,\n            all: all,\n            updateWeb: updateWeb,\n            deleteWeb: deleteWeb,\n            refuse: refuse,\n            loadAll: loadAll,\n            reloadAll: reloadAll\n        };\n        var userLogin = null;\n        var userEmail = null;\n        var websites = [];\n\n        function all() {\n            return websites;\n        }\n\n        checkUser();\n\n        function checkUser() {\n            Principal.identity().then(function (account) {\n                if(account == null)\n                    return;\n                userLogin = account.login;\n                userEmail = account.email;\n                loadAll();\n            });\n        }\n\n\n\n        function reloadAll() {\n            websites = [];\n            checkUser();\n        }\n\n        function loadAll() {\n            websites = [];\n            MyWebsite.query({\n                user_id: userLogin\n            }, onSuccess);\n\n            MyWebsite.share({\n                user_email: userEmail\n            }, onSuccess);\n        }\n\n        function onSuccess(result) {\n            loadImages(result);\n            websites = websites.concat(result);\n            notify();\n        }\n\n        function loadImages(list) {\n            for (var i = 0; i < list.length; i++) {\n                var web = list[i];\n                if (web.custom.homepage.mainImage != 'none') {\n                    MyWebsiteStorage.loadImageForWebItem(userLogin, web.id, web, \"mainImage.jpg\");\n                }\n            }\n\n        }\n\n        function updateWeb(website) {\n            MyWebsite.update(website, success);\n            function success() {\n                loadAll();\n                $state.go(\"my-website\");\n            }\n        }\n\n        function deleteWeb(id) {\n            Website.delete({\n                id: id\n            }, success);\n\n            function success() {\n                loadAll();\n                $state.go(\"my-website\");\n                MyWebsiteStorage.deleteUserWebImageFolder(userLogin, id);\n            }\n        }\n\n        function refuse(id) {\n            Website.get({\n                id: id\n            }, function (web) {\n                var index = web.sharedUsers.indexOf(userEmail);\n                web.sharedUsers.splice(index, 1);\n                Website.update(web, onRefuseSuccess);\n            });\n        }\n\n        function onRefuseSuccess(result) {\n            notify();\n        }\n\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n\n        return service;\n    }\n})();\n\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyWebsiteMailController', MyWebsiteMailController);\n\n    MyWebsiteMailController.$inject = ['AlertService', 'entity', 'Principal', 'Mail','MyWebsiteOffline'];\n\n    function MyWebsiteMailController( AlertService, entity, Principal, Mail,MyWebsiteOffline) {\n        var vm = this;\n\n        vm.website = entity;\n        vm.website.sharedUsers = [];\n        vm.sendEmail = sendEmail;\n        vm.deleteEmail = deleteEmail;\n\n        vm.currentAccount = null;\n\n\n        Principal.identity().then(function (account) {\n            vm.currentAccount = account;\n        });\n\n\n        function sendEmail(email) {\n            if (getIndex(email) < 0) {\n                vm.website.sharedUsers.push(email);\n                shareWithEmail(email);\n            } else\n                AlertService.error(\"Email is already sent!\")\n        }\n\n        function getIndex(email) {\n            return vm.website.sharedUsers.indexOf(email);\n        }\n\n        function deleteEmail(index) {\n            return vm.website.sharedUsers.splice(index, 1);\n        }\n\n        function share() {\n            shareWithEmail(vm.email);\n        }\n\n        function shareWithEmail(email) {\n            if (vm.currentAccount.email == email)\n                AlertService.error(\"This is your email\");\n            else {\n                sendMail(vm.currentAccount,email);\n            }\n        }\n\n\n\n        function sendMail(user, toEmail) {\n            var fromName = vm.currentAccount.firstName + \" \" + vm.currentAccount.lastName;\n            var toName = toEmail;\n            var lang = vm.currentAccount.langKey;\n            var webId = vm.website.id;\n            if (user != null) {\n                toName = user.firstName + \" \" + user.lastName;\n                lang = user.langKey;\n            }\n            Mail.share({\n                from_name: fromName,\n                to_name: toName,\n                lang: lang,\n                to_email: toEmail,\n                web_id: webId\n            }, function (response) {\n                save();\n                AlertService.success(\"Sent mail to \" + toEmail);\n            });\n        }\n\n        function save() {\n            MyWebsiteOffline.update(vm.website);\n        }\n\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyWebsiteDialogController', MyWebsiteDialogController);\n\n    MyWebsiteDialogController.$inject = [ '$scope', '$state', '$mdDialog', 'entity', 'MyWebsite', 'WebTemplate', 'Principal','MyWebsiteOffline'];\n\n    function MyWebsiteDialogController($scope, $state, $mdDialog, entity, MyWebsite, WebTemplate, Principal,MyWebsiteOffline) {\n        var vm = this;\n\n        vm.templates = [];\n\n        vm.myWebsite = entity;\n\n        vm.isDomainError = false;\n        vm.closeDialog = closeDialog;\n        vm.save = save;\n\n        Principal.identity().then(function (account) {\n            vm.myWebsite.user_id = account.login;\n            clearUnPaidWebsites(account.login);\n        });\n\n\n        function closeDialog() {\n            $mdDialog.cancel('cancel');\n        }\n\n        function save() {\n            vm.isSaving = true;\n            if (vm.myWebsite.id !== null) {\n                MyWebsite.update(vm.myWebsite, onSaveSuccess, onSaveError);\n            } else {\n                MyWebsite.create(vm.myWebsite, onSaveSuccess, onSaveError);\n            }\n            $state.go('my-website', null, {\n                reload: 'my-website'\n            });\n        }\n\n        function onSaveSuccess(result) {\n            MyWebsiteOffline.loadAll();\n            $scope.$emit('gsiteApp:myWebsiteUpdate', result);\n            $mdDialog.hide();\n            vm.isSaving = false;\n        }\n\n        function onSaveError(result) {\n            vm.isSaving = false;\n            if (result.data != null) {\n                $mdDialog.hide();\n                $state.go(\"website-payment\", {id: result.data.id});\n            } else {\n                vm.isDomainError = true;\n            }\n        }\n\n        function clearUnPaidWebsites(userId) {\n            MyWebsite.getUnpaid({user_id: userId}, onSuccess);\n\n            function onSuccess(data) {\n                for (var i = 0; i < data.length; i++) {\n                    MyWebsite.delete({webId: data[i].id});\n                }\n            }\n        }\n\n\n        findAllTemplates();\n\n        function findAllTemplates() {\n            WebTemplate.query({}, onSuccess);\n\n            function onSuccess(data) {\n                for (var i = 0; i < data.length; i++) {\n                    vm.templates.push(data[i]);\n                }\n            }\n        }\n    }\n})();\n\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyWebsiteCustomController', MyWebsiteCustomController);\n\n    MyWebsiteCustomController.$inject = ['$timeout','$mdDialog', 'entity', 'MyWebsiteOffline','Principal', 'previousState','subdomainHandler'];\n\n    function MyWebsiteCustomController ($timeout,$mdDialog, entity, MyWebsiteOffline,Principal, previousState,subdomainHandler) {\n        var vm = this;\n\n        vm.templates = [];\n\n        vm.myWebsite = entity;\n        vm.save = save;\n\n        vm.getHost = subdomainHandler.getHost;\n        vm.previousState = previousState.name;\n\n        vm.customizeToolbar = customizeToolbar;\n        vm.customizeSidenav = customizeSidenav;\n        vm.customizeHomepage = customizeHomepage;\n        vm.customizeBasicInfo = customizeBasicInfo;\n        vm.customizeSong = customizeSong;\n        vm.customizePhoto = customizePhoto;\n\n\n\n        Principal.identity().then(function(account) {\n            vm.myWebsite.user_id = account.login;\n        });\n\n        $timeout(function (){\n            angular.element('md-input-container:eq(1)>input').focus();\n        });\n\n        function save () {\n            vm.isSaving = true;\n            MyWebsiteOffline.updateWeb(vm.myWebsite);\n        }\n\n\n        function customizeToolbar() {\n            if (vm.myWebsite.custom.toolbar.isEnable) {\n                var templateUrl = 'app/web-modules/m-toolbar/m-toolbar-dialog.html';\n                var controller = 'MToolbarDialogController';\n                var entity = vm.myWebsite.custom.toolbar;\n                customDialog(templateUrl, controller, entity);\n            }\n        }\n        function customizeSidenav() {\n            if (vm.myWebsite.custom.sidenav.isEnable) {\n                var templateUrl = 'app/web-modules/m-sidenav/m-sidenav-dialog.html';\n                var controller = 'MSidenavDialogController';\n                var entity = vm.myWebsite.custom.sidenav;\n                customDialog(templateUrl, controller, entity);\n            }\n        }\n\n\n\n        function customizeHomepage() {\n            if (vm.myWebsite.custom.homepage.isEnable) {\n                var templateUrl = 'app/web-modules/m-home/m-home-dialog.html';\n                var controller = 'MHomeDialogController';\n                var entity = vm.myWebsite.custom.homepage;\n                customDialog(templateUrl, controller, entity);\n            }\n        }\n\n\n\n        function customizeBasicInfo() {\n            if(vm.myWebsite.custom.basicInfo.isEnable){\n                var templateUrl = 'app/web-modules/m-basic-info/m-basic-info-dialog.html';\n                var controller = 'MBasicInfoDialogController';\n                var entity = vm.myWebsite.custom.basicInfo;\n                customDialog(templateUrl, controller, entity);\n            }\n        }\n        function customizeSong() {\n            if(vm.myWebsite.custom.song.isEnable){\n                var templateUrl = 'app/web-modules/m-song/m-song-dialog.html';\n                var controller = 'MSongDialogController';\n                var entity = vm.myWebsite.custom.song;\n                customDialog(templateUrl, controller, entity);\n            }\n        }\n\n        function customizePhoto() {\n            if(vm.myWebsite.custom.photo.isEnable){\n                var templateUrl = 'app/web-modules/m-photo/m-photo-dialog.html';\n                var controller = 'MPhotoDialogController';\n                var entity = vm.myWebsite.custom.photo;\n                customDialog(templateUrl, controller, entity);\n            }\n        }\n\n\n        function customDialog(templateUrl, controller, entity) {\n            $mdDialog.show({\n                templateUrl: templateUrl,\n                controller: controller,\n                controllerAs: 'vm',\n                parent: 'my-website.custom',\n                targetEvent: null,\n                clickOutsideToClose: true,\n                fullscreen: false,\n                resolve: {\n                    entity: function () {\n                        return entity;\n                    },\n                    webId: function () {\n                        return vm.myWebsite.id;\n                    }\n                }\n            });\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('my-website', {\n                parent: 'customer',\n                url: '/my-website',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/customer/my-website/my-websites.html',\n                        controller: 'MyWebsiteController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('my-website');\n                        return $translate.refresh();\n                    }]\n                }\n            }).state('my-website.new', {\n                parent: 'my-website',\n                url: '/new/{template}',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                params: {\n                    template: null\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/customer/my-website/my-website-dialog.html',\n                        controller: 'MyWebsiteDialogController',\n                        controllerAs: 'vm',\n                        targetEvent: null,\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: [function () {\n                                var entity =  {\n                                    id: null,\n                                    name: null,\n                                    des: null,\n                                    domain: null,\n                                    template: $stateParams.template,\n                                    created: new Date(),\n                                    user_id: null,\n                                    paid: false,\n                                    sharedUsers: [],\n                                    custom: {\n                                        toolbar: {\n                                            isEnable: true,\n                                            title: \"Person\",\n                                            textColor: '#FFFFFF'\n                                        },\n                                        homepage: {\n                                            isEnable: true,\n                                            name: \"name\",\n                                            fullName: \"Full name\",\n                                            avatar: 'none',\n                                            mainImage: 'none'\n                                        },\n                                        sidenav: {\n                                            isEnable: true,\n                                            title: \"Sidenav\",\n                                            textColor: '#FFFFFF',\n                                            backgroundColor: 'white'\n                                        },\n                                        footer: {\n                                            isEnable: true\n                                        },\n                                        basicInfo: {\n                                            isEnable: true,\n                                            firstName: 'First name',\n                                            lastName: 'Last name',\n                                            email: null,\n                                            age: 21,\n                                            des: 'description'\n                                        },\n                                        song: {\n                                            isEnable: true,\n                                            items: []\n                                        },\n                                        photo: {\n                                            isEnable: true,\n                                            items: []\n                                        }\n                                    }\n                                };\n\n                                return entity;\n                            }]\n                        }\n                    }).then(function () {\n                        // $state.go('my-website', null, {\n                        //     reload: 'my-website'\n                        // });\n                    }, function () {\n                        $state.go('my-website');\n                    });\n                }]\n            }).state('my-website.customize', {\n                parent: 'my-website',\n                url: '/{id}/customize',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                views: {\n                    'content@': {\n                        templateUrl: function ($stateParams) {\n                            return 'app/customer/my-website/my-website-custom.html';\n                        },\n                        controller: 'MyWebsiteCustomController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('my-website');\n                        return $translate.refresh();\n                    }],\n                    entity: ['$stateParams', 'Website', function ($stateParams, Website) {\n                        return Website.get({\n                            id: $stateParams.id\n                        }).$promise;\n                    }],\n                    previousState: [\"$state\", function ($state) {\n                        var currentStateData = {\n                            name: $state.current.name || 'my-website',\n                            params: $state.params,\n                            url: $state.href($state.current.name, $state.params)\n                        };\n                        return currentStateData;\n                    }]\n                }\n            }).state('my-website.share', {\n                parent: 'my-website',\n                url: '/share/{id}',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                params: {\n                    id: null\n                },\n                onEnter: ['$stateParams', '$state', '$mdBottomSheet', function ($stateParams, $state, $mdBottomSheet) {\n                    $mdBottomSheet.show({\n                        templateUrl: 'app/customer/my-website/my-website-share.html',\n                        controller: 'MyWebsiteShareController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        resolve: {\n                            entity: ['$stateParams', 'Website', function ($stateParams, Website) {\n                                return Website.get({\n                                    id: $stateParams.id\n                                }).$promise;\n                            }],\n                            translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                                $translatePartialLoader.addPart('my-website');\n                                return $translate.refresh();\n                            }]\n\n                        }\n                    }).then(function (clickedItem) {\n                        //console.log(clickedItem);\n                    }, function () {\n                         $state.go('my-website');\n                    });\n                }]\n            }).state('my-website.mail', {\n                parent: 'my-website',\n                url: '/mail/{id}',\n                data: {\n                    authorities: []\n                },\n                params: {\n                    id: null\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/customer/my-website/my-website-mail.html',\n                        controller: 'MyWebsiteMailController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    entity: ['$stateParams', 'Website', function ($stateParams, Website) {\n                        return Website.get({\n                            id: $stateParams.id\n                        });\n                    }]\n                }\n            }).state('my-website.delete', {\n                parent: 'my-website',\n                url: '/{id}/delete',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', 'MyWebsiteOffline', function ($stateParams, $state, $mdDialog, MyWebsiteOffline) {\n                    var confirm = $mdDialog.confirm()\n                        .title('You delete this website?')\n                        .textContent('This website and its template will be lost forever!')\n                        .ariaLabel('Lucky day')\n                        .targetEvent(null)\n                        .ok('Yes')\n                        .cancel('Cancel');\n\n                    $mdDialog.show(confirm).then(function () {\n                        MyWebsiteOffline.deleteWeb($stateParams.id);\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            });\n\n        $stateProvider.state('my-website-view', {\n            url: '/my-website/view',\n            data: {\n                authorities: []\n            },\n            params: {\n                website: null\n            },\n            views: {\n                'content@': {\n                    templateUrl: function ($stateParams) {\n                        return 'app/templates/' + $stateParams.website.template + '/' + $stateParams.website.template + '.html';\n                    },\n                    controller: 'MyWebsiteViewController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-home@my-website-view': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.homepage.isEnable)\n                            return 'app/web-modules/m-home/m-home.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MHomeController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-toolbar@my-website-view': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.toolbar.isEnable)\n                            return 'app/web-modules/m-toolbar/m-toolbar.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MToolBarController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-sidenav@my-website-view': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.sidenav.isEnable)\n                            return 'app/web-modules/m-sidenav/m-sidenav.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MSidenavController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-footer@my-website-view': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.footer.isEnable)\n                            return 'app/web-modules/m-footer/m-footer.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MFooterController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-audio-player@my-website-view': {\n                    templateUrl: 'app/web-modules/m-audio-player/m-audio-player.html',\n                    controller: 'MAudioPlayerController',\n                    controllerAs: 'vm'\n                }\n            },resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('template');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('my-website-view.info', {\n            parent: 'my-website-view',\n            url: '/info',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@my-website-view': {\n                    templateUrl: 'app/web-modules/m-basic-info/m-basic-info.html',\n                    controller: 'MBasicInfoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website.custom.basicInfo;\n                        }\n                    }\n                }\n            }\n        }).state('my-website-view.photo', {\n            parent: 'my-website-view',\n            url: '/photos',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@my-website-view': {\n                    templateUrl: 'app/web-modules/m-photo/m-photo.html',\n                    controller: 'MPhotoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                    }\n                }\n            }\n        }).state('my-website-view.song', {\n            parent: 'my-website-view',\n            url: '/songs',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@my-website-view': {\n                    templateUrl: 'app/web-modules/m-song/m-song.html',\n                    controller: 'MSongController',\n                    controllerAs: 'vm',\n                    resolve: {\n\n                    }\n                }\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MyWebsite', MyWebsite);\n\n    MyWebsite.$inject = ['$resource'];\n\n    function MyWebsite($resource) {\n        var resourceUrl = 'api/mywebsites/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': {method: 'GET', isArray: true},\n            'share': {method: 'GET', isArray: true, url: 'api/mywebsites/share'},\n            'create': {method: 'POST', url: 'api/mywebsites/create'},\n            'delete': {method: 'DELETE', url: 'api/mywebsites/delete'},\n            'update': {method: 'PUT', url: 'api/mywebsites/update'},\n            'paid': {method: 'POST', url: 'api/mywebsites/paid'},\n            'getUnpaid': {method: 'GET', url: 'api/mywebsites/unpaid', isArray: true}\n        });\n    }\n})();\n\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyWebsiteController', MyWebsiteController);\n\n    MyWebsiteController.$inject = ['$scope', 'MyWebsiteOffline'];\n\n    function MyWebsiteController($scope, MyWebsiteOffline ) {\n        var vm = this;\n\n        vm.refuse = MyWebsiteOffline.refuse;\n\n        vm.websites = [];\n\n        loadWebsites();\n\n        function loadWebsites() {\n            vm.websites = MyWebsiteOffline.all();\n        }\n\n        MyWebsiteOffline.subscribe($scope, function somethingChanged() {\n            loadWebsites();\n        });\n\n\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyNotificationViewController', MyNotificationViewController);\n\n    MyNotificationViewController.$inject = ['entity'];\n\n    function MyNotificationViewController(entity) {\n        var vm = this;\n\n        vm.notification = entity;\n        vm.notification.isRead = true;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('my-notification', {\n            parent: 'customer',\n            url: '/my-notification',\n            data: {\n                authorities: [],\n                pageTitle: 'gsiteApp.template.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/customer/my-notification/my-notifications.html',\n                    controller: 'MyNotificationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('my-notification');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('my-notification.view', {\n            parent: 'my-notification',\n            url: '/my-notification/view/{id}',\n            data: {\n                authorities: [],\n                pageTitle: 'gsiteApp.template.home.title'\n            },\n            params: {\n                id: null\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/customer/my-notification/my-notification-view.html',\n                    controller: 'MyNotificationViewController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                entity: ['$stateParams', 'Notification', function ($stateParams, Notification) {\n                    return Notification.get({id : $stateParams.id}).$promise;\n                }]\n            }\n        }).state('my-notification.delete', {\n            parent: 'my-notification',\n            url: '/my-notification/delete/{id}',\n            data: {\n                authorities: []\n            },\n            params: {\n                template_id: null\n            },\n            onEnter: ['$stateParams', '$state','Notification', function ($stateParams, $state,MyNotificationService) {\n                MyNotificationService.del($stateParams.id);\n                $state.go('my-notification');\n            }]\n        });\n    }\n})();\n","(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MyNotificationService', MyNotificationService);\n\n    MyNotificationService.$inject = ['$rootScope','Principal','Notification'];\n\n    function MyNotificationService($rootScope,Principal,Notification) {\n        var instance = {\n            all: all,\n            del: del,\n            subscribe: subscribe\n        };\n\n        var userId = null;\n\n        var list = [];\n\n        Principal.identity().then(function (account) {\n            userId = account.id;\n            loadAll(account.id);\n        });\n\n\n        function loadAll(userId) {\n            Notification.mynotifications({\n                userId: userId\n            }, onSuccess, onError);\n\n            function onSuccess(data) {\n                list = data;\n                notify();\n            }\n\n            function onError(error) {\n                console.log(error);\n            }\n        }\n\n        function all() {\n            return list;\n        }\n\n\n        function del(id) {\n            Notification.delete({id: id}, onSuccess, onError);\n            function onSuccess(data) {\n                notify();\n            }\n            function onError(error) {\n                console.log(error);\n            }\n        }\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n\n        return instance;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyNotificationController', MyNotificationController);\n\n    MyNotificationController.$inject = ['$scope','MyNotificationService'];\n\n    function MyNotificationController ($scope, MyNotificationService) {\n        var vm = this;\n        vm.notifications = [];\n\n        vm.notifications = MyNotificationService.all();\n\n        MyNotificationService.subscribe($scope, function somethingChanged() {\n            vm.notifications = MyNotificationService.all();\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('customer', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .filter('words', words);\n\n    function words() {\n        return wordsFilter;\n\n        function wordsFilter(input, words) {\n            if (isNaN(words)) {\n                return input;\n            }\n            if (words <= 0) {\n                return '';\n            }\n            if (input) {\n                var inputWords = input.split(/\\s+/);\n                if (inputWords.length > words) {\n                    input = inputWords.slice(0, words).join(' ') + '...';\n                }\n            }\n            return input;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .filter('characters', characters);\n\n    function characters () {\n        return charactersFilter;\n\n        function charactersFilter(input, chars, breakOnWord) {\n            if (isNaN(chars)) {\n                return input;\n            }\n            if (chars <= 0) {\n                return '';\n            }\n            if (input && input.length > chars) {\n                input = input.substring(0, chars);\n\n                if (!breakOnWord) {\n                    var lastspace = input.lastIndexOf(' ');\n                    // Get last space\n                    if (lastspace !== -1) {\n                        input = input.substr(0, lastspace);\n                    }\n                } else {\n                    while (input.charAt(input.length-1) === ' ') {\n                        input = input.substr(0, input.length - 1);\n                    }\n                }\n                return input + '...';\n            }\n            return input;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('jhSortBy', jhSortBy);\n\n    function jhSortBy() {\n        var directive = {\n            restrict: 'A',\n            scope: false,\n            require: '^jhSort',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs, parentCtrl) {\n            element.bind('click', function () {\n                parentCtrl.sort(attrs.jhSortBy);\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('jhSort', jhSort);\n\n    function jhSort () {\n        var directive = {\n            restrict: 'A',\n            scope: {\n                predicate: '=jhSort',\n                ascending: '=',\n                callback: '&'\n            },\n            controller: SortController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n    }\n\n    SortController.$inject = ['$scope', '$element'];\n\n    function SortController ($scope, $element) {\n        var vm = this;\n\n        vm.applyClass = applyClass;\n        vm.resetClasses = resetClasses;\n        vm.sort = sort;\n        vm.triggerApply = triggerApply;\n\n        $scope.$watchGroup(['vm.predicate', 'vm.ascending'], vm.triggerApply);\n        vm.triggerApply();\n\n        function applyClass (element) {\n            var thisIcon = element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt',\n                remove = sortIcon + ' ' + sortDesc,\n                add = sortAsc;\n            if (!vm.ascending) {\n                remove = sortIcon + ' ' + sortAsc;\n                add = sortDesc;\n            }\n            vm.resetClasses();\n            thisIcon.removeClass(remove);\n            thisIcon.addClass(add);\n        }\n\n        function resetClasses () {\n            var allThIcons = $element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt';\n            allThIcons.removeClass(sortAsc + ' ' + sortDesc);\n            allThIcons.addClass(sortIcon);\n        }\n\n        function sort (field) {\n            if (field !== vm.predicate) {\n                vm.ascending = true;\n            } else {\n                vm.ascending = !vm.ascending;\n            }\n            vm.predicate = field;\n            $scope.$apply();\n            vm.callback();\n        }\n\n        function triggerApply (values)  {\n            vm.resetClasses();\n            if (values && values[0] !== '_score') {\n                vm.applyClass($element.find('th[jh-sort-by=\\'' + values[0] + '\\']'));\n            }\n        }\n    }\n})();\n","(function(){\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('ParseLinks', ParseLinks);\n\n    function ParseLinks () {\n\n        var service = {\n            parse : parse\n        };\n\n        return service;\n\n        function parse(header) {\n            if (header.length === 0) {\n                throw new Error('input must not be of zero length');\n            }\n\n            // Split parts by comma\n            var parts = header.split(',');\n            var links = {};\n            // Parse each part into a named link\n            angular.forEach(parts, function(p) {\n                var section = p.split('>;');\n                if (section.length !== 2) {\n                    throw new Error('section could not be split on \">;\"');\n                }\n                var url = section[0].replace(/<(.*)/, '$1').trim();\n                var queryString = {};\n                url.replace(\n                    new RegExp('([^?=&]+)(=([^&]*))?', 'g'),\n                    function($0, $1, $2, $3) { queryString[$1] = $3; }\n                );\n                var page = queryString.page;\n                if (angular.isString(page)) {\n                    page = parseInt(page);\n                }\n                var name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n                links[name] = page;\n            });\n            return links;\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('PaginationUtil', PaginationUtil);\n\n    function PaginationUtil () {\n\n        var service = {\n            parseAscending : parseAscending,\n            parsePage : parsePage,\n            parsePredicate : parsePredicate\n        };\n\n        return service;\n\n        function parseAscending (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                return sort.split(',').slice(-1)[0] === 'asc';\n            } else {\n                // default to true if no sort defined\n                return true;\n            }\n        }\n\n        // query params are strings, and need to be parsed\n        function parsePage (page) {\n            return parseInt(page);\n        }\n\n        // sort can be in the format `id,asc` or `id`\n        function parsePredicate (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                sortArray.pop();\n            }\n            return sortArray.join(',');\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    var jhiItemCount = {\n        template: '<div class=\"info\">' +\n                    'Showing {{(($ctrl.page - 1) * $ctrl.itemsPerPage) == 0 ? 1 : (($ctrl.page - 1) * $ctrl.itemsPerPage + 1)}} - ' +\n                    '{{($ctrl.page * $ctrl.itemsPerPage) < $ctrl.queryCount ? ($ctrl.page * $ctrl.itemsPerPage) : $ctrl.queryCount}} ' +\n                    'of {{$ctrl.queryCount}} items.' +\n                '</div>',\n        bindings: {\n            page: '<',\n            queryCount: '<total',\n            itemsPerPage: '<'\n        }\n    };\n\n    angular\n        .module('gsiteApp')\n        .component('jhiItemCount', jhiItemCount);\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('DateUtils', DateUtils);\n\n    DateUtils.$inject = ['$filter'];\n\n    function DateUtils ($filter) {\n\n        var service = {\n            convertDateTimeFromServer : convertDateTimeFromServer,\n            convertLocalDateFromServer : convertLocalDateFromServer,\n            convertLocalDateToServer : convertLocalDateToServer,\n            dateformat : dateformat\n        };\n\n        return service;\n\n        function convertDateTimeFromServer (date) {\n            if (date) {\n                return new Date(date);\n            } else {\n                return null;\n            }\n        }\n\n        function convertLocalDateFromServer (date) {\n            if (date) {\n                var dateString = date.split('-');\n                return new Date(dateString[0], dateString[1] - 1, dateString[2]);\n            }\n            return null;\n        }\n\n        function convertLocalDateToServer (date) {\n            if (date) {\n                return $filter('date')(date, 'yyyy-MM-dd');\n            } else {\n                return null;\n            }\n        }\n\n        function dateformat () {\n            return 'yyyy-MM-dd';\n        }\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('DataUtils', DataUtils);\n\n    DataUtils.$inject = ['$window'];\n\n    function DataUtils ($window) {\n\n        var service = {\n            abbreviate: abbreviate,\n            byteSize: byteSize,\n            openFile: openFile,\n            toBase64: toBase64\n        };\n\n        return service;\n\n        function abbreviate (text) {\n            if (!angular.isString(text)) {\n                return '';\n            }\n            if (text.length < 30) {\n                return text;\n            }\n            return text ? (text.substring(0, 15) + '...' + text.slice(-10)) : '';\n        }\n\n        function byteSize (base64String) {\n            if (!angular.isString(base64String)) {\n                return '';\n            }\n\n            function endsWith(suffix, str) {\n                return str.indexOf(suffix, str.length - suffix.length) !== -1;\n            }\n\n            function paddingSize(base64String) {\n                if (endsWith('==', base64String)) {\n                    return 2;\n                }\n                if (endsWith('=', base64String)) {\n                    return 1;\n                }\n                return 0;\n            }\n\n            function size(base64String) {\n                return base64String.length / 4 * 3 - paddingSize(base64String);\n            }\n\n            function formatAsBytes(size) {\n                return size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') + ' bytes';\n            }\n\n            return formatAsBytes(size(base64String));\n        }\n\n        function openFile (type, data) {\n            $window.open('data:' + type + ';base64,' + data, '_blank', 'height=300,width=400');\n        }\n\n        function toBase64 (file, cb) {\n            var fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = function (e) {\n                var base64Data = e.target.result.substr(e.target.result.indexOf('base64,') + 'base64,'.length);\n                cb(base64Data);\n            };\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .filter('capitalize', capitalize);\n\n    function capitalize() {\n        return capitalizeFilter;\n\n        function capitalizeFilter (input) {\n            if (input !== null) {\n                input = input.toLowerCase();\n                input = input.substring(0, 1).toUpperCase() + input.substring(1);\n            }\n            return input;\n        }\n    }\n})();\n","(function() {\n    /*jshint bitwise: false*/\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Base64', Base64);\n\n    function Base64 () {\n        var keyStr = 'ABCDEFGHIJKLMNOP' +\n            'QRSTUVWXYZabcdef' +\n            'ghijklmnopqrstuv' +\n            'wxyz0123456789+/' +\n            '=';\n\n        var service = {\n            decode : decode,\n            encode : encode\n        };\n\n        return service;\n\n        function encode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n\n                enc1 = chr1 >> 2;\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n                enc4 = chr3 & 63;\n\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n\n                output = output +\n                    keyStr.charAt(enc1) +\n                    keyStr.charAt(enc2) +\n                    keyStr.charAt(enc3) +\n                    keyStr.charAt(enc4);\n            }\n\n            return output;\n        }\n\n        function decode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n            while (i < input.length) {\n                enc1 = keyStr.indexOf(input.charAt(i++));\n                enc2 = keyStr.indexOf(input.charAt(i++));\n                enc3 = keyStr.indexOf(input.charAt(i++));\n                enc4 = keyStr.indexOf(input.charAt(i++));\n\n                chr1 = (enc1 << 2) | (enc2 >> 4);\n                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n                chr3 = ((enc3 & 3) << 6) | enc4;\n\n                output = output + String.fromCharCode(chr1);\n\n                if (enc3 !== 64) {\n                    output = output + String.fromCharCode(chr2);\n                }\n                if (enc4 !== 64) {\n                    output = output + String.fromCharCode(chr3);\n                }\n            }\n\n            return output;\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('LoginService', LoginService);\n\n    LoginService.$inject = ['$mdDialog'];\n\n    function LoginService($mdDialog) {\n        var service = {\n            open: open\n        };\n\n        var modalInstance = null;\n        var resetModal = function () {\n            modalInstance = null;\n        };\n\n        return service;\n\n        function open() {\n            if (modalInstance !== null) return;\n            modalInstance = $mdDialog.show({\n                animation: true,\n                templateUrl: 'app/components/login/login.html',\n                controller: 'LoginController',\n                controllerAs: 'vm',\n                targetEvent: null,\n                clickOutsideToClose: true,\n                fullscreen: false,\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('login');\n                        return $translate.refresh();\n                    }]\n                }\n            });\n            modalInstance.then(\n                resetModal,\n                resetModal\n            );\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('LoginController', LoginController);\n\n    LoginController.$inject = ['$rootScope', '$state', 'Auth', '$mdDialog', 'Principal'];\n\n    function LoginController($rootScope ,$state, Auth, $mdDialog, Principal) {\n        var vm = this;\n\n        vm.authenticationError = false;\n        vm.closeLoginDialog = closeLoginDialog;\n        vm.credentials = {};\n        vm.login = login;\n        vm.password = null;\n        vm.register = register;\n        vm.rememberMe = true;\n        vm.requestResetPassword = requestResetPassword;\n\n        vm.username = null;\n        vm.isAuthenticated = false;\n        vm.logout = logout;\n\n        vm.isAuthenticated = Principal.isAuthenticated;\n\n\n        function closeLoginDialog() {\n            vm.credentials = {\n                username: null,\n                password: null,\n                rememberMe: true\n            };\n            vm.authenticationError = false;\n            $mdDialog.cancel('cancel');\n        }\n\n\n        if (vm.isAuthenticated())\n            getUserInfo();\n\n        function getUserInfo() {\n            Principal.identity().then(function (user) {\n                vm.username = user.login;\n            });\n        }\n\n\n        function logout() {\n            Auth.logout();\n            $mdDialog.hide();\n            $state.go('home');\n        }\n\n        function login(event) {\n            event.preventDefault();\n            Auth.login({\n                username: vm.username,\n                password: vm.password,\n                rememberMe: vm.rememberMe\n            }).then(function () {\n                vm.authenticationError = false;\n                $mdDialog.cancel();\n                if ($state.current.name === 'register' || $state.current.name === 'activate' ||\n                    $state.current.name === 'finishReset' || $state.current.name === 'requestReset') {\n                    $state.go('home');\n                }\n\n                $rootScope.$broadcast('authenticationSuccess');\n\n                // previousState was set in the authExpiredInterceptor before being redirected to login modal.\n                // since login is successful, go to stored previousState and clear previousState\n                if (Auth.getPreviousState()) {\n                    var previousState = Auth.getPreviousState();\n                    Auth.resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n            }).catch(function () {\n                vm.authenticationError = true;\n            });\n        }\n\n        function register() {\n            $mdDialog.cancel('cancel');\n            $state.go('register');\n        }\n\n        function requestResetPassword() {\n            $mdDialog.cancel('cancel');\n            $state.go('requestReset');\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('LanguageService', LanguageService);\n\n    LanguageService.$inject = ['$q', '$http', '$translate', 'LANGUAGES','tmhDynamicLocale'];\n\n    function LanguageService ($q, $http, $translate, LANGUAGES,tmhDynamicLocale) {\n        var service = {\n            getAll: getAll,\n            getCurrent: getCurrent,\n            changeLanguage: changeLanguage\n        };\n\n        return service;\n\n        function getAll () {\n            var deferred = $q.defer();\n            deferred.resolve(LANGUAGES);\n            return deferred.promise;\n        }\n\n        function getCurrent () {\n            var deferred = $q.defer();\n            var language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n\n            deferred.resolve(language);\n\n            return deferred.promise;\n        }\n\n        function changeLanguage(langKey) {\n            $translate.use(langKey);\n            tmhDynamicLocale.set(langKey);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .filter('findLanguageFromKey', findLanguageFromKey);\n\n    function findLanguageFromKey() {\n        return findLanguageFromKeyFilter;\n\n        function findLanguageFromKeyFilter(lang) {\n            return {\n                'en': 'English',\n                'vi': 'Tiếng Việt'\n            }[lang];\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('LanguageController', LanguageController);\n\n    LanguageController.$inject = ['$translate', 'LanguageService', 'tmhDynamicLocale'];\n\n    function LanguageController ($translate, LanguageService, tmhDynamicLocale) {\n        var vm = this;\n\n        vm.changeLanguage = changeLanguage;\n        vm.languages = null;\n\n        LanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function changeLanguage (languageKey) {\n            $translate.use(languageKey);\n            tmhDynamicLocale.set(languageKey);\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n\n\n        .constant('LANGUAGES', [\n            'en',\n            'vi'\n            // jhipster-needle-i18n-language-constant - JHipster will add/remove languages in this array\n        ]\n    );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('showValidation', showValidation);\n\n    function showValidation () {\n        var directive = {\n            restrict: 'A',\n            require: 'form',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, formCtrl) {\n            element.find('.form-group').each(function() {\n                var $formGroup = angular.element(this);\n                var $inputs = $formGroup.find('input[ng-model],textarea[ng-model],select[ng-model]');\n\n                if ($inputs.length > 0) {\n                    $inputs.each(function() {\n                        var $input = angular.element(this);\n                        var inputName = $input.attr('name');\n                        scope.$watch(function() {\n                            return formCtrl[inputName].$invalid && formCtrl[inputName].$dirty;\n                        }, function(isInvalid) {\n                            $formGroup.toggleClass('has-error', isInvalid);\n                        });\n                    });\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .constant('paginationConstants', {\n            'itemsPerPage': 20\n        });\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('minbytes', minbytes);\n\n    function minbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.minbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) >= attrs.minbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('maxbytes', maxbytes);\n\n    function maxbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.maxbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) <= attrs.maxbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .provider('AlertService', AlertService);\n\n    function AlertService() {\n        /*jshint validthis: true */\n        this.$get = getService;\n\n        getService.$inject = ['$mdToast'];\n\n        function getService($mdToast) {\n            return {\n                success: success,\n                error: error,\n                info: info,\n                warning: warning\n            };\n\n            function success(msg) {\n                var style = '';\n                return show(msg, style);\n            }\n\n            function error(msg) {\n                var style = 'm-toast-error';\n                return show(msg, style);\n            }\n\n            function warning(msg) {\n                var style = 'm-toast-warning';\n                return show(msg, style);\n            }\n\n            function info(msg) {\n                var style = '';\n                return show(msg, style);\n            }\n\n            function show(msg, style) {\n                $mdToast.show({\n                    hideDelay: 3000,\n                    toastClass: style,\n                    templateUrl: 'app/components/alert/alert.html',\n                    controller: 'AlertController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        params: [function () {\n                            return {\n                                msg: msg\n                            };\n                        }]\n                    }\n                });\n            }\n        }\n    }\n\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('AlertController', AlertController);\n\n    AlertController.$inject = ['$scope','params'];\n\n    function AlertController ($scope,params) {\n        var vm = this;\n        vm.msg = params.msg;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('errorHandlerInterceptor', errorHandlerInterceptor);\n\n    errorHandlerInterceptor.$inject = ['$q', '$rootScope'];\n\n    function errorHandlerInterceptor ($q, $rootScope) {\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError (response) {\n            if (!(response.status === 401 && (response.data === '' || (response.data.path && response.data.path.indexOf('/api/account') === 0 )))) {\n                $rootScope.$emit('gsiteApp.httpError', response);\n            }\n            return $q.reject(response);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('authExpiredInterceptor', authExpiredInterceptor);\n\n    authExpiredInterceptor.$inject = ['$rootScope', '$q', '$injector', '$localStorage', '$sessionStorage'];\n\n    function authExpiredInterceptor($rootScope, $q, $injector, $localStorage, $sessionStorage) {\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError(response) {\n            if (response.status === 401) {\n                delete $localStorage.authenticationToken;\n                delete $sessionStorage.authenticationToken;\n                var Principal = $injector.get('Principal');\n                if (Principal.isAuthenticated()) {\n                    var Auth = $injector.get('Auth');\n                    Auth.authorize(true);\n                }\n            }\n            return $q.reject(response);\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('authInterceptor', authInterceptor);\n\n    authInterceptor.$inject = ['$rootScope', '$q', '$location', '$localStorage', '$sessionStorage'];\n\n    function authInterceptor($rootScope, $q, $location, $localStorage, $sessionStorage) {\n        var service = {\n            request: request\n        };\n\n        return service;\n\n\n        function request(config) {\n            function isExternal(config) {\n                if (config.url.indexOf('dropboxapi') > 0)\n                    return true;\n                return false;\n            }\n\n            /*jshint camelcase: false */\n            config.headers = config.headers || {};\n            var token = $localStorage.authenticationToken || $sessionStorage.authenticationToken;\n            if (token && !isExternal(config)) {\n                config.headers.Authorization = 'Bearer ' + token;\n            }\n            return config;\n        }\n\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('translationHandler', translationHandler);\n\n    translationHandler.$inject = ['$rootScope', '$window', '$state', '$translate'];\n\n    function translationHandler($rootScope, $window, $state, $translate) {\n        return {\n            initialize: initialize,\n            updateTitle: updateTitle\n        };\n\n        function initialize() {\n            // if the current translation changes, update the window title\n            var translateChangeSuccess = $rootScope.$on('$translateChangeSuccess', function() {\n                updateTitle();\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(translateChangeSuccess) && translateChangeSuccess !== null){\n                    translateChangeSuccess();\n                }\n            });\n        }\n\n        function updateTitle(titleKey) {\n            if (!titleKey && $state.$current.data && $state.$current.data.pageTitle) {\n                titleKey = $state.$current.data.pageTitle;\n            }\n            $translate(titleKey || 'global.title').then(function (title) {\n                $window.document.title = title;\n            });\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('subdomainHandler',subdomainHandler);\n\n    subdomainHandler.$inject = ['$location','$state','Website'];\n\n    function subdomainHandler($location,$state,Website) {\n        var subdomain = null;\n        var host = null;\n\n        var instance = {\n            initialize: initialize,\n            getSubdomain: getSubdomain,\n            getHost: getHost\n        };\n\n\n        function initialize() {\n            loadSubdomain();\n        }\n\n        function getHost(sub) {\n            if(sub != null)\n                sub = sub + \".\";\n\n            var fullHost = $location.protocol() + '://' + sub + host + \":\" + $location.port()\n            return fullHost;\n        }\n\n\n\n        function loadSubdomain() {\n             host = $location.host();\n            if (host.indexOf('.') > 0) {\n                var array = host.split('.');\n                // if (array.size > 2)\n                    subdomain = array[0];\n                handleSubdomain(subdomain);\n            }\n        }\n\n        function handleSubdomain(subdomain) {\n            if (subdomain != null) {\n                Website.domain({domain: subdomain}, success, error);\n                return;\n            }\n\n            function success(result) {\n                $state.go(\"view-website\",{website: result});\n            }\n\n            function error() {\n                $state.go(\"pagenotfound\");\n            }\n        }\n\n        function getSubdomain() {\n            return subdomain;\n        }\n\n\n        return instance;\n    }\n})\n();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('stateHandler', stateHandler);\n\n    stateHandler.$inject = ['$rootScope', '$state', '$sessionStorage', '$translate', 'LanguageService', 'translationHandler', '$window',\n        'Auth', 'Principal', 'VERSION'];\n\n    function stateHandler($rootScope, $state, $sessionStorage, $translate, LanguageService, translationHandler, $window,\n        Auth, Principal, VERSION) {\n        return {\n            initialize: initialize\n        };\n\n        function initialize() {\n            $rootScope.VERSION = VERSION;\n\n            var stateChangeStart = $rootScope.$on('$stateChangeStart', function (event, toState, toStateParams, fromState) {\n                $rootScope.toState = toState;\n                $rootScope.toStateParams = toStateParams;\n                $rootScope.fromState = fromState;\n\n                // Redirect to a state with an external URL (http://stackoverflow.com/a/30221248/1098564)\n                if (toState.external) {\n                    event.preventDefault();\n                    $window.open(toState.url, '_self');\n                }\n\n                if (Principal.isIdentityResolved()) {\n                    Auth.authorize();\n                }\n\n                // Update the language\n                LanguageService.getCurrent().then(function (language) {\n                    $translate.use(language);\n                });\n            });\n\n            var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess',  function(event, toState, toParams, fromState, fromParams) {\n                var titleKey = 'global.title' ;\n\n                // Set the page title key to the one configured in state or use default one\n                if (toState.data.pageTitle) {\n                    titleKey = toState.data.pageTitle;\n                }\n                translationHandler.updateTitle(titleKey);\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(stateChangeStart) && stateChangeStart !== null){\n                    stateChangeStart();\n                }\n                if(angular.isDefined(stateChangeSuccess) && stateChangeSuccess !== null){\n                    stateChangeSuccess();\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(paginationConfig);\n\n    paginationConfig.$inject = ['uibPaginationConfig', 'paginationConstants'];\n\n    function paginationConfig(uibPaginationConfig, paginationConstants) {\n        uibPaginationConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPaginationConfig.maxSize = 5;\n        uibPaginationConfig.boundaryLinks = true;\n        uibPaginationConfig.firstText = '«';\n        uibPaginationConfig.previousText = '‹';\n        uibPaginationConfig.nextText = '›';\n        uibPaginationConfig.lastText = '»';\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(pagerConfig);\n\n    pagerConfig.$inject = ['uibPagerConfig', 'paginationConstants'];\n\n    function pagerConfig(uibPagerConfig, paginationConstants) {\n        uibPagerConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPagerConfig.previousText = '«';\n        uibPagerConfig.nextText = '»';\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('translationStorageProvider', translationStorageProvider);\n\n    translationStorageProvider.$inject = ['$cookies', '$log', 'LANGUAGES'];\n\n    function translationStorageProvider($cookies, $log, LANGUAGES) {\n        return {\n            get: get,\n            put: put\n        };\n\n        function get(name) {\n            if (LANGUAGES.indexOf($cookies.getObject(name)) === -1) {\n                $log.info('Resetting invalid cookie language \"' + $cookies.getObject(name) + '\" to preferred language \"en\"');\n                $cookies.putObject(name, 'en');\n            }\n            return $cookies.getObject(name);\n        }\n\n        function put(name, value) {\n            $cookies.putObject(name, value);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(translationConfig);\n\n    translationConfig.$inject = ['$translateProvider', 'tmhDynamicLocaleProvider'];\n\n    function translationConfig($translateProvider, tmhDynamicLocaleProvider) {\n        // Initialize angular-translate\n        $translateProvider.useLoader('$translatePartialLoader', {\n            urlTemplate: 'i18n/{lang}/{part}.json'\n        });\n\n        $translateProvider.preferredLanguage('en');\n        $translateProvider.useStorage('translationStorageProvider');\n        $translateProvider.useSanitizeValueStrategy('escaped');\n        $translateProvider.addInterpolation('$translateMessageFormatInterpolation');\n\n        tmhDynamicLocaleProvider.localeLocationPattern('i18n/angular-locale_{{locale}}.js');\n        tmhDynamicLocaleProvider.useCookieStorage();\n        tmhDynamicLocaleProvider.storageKey('NG_TRANSLATE_LANG_KEY');\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(localStorageConfig);\n\n    localStorageConfig.$inject = ['$localStorageProvider', '$sessionStorageProvider'];\n\n    function localStorageConfig($localStorageProvider, $sessionStorageProvider) {\n        $localStorageProvider.setKeyPrefix('jhi-');\n        $sessionStorageProvider.setKeyPrefix('jhi-');\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(httpConfig);\n\n    httpConfig.$inject = ['$urlRouterProvider', '$httpProvider', 'httpRequestInterceptorCacheBusterProvider', '$urlMatcherFactoryProvider'];\n\n    function httpConfig($urlRouterProvider, $httpProvider, httpRequestInterceptorCacheBusterProvider, $urlMatcherFactoryProvider) {\n        //Cache everything except rest api requests\n        httpRequestInterceptorCacheBusterProvider.setMatchlist([/.*api.*/, /.*protected.*/], true);\n\n        $urlRouterProvider.otherwise('/');\n\n        $httpProvider.interceptors.push('errorHandlerInterceptor');\n        $httpProvider.interceptors.push('authExpiredInterceptor');\n        $httpProvider.interceptors.push('authInterceptor');\n        // jhipster-needle-angularjs-add-interceptor JHipster will add new application http interceptor here\n\n        $urlMatcherFactoryProvider.type('boolean', {\n            name : 'boolean',\n            decode: function(val) { return val === true || val === 'true'; },\n            encode: function(val) { return val ? 1 : 0; },\n            equals: function(a, b) { return this.is(a) && a === b; },\n            is: function(val) { return [true,false,0,1].indexOf(val) >= 0; },\n            pattern: /bool|true|0|1/\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(html5ModeConfig);\n\n    html5ModeConfig.$inject = ['$locationProvider'];\n\n    function html5ModeConfig($locationProvider) {\n        $locationProvider.html5Mode({ enabled: true, requireBase: true });\n    }\n})();\n","window.fbAsyncInit = function() {\n    FB.init({\n        appId      : '940460799422307',\n        xfbml      : true,\n        version    : 'v2.8'\n    });\n    FB.AppEvents.logPageView();\n};\n\n(function(d, s, id){\n    var js, fjs = d.getElementsByTagName(s)[0];\n    if (d.getElementById(id)) {return;}\n    js = d.createElement(s); js.id = id;\n    js.src = \"//connect.facebook.net/en_US/sdk.js\";\n    fjs.parentNode.insertBefore(js, fjs);\n}(document, 'script', 'facebook-jssdk'));\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(compileServiceConfig);\n\n    compileServiceConfig.$inject = ['$compileProvider','DEBUG_INFO_ENABLED'];\n\n    function compileServiceConfig($compileProvider,DEBUG_INFO_ENABLED) {\n        $compileProvider.debugInfoEnabled(DEBUG_INFO_ENABLED);\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(cacheBusterConfig);\n\n    cacheBusterConfig.$inject = ['httpRequestInterceptorCacheBusterProvider'];\n\n    function cacheBusterConfig(httpRequestInterceptorCacheBusterProvider) {\n\n        httpRequestInterceptorCacheBusterProvider.setMatchlist([/.*.html/,/.*.svg/, /.*views.*/,'https://content.dropboxapi.com'/*.*/, 'https://api.dropboxapi.com'/*.*/]);\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(themeConfig);\n\n    themeConfig.$inject = ['$mdThemingProvider'];\n\n    function themeConfig($mdThemingProvider) {\n        $mdThemingProvider.theme('input')\n            .primaryPalette('pink')\n            .dark();\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('app', {\n            abstract: true,\n            views: {\n                'sidenav@': {\n                    templateUrl: 'app/layouts/sidenav/sidenav.html',\n                    controller: 'SidenavController',\n                    controllerAs: 'vm',\n                },\n                'toolbar@': {\n                    templateUrl: 'app/layouts/toolbar/toolbar.html',\n                    controller: 'ToolbarController',\n                    controllerAs: 'vm'\n                },\n                'quicktool@': {\n                    templateUrl: 'app/layouts/quicktool/quicktool.html',\n                    controller: 'QuickToolController',\n                    controllerAs: 'vm'\n                },\n                'footer@': {\n                    templateUrl: 'app/layouts/footer/footer.html',\n                    controller: 'FooterController',\n                    controllerAs: 'vm'\n                },\n                'custom-sidenav@': {\n                    templateUrl: 'app/layouts/custom-sidenav/custom-sidenav.html',\n                    controller: 'CustomSidenavController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                authorize: ['Auth',\n                    function (Auth) {\n                        return Auth.authorize();\n                    }\n                ],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('global');\n                }]\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n    // DO NOT EDIT THIS FILE, EDIT THE GULP TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE\n    angular\n        .module('gsiteApp')\n        .constant('VERSION', \"0.0.1-SNAPSHOT\")\n        .constant('DEBUG_INFO_ENABLED', false)\n;\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('UserManagementDialogController', UserManagementDialogController);\n\n    UserManagementDialogController.$inject = ['$mdDialog', 'entity', 'User', 'LanguageService','Register'];\n\n    function UserManagementDialogController( $mdDialog, entity, User, LanguageService,Register) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_MANAGER', 'ROLE_ADMIN'];\n        vm.closeDialog = closeDialog;\n        vm.languages = null;\n        vm.save = save;\n        vm.user = entity;\n\n        vm.choose = choose;\n        vm.deleteChoice = deleteChoice;\n\n\n\n        LanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function closeDialog() {\n            $mdDialog.cancel();\n        }\n\n        function onSaveSuccess(result) {\n            vm.isSaving = false;\n            $mdDialog.hide(result);\n        }\n\n        function onSaveError() {\n            vm.isSaving = false;\n            vm.message = \"User or email is already existed!\";\n        }\n\n        function save() {\n            vm.isSaving = true;\n            if (vm.user.id !== null) {\n                User.update(vm.user, onSaveSuccess, onSaveError);\n            } else {\n                Register.save(vm.user, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function choose() {\n            if (getIndex(vm.choice) < 0)\n                vm.user.authorities.push(vm.choice);\n        }\n\n        function getIndex(choice) {\n            return vm.user.authorities.indexOf(choice);\n        }\n\n        function deleteChoice(index) {\n            vm.user.authorities.splice(index, 1);\n        }\n\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('UserManagementDetailController', UserManagementDetailController);\n\n    UserManagementDetailController.$inject = ['$stateParams', 'User'];\n\n    function UserManagementDetailController ($stateParams, User) {\n        var vm = this;\n\n        vm.load = load;\n        vm.user = {};\n        vm.setActivated = setActivated;\n        vm.setLanguage = setLanguage;\n\n        vm.load($stateParams.login);\n\n\n        function load (login) {\n            User.get({login: login}, function(result) {\n                vm.user = result;\n            });\n        }\n\n        function setActivated(user,activated) {\n            user.activated = activated;\n            User.update(user);\n        }\n\n        function setLanguage(user,langKey) {\n            user.langKey = langKey;\n            User.update(vm.user);\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('user-management', {\n                parent: 'admin',\n                url: '/user-management?page&sort',\n                data: {\n                    authorities: ['ROLE_ADMIN'],\n                    pageTitle: 'userManagement.home.title'\n                },\n                views: {\n                    'admin-content@admin': {\n                        templateUrl: 'app/admin/user-management/user-management.html',\n                        controller: 'UserManagementController',\n                        controllerAs: 'vm'\n                    }\n                },\n                params: {\n                    page: {\n                        value: '1',\n                        squash: true\n                    },\n                    sort: {\n                        value: 'id,asc',\n                        squash: true\n                    }\n                },\n                resolve: {\n                    pagingParams: ['$stateParams', 'PaginationUtil', function ($stateParams, PaginationUtil) {\n                        return {\n                            page: PaginationUtil.parsePage($stateParams.page),\n                            sort: $stateParams.sort,\n                            predicate: PaginationUtil.parsePredicate($stateParams.sort),\n                            ascending: PaginationUtil.parseAscending($stateParams.sort)\n                        };\n                    }],\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('user-management');\n                        return $translate.refresh();\n                    }]\n\n                }\n            })\n            .state('user-management.new', {\n                parent: 'user-management',\n                url: '/new',\n                data: {\n                    authorities: ['ROLE_ADMIN']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                        controller: 'UserManagementDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: [function () {\n                                var user = {\n                                    id: null,\n                                    login: null,\n                                    firstName: null,\n                                    lastName: null,\n                                    email: null,\n                                    activated: false,\n                                    langKey: 'en',\n                                    authorities: [],\n                                    createdBy: null,\n                                    createdDate: new Date(),\n                                    modifiedBy: null,\n                                    modifiedDate: null\n                                };\n                                return user;\n                            }]\n                        }\n                    }).then(function (answer) {\n                        $state.go('user-management', null, {reload: 'user-management'});\n                    }, function () {\n                        $state.go('user-management');\n                    });\n                }]\n            }).state('user-management-detail', {\n                parent: 'admin',\n                url: '/user/:login',\n                data: {\n                    authorities: ['ROLE_ADMIN'],\n                    pageTitle: 'user-management.detail.title'\n                },\n                views: {\n                    'admin-content@admin': {\n                        templateUrl: 'app/admin/user-management/user-management-detail.html',\n                        controller: 'UserManagementDetailController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('user-management');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('user-management.edit', {\n                parent: 'user-management',\n                url: '/{login}/edit',\n                data: {\n                    authorities: ['ROLE_ADMIN']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                        controller: 'UserManagementDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: ['User', function (User) {\n                                return User.get({\n                                    login: $stateParams.login\n                                });\n                            }]\n                        }\n                    }).then(function (answer) {\n                        $state.go('user-management', null, {\n                            reload: true\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            })\n            .state('user-management.delete', {\n                parent: 'user-management',\n                url: '/{login}/delete',\n                data: {\n                    authorities: ['ROLE_ADMIN']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', 'User', function ($stateParams, $state, $mdDialog, User) {\n                    var confirm = $mdDialog.confirm()\n                        .title('You delete this user?')\n                        .textContent('This user and its data will be lost forever!')\n                        .ariaLabel('Lucky day')\n                        .targetEvent(null)\n                        .ok('Yes')\n                        .cancel('Cancel');\n\n                    $mdDialog.show(confirm).then(function () {\n                        User.delete({login: $stateParams.login});\n                        $state.go('user-management', null, {\n                            reload: 'user-management'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('UserManagementController', UserManagementController);\n\n    UserManagementController.$inject = ['Principal', 'User', 'AlertService', 'LanguageService'];\n\n    function UserManagementController(Principal, User, AlertService, LanguageService) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_MANAGER', 'ROLE_ADMIN'];\n        vm.currentAccount = null;\n        vm.languages = null;\n        vm.loadAll = loadAll;\n        vm.setActive = setActive;\n        vm.users = [];\n        vm.clear = clear;\n\n\n        vm.loadAll();\n\n        LanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n        Principal.identity().then(function (account) {\n            vm.currentAccount = account;\n        });\n\n        function setActive(user, isActivated) {\n            user.activated = isActivated;\n            User.update(user);\n        }\n\n        function loadAll() {\n            User.query({}, onSuccess, onError);\n        }\n\n        function onSuccess(data) {\n            vm.users = data;\n        }\n\n        function onError(error) {\n            AlertService.error(error.data.message);\n        }\n\n        function clear() {\n            vm.user = {\n                id: null, login: null, firstName: null, lastName: null, email: null,\n                activated: null, langKey: null, createdBy: null, createdDate: null,\n                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\n                resetKey: null, authorities: null\n            };\n        }\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('metrics', {\n            parent: 'admin',\n            url: '/metrics',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'metrics.title'\n            },\n            views: {\n                'admin-content@admin': {\n                    templateUrl: 'app/admin/metrics/metrics.html',\n                    controller: 'MetricsMonitoringController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('metrics');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('MetricsService', MetricsService);\n\n    MetricsService.$inject = ['$rootScope', '$http'];\n\n    function MetricsService ($rootScope, $http) {\n        var service = {\n            getMetrics: getMetrics,\n            threadDump: threadDump\n        };\n\n        return service;\n\n        function getMetrics () {\n            return $http.get('management/metrics').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function threadDump () {\n            return $http.get('management/dump').then(function (response) {\n                return response.data;\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MetricsMonitoringController', MetricsMonitoringController);\n\n    MetricsMonitoringController.$inject = ['$scope','MetricsService'];\n\n    function MetricsMonitoringController ($scope, MetricsService) {\n        var vm = this;\n\n        vm.metrics = {};\n        vm.refresh = refresh;\n        vm.servicesStats = {};\n        vm.updatingMetrics = true;\n\n        vm.refresh();\n\n        $scope.$watch('vm.metrics', function (newValue) {\n            vm.servicesStats = {};\n            angular.forEach(newValue.timers, function (value, key) {\n                if (key.indexOf('web.rest') !== -1 || key.indexOf('service') !== -1) {\n                    vm.servicesStats[key] = value;\n                }\n            });\n\n        });\n\n        function refresh () {\n            vm.updatingMetrics = true;\n            MetricsService.getMetrics().then(function (promise) {\n                vm.metrics = promise;\n                vm.updatingMetrics = false;\n            }, function (promise) {\n                vm.metrics = promise.data;\n                vm.updatingMetrics = false;\n            });\n        }\n\n\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('logs', {\n            parent: 'admin',\n            url: '/logs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'logs.title'\n            },\n            views: {\n                'admin-content@admin': {\n                    templateUrl: 'app/admin/logs/logs.html',\n                    controller: 'LogsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('logs');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('LogsService', LogsService);\n\n    LogsService.$inject = ['$resource'];\n\n    function LogsService ($resource) {\n        var service = $resource('management/logs', {}, {\n            'findAll': { method: 'GET', isArray: true},\n            'changeLevel': { method: 'PUT'}\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('LogsController', LogsController);\n\n    LogsController.$inject = ['LogsService'];\n\n    function LogsController (LogsService) {\n        var vm = this;\n\n        vm.changeLevel = changeLevel;\n        vm.loggers = LogsService.findAll();\n\n        function changeLevel (name, level) {\n            LogsService.changeLevel({name: name, level: level}, function () {\n                vm.loggers = LogsService.findAll();\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('health', {\n            parent: 'admin',\n            url: '/health',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'health.title'\n            },\n            views: {\n                'admin-content@admin': {\n                    templateUrl: 'app/admin/health/health.html',\n                    controller: 'HealthCheckController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('health');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('HealthService', HealthService);\n\n    HealthService.$inject = ['$rootScope', '$http'];\n\n    function HealthService ($rootScope, $http) {\n        var separator = '.';\n        var service = {\n            checkHealth: checkHealth,\n            transformHealthData: transformHealthData,\n            getBaseName: getBaseName,\n            getSubSystemName: getSubSystemName\n        };\n\n        return service;\n\n        function checkHealth () {\n            return $http.get('management/health').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function transformHealthData (data) {\n            var response = [];\n            flattenHealthData(response, null, data);\n            return response;\n        }\n\n        function getBaseName (name) {\n            if (name) {\n                var split = name.split('.');\n                return split[0];\n            }\n        }\n\n        function getSubSystemName (name) {\n            if (name) {\n                var split = name.split('.');\n                split.splice(0, 1);\n                var remainder = split.join('.');\n                return remainder ? ' - ' + remainder : '';\n            }\n        }\n\n        /* private methods */\n        function flattenHealthData (result, path, data) {\n            angular.forEach(data, function (value, key) {\n                if (isHealthObject(value)) {\n                    if (hasSubSystem(value)) {\n                        addHealthObject(result, false, value, getModuleName(path, key));\n                        flattenHealthData(result, getModuleName(path, key), value);\n                    } else {\n                        addHealthObject(result, true, value, getModuleName(path, key));\n                    }\n                }\n            });\n            return result;\n        }\n\n        function addHealthObject (result, isLeaf, healthObject, name) {\n\n            var healthData = {\n                'name': name\n            };\n            var details = {};\n            var hasDetails = false;\n\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status' || key === 'error') {\n                    healthData[key] = value;\n                } else {\n                    if (!isHealthObject(value)) {\n                        details[key] = value;\n                        hasDetails = true;\n                    }\n                }\n            });\n\n            // Add the of the details\n            if (hasDetails) {\n                angular.extend(healthData, { 'details': details});\n            }\n\n            // Only add nodes if they provide additional information\n            if (isLeaf || hasDetails || healthData.error) {\n                result.push(healthData);\n            }\n            return healthData;\n        }\n\n        function getModuleName (path, name) {\n            var result;\n            if (path && name) {\n                result = path + separator + name;\n            }  else if (path) {\n                result = path;\n            } else if (name) {\n                result = name;\n            } else {\n                result = '';\n            }\n            return result;\n        }\n\n        function hasSubSystem (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value) {\n                if (value && value.status) {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n        function isHealthObject (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status') {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular.module('gsiteApp')\n        .controller('HealthModalController', HealthModalController);\n\n    HealthModalController.$inject = ['$mdDialog', 'currentHealth', 'baseName', 'subSystemName'];\n\n    function HealthModalController ($mdDialog, currentHealth, baseName, subSystemName) {\n        var vm = this;\n\n        vm.cancel = cancel;\n        vm.currentHealth = currentHealth;\n        vm.baseName = baseName;\n        vm.subSystemName = subSystemName;\n\n        function cancel() {\n            $mdDialog.cancel('cancel');\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('HealthCheckController', HealthCheckController);\n\n    HealthCheckController.$inject = ['HealthService', '$mdDialog'];\n\n    function HealthCheckController(HealthService, $mdDialog) {\n        var vm = this;\n\n        vm.updatingHealth = true;\n        vm.getLabelClass = getLabelClass;\n        vm.refresh = refresh;\n        vm.showHealth = showHealth;\n        vm.baseName = HealthService.getBaseName;\n        vm.subSystemName = HealthService.getSubSystemName;\n\n        vm.refresh();\n\n        function getLabelClass(statusState) {\n            if (statusState === 'UP') {\n                return 'label-success';\n            } else {\n                return 'label-danger';\n            }\n        }\n\n        function refresh() {\n            vm.updatingHealth = true;\n            HealthService.checkHealth().then(function (response) {\n                vm.healthData = HealthService.transformHealthData(response);\n                vm.updatingHealth = false;\n            }, function (response) {\n                vm.healthData = HealthService.transformHealthData(response.data);\n                vm.updatingHealth = false;\n            });\n        }\n\n        function showHealth(health) {\n            $mdDialog.show({\n                templateUrl: 'app/admin/health/health.modal.html',\n                controller: 'HealthModalController',\n                controllerAs: 'vm',\n                clickOutsideToClose: true,\n                fullscreen: false,\n                resolve: {\n                    currentHealth: function () {\n                        return health;\n                    },\n                    baseName: function () {\n                        return vm.baseName;\n                    },\n                    subSystemName: function () {\n                        return vm.subSystemName;\n                    }\n\n                }\n            });\n        }\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig ($stateProvider) {\n        $stateProvider.state('docs', {\n            parent: 'admin',\n            url: '/docs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'global.menu.admin.apidocs'\n            },\n            views: {\n                'admin-content@admin': {\n                    templateUrl: 'app/admin/docs/docs.html'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', function ($translate) {\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('configuration', {\n            parent: 'admin',\n            url: '/configuration',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'configuration.title'\n            },\n            views: {\n                'admin-content@admin': {\n                    templateUrl: 'app/admin/configuration/configuration.html',\n                    controller: 'ConfigurationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('configuration');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('ConfigurationService', ConfigurationService);\n\n    ConfigurationService.$inject = ['$filter', '$http'];\n\n    function ConfigurationService ($filter, $http) {\n        var service = {\n            get: get,\n            getEnv: getEnv\n        };\n\n        return service;\n\n        function get () {\n            return $http.get('management/configprops').then(getConfigPropsComplete);\n\n            function getConfigPropsComplete (response) {\n                var properties = [];\n                angular.forEach(response.data, function (data) {\n                    properties.push(data);\n                });\n                var orderBy = $filter('orderBy');\n                return orderBy(properties, 'prefix');\n            }\n        }\n\n        function getEnv () {\n            return $http.get('management/env').then(getEnvComplete);\n\n            function getEnvComplete (response) {\n                var properties = {};\n                angular.forEach(response.data, function (val,key) {\n                    var vals = [];\n                    angular.forEach(val, function (v,k) {\n                        vals.push({ key:k, val:v });\n                    });\n                    properties[key] = vals;\n                });\n                return properties;\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('ConfigurationController', ConfigurationController);\n\n    ConfigurationController.$inject = ['$filter','ConfigurationService'];\n\n    function ConfigurationController (filter,ConfigurationService) {\n        var vm = this;\n\n        vm.allConfiguration = null;\n        vm.configuration = null;\n\n        ConfigurationService.get().then(function(configuration) {\n            vm.configuration = configuration;\n        });\n        ConfigurationService.getEnv().then(function (configuration) {\n            vm.allConfiguration = configuration;\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('audits', {\n            parent: 'admin',\n            url: '/audits',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'audits.title'\n            },\n            views: {\n                'admin-content@admin': {\n                    templateUrl: 'app/admin/audits/audits.html',\n                    controller: 'AuditsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('audits');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('AuditsService', AuditsService);\n\n    AuditsService.$inject = ['$resource'];\n\n    function AuditsService ($resource) {\n        var service = $resource('management/audits/:id', {}, {\n            'get': {\n                method: 'GET',\n                isArray: true\n            },\n            'query': {\n                method: 'GET',\n                isArray: true,\n                params: {fromDate: null, toDate: null}\n            }\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('AuditsController', AuditsController);\n\n    AuditsController.$inject = ['$filter', 'AuditsService', 'ParseLinks'];\n\n    function AuditsController ($filter, AuditsService, ParseLinks) {\n        var vm = this;\n\n        vm.audits = null;\n        vm.fromDate = null;\n        vm.links = null;\n        vm.loadPage = loadPage;\n        vm.onChangeDate = onChangeDate;\n        vm.page = 1;\n        vm.previousMonth = previousMonth;\n        vm.toDate = null;\n        vm.today = today;\n        vm.totalItems = null;\n    \n        vm.today();\n        vm.previousMonth();\n        vm.onChangeDate();\n\n        function onChangeDate () {\n            var dateFormat = 'yyyy-MM-dd';\n            var fromDate = $filter('date')(vm.fromDate, dateFormat);\n            var toDate = $filter('date')(vm.toDate, dateFormat);\n\n            AuditsService.query({page: vm.page -1, size: 20, fromDate: fromDate, toDate: toDate}, function(result, headers){\n                vm.audits = result;\n                vm.links = ParseLinks.parse(headers('link'));\n                vm.totalItems = headers('X-Total-Count');\n            });\n        }\n\n        // Date picker configuration\n        function today () {\n            // Today + 1 day - needed if the current day must be included\n            var today = new Date();\n            vm.toDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);\n        }\n\n        function previousMonth () {\n            var fromDate = new Date();\n            if (fromDate.getMonth() === 0) {\n                fromDate = new Date(fromDate.getFullYear() - 1, 11, fromDate.getDate());\n            } else {\n                fromDate = new Date(fromDate.getFullYear(), fromDate.getMonth() - 1, fromDate.getDate());\n            }\n\n            vm.fromDate = fromDate;\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.onChangeDate();\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('admin', {\n            abstract: true,\n            parent: 'app',\n            views: {\n                'adminbar@admin': {\n                    templateUrl: 'app/layouts/adminbar/adminbar.html',\n                    controller: 'AdminBarController',\n                    controllerAs: 'vm'\n                },\n                'content@': {\n                    templateUrl: 'app/admin/admin.html'\n                }\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('SocialRegisterController', SocialRegisterController);\n\n    SocialRegisterController.$inject = ['$filter', '$stateParams'];\n\n    function SocialRegisterController ($filter, $stateParams) {\n        var vm = this;\n\n        vm.success = $stateParams.success;\n        vm.error = !vm.success;\n        vm.provider = $stateParams.provider;\n        vm.providerLabel = $filter('capitalize')(vm.provider);\n        vm.success = $stateParams.success;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('SocialAuthController', SocialAuthController);\n\n    SocialAuthController.$inject = ['$state', '$cookies', 'Auth'];\n\n    function SocialAuthController($state, $cookies, Auth) {\n        var token = $cookies.get('social-authentication');\n\n        Auth.loginWithToken(token, false).then(function () {\n            $cookies.remove('social-authentication');\n            Auth.authorize(true);\n        }, function () {\n            $state.go('social-register', {'success': 'false'});\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('social-register', {\n            parent: 'account',\n            url: '/social-register/:provider?{success:boolean}',\n            data: {\n                authorities: [],\n                pageTitle: 'social.register.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/social/social-register.html',\n                    controller: 'SocialRegisterController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('social');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('social-auth', {\n            parent: 'account',\n            url: '/social-auth',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    controller: 'SocialAuthController'\n                }\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('SocialService', SocialService);\n\n    SocialService.$inject = ['$http', '$cookies'];\n\n    function SocialService ($http, $cookies) {\n        var socialService = {\n            getProviderSetting: getProviderSetting,\n            getProviderURL: getProviderURL,\n            getCSRF: getCSRF\n        };\n\n        return socialService;\n\n        function getProviderSetting (provider) {\n            switch(provider) {\n            case 'google': return 'https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email';\n            case 'facebook': return 'public_profile,email';\n            case 'twitter': return '';\n            default: return 'Provider setting not defined';\n            }\n        }\n\n        function getProviderURL (provider) {\n            return 'signin/' + provider;\n        }\n\n        function getCSRF () {\n            return $cookies.get($http.defaults.xsrfCookieName);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('jhSocial', jhSocial);\n\n    jhSocial.$inject = ['$translatePartialLoader', '$translate', '$filter', 'SocialService'];\n\n    function jhSocial($translatePartialLoader, $translate, $filter, SocialService) {\n        var directive = {\n            restrict: 'E',\n            scope: {\n                provider: '@ngProvider'\n            },\n            templateUrl: 'app/account/social/directive/social.html',\n            link: linkFunc\n        };\n\n        return directive;\n\n\n        function linkFunc(scope) {\n\n            $translatePartialLoader.addPart('social');\n            $translate.refresh();\n\n            scope.label = $filter('capitalize')(scope.provider);\n            scope.providerSetting = SocialService.getProviderSetting(scope.provider);\n            scope.providerURL = SocialService.getProviderURL(scope.provider);\n            scope.csrf = SocialService.getCSRF();\n        }\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('settings', {\n            parent: 'account',\n            url: '/settings',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.settings'\n            },\n            views: {\n                'account-content@account': {\n                    templateUrl: 'app/account/settings/settings.html',\n                    controller: 'SettingsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('settings');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('SettingsController', SettingsController);\n\n    SettingsController.$inject = ['$state','Principal', 'Auth', 'LanguageService', '$translate','AlertService'];\n\n    function SettingsController ($state,Principal, Auth, LanguageService, $translate,AlertService) {\n        var vm = this;\n\n        vm.save = save;\n        vm.settingsAccount = null;\n\n        vm.cancel = cancel;\n        function cancel() {\n            $state.go('settings');\n        }\n\n\n        var copyAccount = function (account) {\n            return {\n                activated: account.activated,\n                email: account.email,\n                firstName: account.firstName,\n                langKey: account.langKey,\n                lastName: account.lastName,\n                login: account.login\n            };\n        };\n\n        Principal.identity().then(function(account) {\n            vm.settingsAccount = copyAccount(account);\n        });\n\n        function save () {\n            Auth.updateAccount(vm.settingsAccount).then(function() {\n                AlertService.success(\"OK !\");\n                Principal.identity(true).then(function(account) {\n                    vm.settingsAccount = copyAccount(account);\n                });\n                LanguageService.getCurrent().then(function(current) {\n                    if (vm.settingsAccount.langKey !== current) {\n                        $translate.use(vm.settingsAccount.langKey);\n                    }\n                });\n            }).catch(function() {\n                AlertService.error(\"Error !\");\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('sessions', {\n            parent: 'account',\n            url: '/sessions',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.sessions'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/sessions/sessions.html',\n                    controller: 'SessionsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('sessions');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('SessionsController', SessionsController);\n\n    SessionsController.$inject = ['Sessions', 'Principal'];\n\n    function SessionsController (Sessions, Principal) {\n        var vm = this;\n\n        vm.account = null;\n        vm.error = null;\n        vm.invalidate = invalidate;\n        vm.sessions = Sessions.getAll();\n        vm.success = null;\n\n\n        Principal.identity().then(function(account) {\n            vm.account = account;\n        });\n\n        function invalidate (series) {\n            Sessions.delete({series: encodeURIComponent(series)},\n                function () {\n                    vm.error = null;\n                    vm.success = 'OK';\n                    vm.sessions = Sessions.getAll();\n                },\n                function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('requestReset', {\n            parent: 'account',\n            url: '/reset/request',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/request/reset.request.html',\n                    controller: 'RequestResetController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('RequestResetController', RequestResetController);\n\n    RequestResetController.$inject = ['Auth'];\n\n    function RequestResetController(Auth) {\n        var vm = this;\n\n        vm.error = null;\n        vm.errorEmailNotExists = null;\n        vm.requestReset = requestReset;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        function requestReset() {\n\n            vm.error = null;\n            vm.errorEmailNotExists = null;\n\n            Auth.resetPasswordInit(vm.resetAccount.email).then(function () {\n                vm.success = 'OK';\n            }).catch(function (response) {\n                vm.success = null;\n                if (response.status === 400 && response.data === 'e-mail address not registered') {\n                    vm.errorEmailNotExists = 'ERROR';\n                } else {\n                    vm.error = 'ERROR';\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('finishReset', {\n            parent: 'account',\n            url: '/reset/finish?key',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/finish/reset.finish.html',\n                    controller: 'ResetFinishController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('ResetFinishController', ResetFinishController);\n\n    ResetFinishController.$inject = ['$stateParams', 'Auth', 'LoginService'];\n\n    function ResetFinishController($stateParams, Auth, LoginService) {\n        var vm = this;\n\n        vm.keyMissing = angular.isUndefined($stateParams.key);\n        vm.confirmPassword = null;\n        vm.error = null;\n        vm.finishReset = finishReset;\n        vm.login = LoginService.open;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        function finishReset() {\n            vm.error = null;\n\n            Auth.resetPasswordFinish({\n                key: $stateParams.key,\n                newPassword: vm.resetAccount.password\n            }).then(function () {\n                vm.success = 'OK';\n            }).catch(function () {\n                vm.success = null;\n                vm.error = 'ERROR';\n            });\n\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('register', {\n            parent: 'account',\n            url: '/register',\n            data: {\n                authorities: [],\n                pageTitle: 'register.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/register/register.html',\n                    controller: 'RegisterController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('register');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('RegisterController', RegisterController);\n\n\n    RegisterController.$inject = ['$translate', 'Auth', 'LoginService'];\n\n    function RegisterController($translate, Auth, LoginService) {\n        var vm = this;\n\n        vm.error = null;\n        vm.errorUserExists = null;\n        vm.login = LoginService.open;\n        vm.register = register;\n        vm.registerAccount = {};\n        vm.success = null;\n\n        function register() {\n            vm.registerAccount.langKey = $translate.use();\n            vm.error = null;\n            vm.errorUserExists = null;\n            vm.errorEmailExists = null;\n\n            Auth.createAccount(vm.registerAccount).then(function () {\n                vm.success = 'OK';\n            }).catch(function (response) {\n                vm.success = null;\n                if (response.status === 400 && response.data === 'login already in use') {\n                    vm.errorUserExists = 'ERROR';\n                } else if (response.status === 400 && response.data === 'e-mail address already in use') {\n                    vm.errorEmailExists = 'ERROR';\n                } else {\n                    vm.error = 'ERROR';\n                }\n            });\n\n        }\n    }\n})();\n","/* globals $ */\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('passwordStrengthBar', passwordStrengthBar);\n\n    function passwordStrengthBar () {\n        var directive = {\n            replace: true,\n            restrict: 'E',\n            template: '<div id=\"strength\">' +\n                '<small data-translate=\"global.messages.validate.newpassword.strength\">Password strength:</small>' +\n                '<ul id=\"strengthBar\">' +\n                '<li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li>' +\n                '</ul>' +\n                '</div>',\n            scope: {\n                passwordToCheck: '='\n            },\n            link: linkFunc\n        };\n\n        return directive;\n\n        /* private helper methods*/\n\n        function linkFunc(scope, iElement) {\n            var strength = {\n                colors: ['#F00', '#F90', '#FF0', '#9F0', '#0F0'],\n                mesureStrength: function (p) {\n\n                    var _force = 0;\n                    var _regex = /[$-/:-?{-~!\"^_`\\[\\]]/g; // \"\n\n                    var _lowerLetters = /[a-z]+/.test(p);\n                    var _upperLetters = /[A-Z]+/.test(p);\n                    var _numbers = /[0-9]+/.test(p);\n                    var _symbols = _regex.test(p);\n\n                    var _flags = [_lowerLetters, _upperLetters, _numbers, _symbols];\n                    var _passedMatches = $.grep(_flags, function (el) {\n                        return el === true;\n                    }).length;\n\n                    _force += 2 * p.length + ((p.length >= 10) ? 1 : 0);\n                    _force += _passedMatches * 10;\n\n                    // penalty (short password)\n                    _force = (p.length <= 6) ? Math.min(_force, 10) : _force;\n\n                    // penalty (poor variety of characters)\n                    _force = (_passedMatches === 1) ? Math.min(_force, 10) : _force;\n                    _force = (_passedMatches === 2) ? Math.min(_force, 20) : _force;\n                    _force = (_passedMatches === 3) ? Math.min(_force, 40) : _force;\n\n                    return _force;\n\n                },\n                getColor: function (s) {\n\n                    var idx;\n                    if (s <= 10) {\n                        idx = 0;\n                    }\n                    else if (s <= 20) {\n                        idx = 1;\n                    }\n                    else if (s <= 30) {\n                        idx = 2;\n                    }\n                    else if (s <= 40) {\n                        idx = 3;\n                    }\n                    else {\n                        idx = 4;\n                    }\n\n                    return { idx: idx + 1, col: this.colors[idx] };\n                }\n            };\n            scope.$watch('passwordToCheck', function (password) {\n                if (password) {\n                    var c = strength.getColor(strength.mesureStrength(password));\n                    iElement.removeClass('ng-hide');\n                    iElement.find('ul').children('li')\n                        .css({ 'background-color': '#DDD' })\n                        .slice(0, c.idx)\n                        .css({ 'background-color': c.col });\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('password', {\n            parent: 'account',\n            url: '/password',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.password'\n            },\n            views: {\n                'account-content@account': {\n                    templateUrl: 'app/account/password/password.html',\n                    controller: 'PasswordController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('password');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('PasswordController', PasswordController);\n\n    PasswordController.$inject = ['Auth', 'Principal','AlertService'];\n\n    function PasswordController (Auth, Principal,AlertService) {\n        var vm = this;\n\n        vm.changePassword = changePassword;\n\n        Principal.identity().then(function(account) {\n            vm.account = account;\n        });\n\n        function changePassword () {\n            Auth.changePassword(vm.password).then(function () {\n                AlertService.success(\"OK !\")\n            }).catch(function () {\n                AlertService.error(\"Error !\")\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('activate', {\n            parent: 'account',\n            url: '/activate?key',\n            data: {\n                authorities: [],\n                pageTitle: 'activate.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/activate/activate.html',\n                    controller: 'ActivationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('activate');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('ActivationController', ActivationController);\n\n    ActivationController.$inject = ['$stateParams', 'Auth', 'LoginService'];\n\n    function ActivationController ($stateParams, Auth, LoginService) {\n        var vm = this;\n\n        Auth.activateAccount({key: $stateParams.key}).then(function () {\n            vm.error = null;\n            vm.success = 'OK';\n        }).catch(function () {\n            vm.success = null;\n            vm.error = 'ERROR';\n        });\n\n        vm.login = LoginService.open;\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('account', {\n            abstract: true,\n            parent: 'app',\n            views: {\n                'accountbar@account': {\n                    templateUrl: 'app/layouts/accountbar/accountbar.html',\n                    controller: 'AccountBarController',\n                    controllerAs: 'vm'\n                },\n                'content@': {\n                    templateUrl: 'app/account/account.html',\n                }\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp', [\n            'ngStorage',\n            'tmh.dynamicLocale',\n            'pascalprecht.translate',\n            'ngResource',\n            'ngCookies',\n            'ngAria',\n            'ngCacheBuster',\n            'ngFileUpload',\n            'ui.bootstrap',\n            'ui.router',\n            'infinite-scroll',\n            // jhipster-needle-angularjs-add-module JHipster will add new module here\n            'angular-loading-bar',\n            'ngMaterial',\n            'mdColorPicker',\n            'ngFileUpload',\n            'ngAudio',\n            'ngMessages',\n            'ngPassword'\n        ])\n        .run(run);\n\n    run.$inject = ['stateHandler','subdomainHandler', 'translationHandler'];\n\n    function run(stateHandler, subdomainHandler,translationHandler) {\n        stateHandler.initialize();\n        subdomainHandler.initialize();\n        translationHandler.initialize();\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MToolbarDialogController', MToolbarDialogController);\n\n    MToolbarDialogController.$inject = ['entity'];\n\n    function MToolbarDialogController(entity) {\n        var vm = this;\n\n        vm.toolbar = entity;\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MToolBarController', MToolBarController);\n\n    MToolBarController.$inject = ['$scope','$state', '$mdSidenav', 'entity'];\n\n    function MToolBarController($scope,$state, $mdSidenav, entity) {\n        var vm = this;\n\n        vm.homeState = $state.current.name;\n\n        // prevent reload page => make change root state\n        if (vm.homeState.indexOf('.') > 0) {\n            vm.homeState = vm.homeState.split('.')[0];\n        }\n        vm.website = entity;\n        vm.toolbar = vm.website.custom.toolbar;\n        if (vm.toolbar == null)\n            loadDefault();\n\n        // sidenav\n        vm.toggleLeft = buildToggler('m-sidenav');\n\n        function buildToggler(componentId) {\n            return function () {\n                $mdSidenav(componentId).toggle();\n            };\n        }\n\n        function loadDefault() {\n            vm.toolbar = {\n                isEnable: true,\n                title: 'Person',\n                textColor: '#FFFFFF'\n            };\n\n            vm.list = {\n                isEnable: true,\n                choices: [{\n                        title: 'Information',\n                        subTitle: 'Overview of what you should know',\n                        icon: 'person',\n                        state: vm.homeState + '.info'\n                    },\n                    {\n                        title: 'Photos',\n                        subTitle: 'Album contain all photo of reciever',\n                        icon: 'photo_library',\n                        state: vm.homeState + '.photo'\n                    },\n                    {\n                        title: 'Songs',\n                        subTitle: 'All favorite songs and their playlist',\n                        icon: 'library_music',\n                        state: vm.homeState + '.song'\n                    }\n                ]\n            };\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MSongDialogController', MSongDialogController);\n\n    MSongDialogController.$inject = ['entity', 'Principal', 'MyWebsiteStorage', 'webId'];\n\n    function MSongDialogController(entity, Principal, MyWebsiteStorage, webId) {\n        var vm = this;\n        vm.song = entity;\n\n        vm.submit = submit;\n        vm.deleteItem = deleteItem;\n        var userLogin = null;\n        vm.loading = false;\n        vm.songFile = null;\n\n        vm.item = {\n            title: null,\n            artist: null,\n            url: null\n        };\n\n        vm.upload = upload;\n\n        Principal.identity().then(function (user) {\n            userLogin = user.login;\n        });\n\n        function reset() {\n            vm.item = {\n                title: null,\n                artist: null,\n                url: null\n            };\n            vm.songFile = null;\n            vm.loading = false;\n        }\n\n        function submit(item) {\n            if (!isExisted(item)) {\n                uploadSong();\n            }\n        }\n\n        function isExisted(item) {\n            for (var i = 0; i < vm.song.items.length; i++) {\n                var song = vm.song.items[i];\n                if (song.title == item.title)\n                    return true;\n            }\n            return false;\n        }\n\n        function deleteItem(index) {\n            var fileName = vm.song.items[index].url;\n            vm.loading = true;\n            MyWebsiteStorage.deleteUserWebSong(userLogin, webId, fileName).then(onSuccess, onError);\n            function onSuccess(response) {\n                vm.song.items.splice(index, 1);\n                reset();\n            }\n\n            function onError(response) {\n                reset();\n            }\n\n        }\n\n        function upload(file) {\n            if (file != null) {\n                vm.item.url = file.name;\n                vm.item.title = file.name.split('.')[0];\n            }\n        }\n\n        function uploadSong() {\n            if (vm.songFile != null) {\n                vm.loading = true;\n                vm.song.items.push(vm.item);\n                MyWebsiteStorage.uploadUserWebSong(userLogin, webId, vm.songFile, vm.item.url).then(onSuccess, onError);\n            }\n\n            function onSuccess(response) {\n                reset();\n            }\n\n            function onError(response) {\n                reset();\n            }\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MSongService', MSongService);\n\n    MSongService.$inject = ['ngAudio', '$rootScope'];\n\n    function MSongService(ngAudio, $rootScope) {\n        var songList = null;\n        var currentSong = null;\n        var audio = null;\n        var isPlaying = false;\n        var currentIndex = 0;\n\n        var instance = {\n            loadSongList: loadSongList,\n            getList: getList,\n            loadSongAt: loadSongAt,\n            play: play,\n            stop: stop,\n            pause: pause,\n            playNext: playNext,\n            playPrevious: playPrevious,\n            subscribe: subscribe,\n            checkPlaying: checkPlaying,\n            getCurrentSong: getCurrentSong,\n            getCurrentAudio: getCurrentAudio,\n            setLoop: setLoop\n        };\n\n\n        function loadSongList(list) {\n            songList = list;\n        }\n\n        function getList() {\n            return songList;\n        }\n\n        function loadSongAt(index) {\n            currentIndex = index;\n            currentSong = songList[index];\n            if (audio)\n                stop();\n            audio = ngAudio.load(currentSong.tempLink);\n            return audio;\n        }\n\n        function play() {\n            audio.play();\n            isPlaying = true;\n            notify();\n        }\n\n        function stop() {\n            if (audio) {\n                audio.stop();\n                isPlaying = false;\n                notify();\n            }\n        }\n\n        function pause() {\n            audio.pause();\n            isPlaying = false;\n            notify();\n        }\n\n        function playNext() {\n            if (currentIndex + 1 < songList.length)\n                loadSongAt(currentIndex + 1);\n            else\n                loadSongAt(0);\n\n            play();\n        }\n\n        function playPrevious() {\n            if (currentIndex - 1 >= 0)\n                loadSongAt(currentIndex - 1);\n            else\n                loadSongAt(songList.length - 1);\n\n            play();\n        }\n\n        function setLoop(isLoop) {\n            audio.loop = isLoop;\n        }\n\n        function checkPlaying() {\n            return isPlaying;\n        }\n\n        function getCurrentSong() {\n            return currentSong;\n        }\n\n        function getCurrentAudio() {\n            return audio;\n        }\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n        return instance;\n    }\n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MSongController', MSongController);\n\n    MSongController.$inject = ['MSongService'];\n\n    function MSongController(MSongService) {\n        var vm = this;\n\n        vm.songs = MSongService.getList();\n\n        vm.playAt = playAt;\n        vm.downloadSongAt = downloadSongAt;\n\n        function playAt(index) {\n            MSongService.loadSongAt(index);\n            MSongService.play();\n        }\n\n        function downloadSongAt(index) {\n            var song = vm.songs[index];\n            var songUrl = song.tempLink;\n            $window.open(songUrl, '_blank');\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MSidenavDialogController', MSidenavDialogController);\n\n    MSidenavDialogController.$inject = ['entity'];\n\n    function MSidenavDialogController(entity) {\n        var vm = this;\n\n        vm.sidenav = entity;\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MSidenavController', MSidenavController);\n\n    MSidenavController.$inject = ['$state', '$mdSidenav', 'entity'];\n\n    function MSidenavController($state, $mdSidenav, entity) {\n        var vm = this;\n\n        vm.homeState = $state.current.name;\n\n        // prevent reload page => make change root state\n        if (vm.homeState.indexOf('.') > 0) {\n            vm.homeState = vm.homeState.split('.')[0];\n        }\n\n        vm.website = entity;\n        vm.sidenav = vm.website.custom.sidenav;\n        if (vm.sidenav == null)\n            loadDefault();\n        // sidenav\n        vm.toggleLeft = buildToggler('m-sidenav');\n\n        function buildToggler(componentId) {\n            return function () {\n                $mdSidenav(componentId).toggle();\n            }\n        }\n\n        function loadDefault() {\n            vm.sidenav = {\n                isEnable: true,\n                title: 'About Person',\n                textColor: '#FFFFFF',\n                backgroundColor: 'white'\n            };\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MPhotoViewDialogController', MPhotoViewDialogController);\n\n    MPhotoViewDialogController.$inject = ['entity'];\n\n    function MPhotoViewDialogController(entity) {\n        var vm = this;\n\n        vm.photo = entity;\n        if (vm.photo == null)\n            loadDefault();\n\n\n        function loadDefault() {\n            vm.photo = {\n                title: 'best photo',\n                url: 'content/images/content/images/photos/kaka-photo.jpg'\n            };\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MPhotoDialogController', MPhotoDialogController);\n\n    MPhotoDialogController.$inject = ['entity', 'Principal', 'MyWebsiteStorage', 'webId'];\n\n    function MPhotoDialogController(entity, Principal, MyWebsiteStorage, webId) {\n        var vm = this;\n\n        vm.photo = entity;\n\n        vm.submit = submit;\n        vm.deleteItem = deleteItem;\n\n        var userLogin = null;\n        vm.loading = false;\n        vm.photoFile = null;\n\n        vm.item = {\n            title: null,\n            artist: null,\n            url: null\n        };\n\n        vm.upload = upload;\n\n        Principal.identity().then(function (user) {\n            userLogin = user.login;\n        });\n\n        function reset() {\n            vm.item = {\n                name: null,\n                des: null,\n                url: null\n            };\n            vm.photoFile = null;\n            vm.loading = false;\n        }\n\n\n        function submit() {\n            if (!isExisted(vm.item)) {\n                uploadPhoto();\n            }\n        }\n\n        function isExisted(item) {\n            for (var i = 0; i < vm.photo.items.length; i++) {\n                var photo = vm.photo.items[i];\n                if (photo.name == item.name)\n                    return true;\n            }\n            return false;\n        }\n\n        function deleteItem(index) {\n            var fileName = vm.photo.items[index].url;\n            vm.loading = true;\n            MyWebsiteStorage.deleteUserWebImage(userLogin, webId, fileName).then(onSuccess, onError);\n\n            function onSuccess(response) {\n                vm.photo.items.splice(index, 1);\n                reset();\n            }\n\n            function onError(response) {\n                reset();\n            }\n\n\n        }\n\n\n        function upload(file) {\n            if (file != null) {\n                vm.item.url = file.name;\n                vm.item.name = file.name.split('.')[0];\n            }\n        }\n\n        function uploadPhoto() {\n            if (vm.photoFile != null) {\n                vm.loading = true;\n                MyWebsiteStorage.uploadUserWebImage(userLogin, webId, vm.photoFile, vm.item.url).then(onSuccess, onError);\n            }\n\n            function onSuccess(response) {\n                vm.photo.items.push(vm.item);\n                reset();\n            }\n\n            function onError(response) {\n                reset();\n            }\n        }\n\n    }\n})();\n\n(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MPhotoService', MPhotoService);\n\n    MPhotoService.$inject = ['$mdDialog'];\n\n    function MPhotoService($mdDialog) {\n\n        var photoList = null;\n\n        var instance = {\n            loadPhotoList: loadPhotoList,\n            view: view,\n            viewAt: viewAt,\n            getList: getList\n        };\n\n        function view(photo) {\n            $mdDialog.show({\n                templateUrl: 'app/web-modules/m-photo/m-photo-view-dialog.html',\n                controller: 'MPhotoViewDialogController',\n                controllerAs: 'vm',\n                targetEvent: null,\n                clickOutsideToClose: true,\n                fullscreen: false,\n                resolve: {\n                    entity: function () {\n                        return photo;\n                    }\n                }\n            });\n        }\n\n        function viewAt(index) {\n            var photo = photoList[index];\n            view(photo);\n        }\n\n        function loadPhotoList(list) {\n            photoList = list;\n        }\n\n        function getList() {\n            return photoList;\n        }\n\n        return instance;\n    }\n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MPhotoController', MPhotoController);\n\n    MPhotoController.$inject = ['MPhotoService'];\n\n    function MPhotoController(MPhotoService) {\n        var vm = this;\n\n        vm.photos = MPhotoService.getList();\n\n        vm.viewAt = viewAt;\n\n\n        function viewAt(index) {\n            MPhotoService.viewAt(index);\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MHomeDialogController', MHomeDialogController);\n\n    MHomeDialogController.$inject = [ 'entity', 'Principal', 'MyWebsiteStorage','webId'];\n\n    function MHomeDialogController( entity, Principal, MyWebsiteStorage, webId) {\n        var vm = this;\n\n        vm.homepage = entity;\n        var fileName = 'mainImage.jpg';\n        var userLogin = null;\n\n        vm.loading = false;\n\n        vm.upload = upload;\n\n        Principal.identity().then(function (user) {\n            userLogin = user.login;\n            getMainImage();\n        });\n\n\n        function upload(file) {\n            if (file != null) {\n                vm.loading = true;\n                MyWebsiteStorage.uploadUserWebImage(userLogin, webId, file, fileName).then(onSuccess, onError);\n            }\n\n            function onSuccess(response) {\n                vm.loading = false;\n                vm.homepage.mainImage = fileName;\n            }\n\n            function onError(response) {\n                vm.loading = false;\n                console.log(response);\n            }\n        }\n\n        function getMainImage() {\n            if (vm.homepage.mainImage == 'none')\n                return;\n            if(vm.homepage.tempImageLink != null)\n                return;\n\n            MyWebsiteStorage.getUserWebImage(userLogin, webId, fileName).then(onSuccess, onError);\n            function onSuccess(response) {\n                vm.homepage.tempImageLink = response.data.link;\n            }\n\n            function onError(response) {\n                console.log(response);\n            }\n        }\n\n\n    }\n})();\n\n(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MHomeService', MHomeService);\n\n    MHomeService.$inject = [];\n\n    function MHomeService() {\n\n        var mainImageLink = null;\n        var webId = null;\n        var service = {\n            setWebId: setWebId,\n            getWebId: getWebId,\n            loadImageLink: loadImageLink,\n            getImageLink: getImageLink\n        };\n\n        function setWebId(id) {\n\n        }\n\n        function getWebId() {\n            return webId;\n        }\n\n        function loadImageLink(link) {\n            mainImageLink = link;\n        }\n\n        function getImageLink() {\n            return mainImageLink;\n        }\n\n        return service;\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MHomeController', MHomeController);\n\n    MHomeController.$inject = ['$state', '$window', 'entity', 'MHomeService', 'MPhotoService', 'MSongService', 'MyWebsiteStorage'];\n\n    function MHomeController($state, $window, entity, MHomeService, MPhotoService, MSongService, MyWebsiteStorage) {\n        var vm = this;\n\n\n        var website = entity;\n        vm.song = website.custom.song;\n        vm.photo = website.custom.photo;\n        var userLogin = website.user_id;\n        var webId = website.id;\n\n        vm.songs = [];\n        vm.photos = [];\n\n        vm.homepage = website.custom.homepage;\n        vm.homeState = $state.current.name;\n        vm.mainImageLink = null;\n\n\n        if (vm.homepage == null)\n            loadDefault();\n        else {\n            if (MHomeService.getWebId() == null || MHomeService.getWebId() != website.id)\n                loadCustom();\n            else {\n                vm.mainImageLink = MHomeService.getImageLink();\n                vm.photos = MPhotoService.getList();\n                vm.songs = MSongService.getList();\n            }\n        }\n\n\n        vm.viewPhoto = viewPhoto;\n        vm.playSongAt = playSongAt;\n        vm.downloadSongAt = downloadSongAt;\n\n        function loadCustom() {\n            MHomeService.setWebId(website.id);\n            loadMainImage(userLogin);\n\n            if (vm.song.isEnable) {\n                vm.songs = vm.song.items;\n                loadSong(userLogin, vm.songs);\n            }\n            if (vm.photo.isEnable) {\n                vm.photos = vm.photo.items;\n                loadPhoto(userLogin, vm.photos);\n            }\n\n        }\n\n\n        function loadDefault() {\n            vm.photos = [\n                {\n                    name: 'kaka-photo',\n                    des: 'Real win in champion league. This is the most viewed photo of Ricardo Kaka.',\n                    tempLink: 'content/images/photos/kaka-photo.jpg'\n                },\n                {\n                    name: 'chelsea-arse',\n                    des: 'Best match, we should not miss in sunday',\n                    tempLink: 'content/images/photos/chelsea-arse.jpg'\n                },\n                {\n                    name: 'chelsea-liv',\n                    des: 'Super match with chelsea and liverpool',\n                    tempLink: 'content/images/photos/chelsea-liv.jpg'\n                }\n            ];\n\n            vm.songs = [\n                {\n                    title: 'Happy',\n                    artist: 'Pharrell Williams',\n                    tempLink: 'content/media/songs/Happy.mp3',\n                    length: '3:00',\n                    date: '2017-01-12'\n                },\n                {\n                    title: 'Paris',\n                    artist: 'The Chainsmokers',\n                    tempLink: 'content/media/songs/Paris.mp3',\n                    length: '3:15',\n                    date: '2017-01-15'\n                },\n                {\n                    title: 'Shape of You',\n                    artist: 'Ed Sheeran',\n                    tempLink: 'content/media/songs/Shape-of-You.mp3',\n                    length: '2:45',\n                    date: '2016-09-01'\n                }\n            ];\n\n            MSongService.loadSongList(vm.songs);\n\n\n            MPhotoService.loadPhotoList(vm.photos);\n        }\n\n        function loadMainImage(userLogin) {\n\n            if (vm.homepage.mainImage == 'none')\n                return;\n\n            MyWebsiteStorage.getUserWebImage(userLogin, webId, \"mainImage.jpg\").then(onSuccess, onError);\n            function onSuccess(response) {\n                vm.mainImageLink = response.data.link;\n                MHomeService.loadImageLink(vm.mainImageLink);\n            }\n\n            function onError(response) {\n                console.log(response);\n            }\n        }\n\n        function loadPhoto(userLogin, photos) {\n            for (var i = 0; i < photos.length; i++) {\n                var photo = photos[i];\n                MyWebsiteStorage.loadImageForWebItem(userLogin, webId, photo, photo.url);\n\n            }\n            MPhotoService.loadPhotoList(vm.photos);\n        }\n\n        function loadSong(userLogin, songs) {\n            for (var i = 0; i < songs.length; i++) {\n                var song = songs[i];\n                MyWebsiteStorage.loadSongForWebItem(userLogin, webId, song, song.url);\n            }\n            MSongService.loadSongList(vm.songs);\n        }\n\n        function viewPhoto(photo) {\n            MPhotoService.view(photo);\n        }\n\n        function playSongAt(index) {\n            MSongService.loadSongAt(index);\n            MSongService.play();\n        }\n\n        function downloadSongAt(index) {\n            var song = vm.songs[index];\n            var songUrl = song.tempLink;\n            $window.open(songUrl, '_blank');\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MFooterDialogController', MFooterDialogController);\n\n    MFooterDialogController.$inject = ['$state', 'entity'];\n\n    function MFooterDialogController($state, entity) {\n        var vm = this;\n\n        vm.footer = entity;\n        vm.item = null;\n\n        vm.submit = submit;\n        vm.deleteItem = deleteItem;\n\n\n        function submit() {\n            if (getIndex(vm.choice) < 0)\n                vm.footer.items.push(vm.item);\n        }\n\n        function getIndex(item) {\n            return vm.footer.items.indexOf(item);\n        }\n\n        function deleteItem(index) {\n            vm.footer.items.splice(index, 1);\n        }\n    }\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MFooterController', MFooterController);\n\n    MFooterController.$inject = ['$state', 'entity','LanguageService'];\n\n    function MFooterController($state, entity,LanguageService) {\n        var vm = this;\n\n        vm.website = entity;\n        vm.footer = vm.website.custom.footer;\n        vm.changeEnglish = changeEnglish;\n        vm.changeVietnam = changeVietnam;\n        vm.homeState = $state.current.name;\n\n        // prevent reload page => make change root state\n        if (vm.homeState.indexOf('.') > 0) {\n            vm.homeState = vm.homeState.split('.')[0];\n        }\n\n        function changeEnglish() {\n            LanguageService.changeLanguage('en');\n        }\n\n        function changeVietnam() {\n            LanguageService.changeLanguage('vi');\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MBasicInfoDialogController', MBasicInfoDialogController);\n\n    MBasicInfoDialogController.$inject = ['entity'];\n\n    function MBasicInfoDialogController( entity) {\n        var vm = this;\n        vm.basicinfo = entity;\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MBasicInfoController', MBasicInfoController);\n\n    MBasicInfoController.$inject = ['entity'];\n\n    function MBasicInfoController(entity) {\n        var vm = this;\n\n        vm.basicInfo = entity;\n\n        if (vm.basicInfo == null)\n            loadDefault();\n\n\n        function loadDefault() {\n            vm.basicInfo = {\n                isEnable: true,\n                firstName: 'first name',\n                lastName: 'last name',\n                email: 'email@gmail.com',\n                age: 21,\n                des: 'description'\n            };\n        }\n\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MAudioPlayerController', MAudioPlayerController);\n\n    MAudioPlayerController.$inject = ['$scope', 'MSongService'];\n\n    function MAudioPlayerController($scope, MSongService) {\n        var vm = this;\n\n        vm.isShow = false;\n        vm.hide = hide;\n        vm.song = MSongService.getCurrentSong();\n\n        vm.isPlaying = false;\n        vm.isRepeatOne = false;\n        vm.play = play;\n        vm.back = back;\n        vm.next = next;\n        vm.repeatOne = repeatOne;\n        vm.audio = null;\n\n        MSongService.subscribe($scope, function somethingChanged() {\n            vm.isPlaying = MSongService.checkPlaying();\n            vm.song = MSongService.getCurrentSong();\n            vm.audio = MSongService.getCurrentAudio();\n            vm.isShow = true;\n        });\n\n        function hide() {\n            MSongService.stop();\n            vm.isShow = false;\n        }\n\n        function play() {\n            if (vm.isPlaying) {\n                MSongService.pause();\n            } else {\n                MSongService.play();\n            }\n        }\n\n        function next() {\n            MSongService.playNext();\n        }\n\n        function back() {\n            MSongService.playPrevious();\n        }\n\n        function repeatOne() {\n            vm.isRepeatOne = !vm.isRepeatOne;\n            MSongService.setLoop(vm.isRepeatOne);\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('view-website', {\n            url: '/ai',\n            data: {\n                authorities: []\n            },\n            params: {\n                website: null\n            },\n            views: {\n                'content@': {\n                    templateUrl: function ($stateParams) {\n                        return 'app/templates/' + $stateParams.website.template + '/' + $stateParams.website.template + '.html';\n                    },\n                    controller: 'MyWebsiteViewController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-home@view-website': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.homepage.isEnable)\n                            return 'app/web-modules/m-home/m-home.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MHomeController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-toolbar@view-website': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.toolbar.isEnable)\n                            return 'app/web-modules/m-toolbar/m-toolbar.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MToolBarController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-sidenav@view-website': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.sidenav.isEnable)\n                            return 'app/web-modules/m-sidenav/m-sidenav.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MSidenavController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-footer@view-website': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.footer.isEnable)\n                            return 'app/web-modules/m-footer/m-footer.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MFooterController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-audio-player@view-website': {\n                    templateUrl: 'app/web-modules/m-audio-player/m-audio-player.html',\n                    controller: 'MAudioPlayerController',\n                    controllerAs: 'vm'\n                }\n            }, resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('template');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('view-website.info', {\n            parent: 'view-website',\n            url: '/info',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@view-website': {\n                    templateUrl: 'app/web-modules/m-basic-info/m-basic-info.html',\n                    controller: 'MBasicInfoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website.custom.basicInfo;\n                        }\n                    }\n                }\n            }\n        }).state('view-website.photo', {\n            parent: 'view-website',\n            url: '/photos',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@view-website': {\n                    templateUrl: 'app/web-modules/m-photo/m-photo.html',\n                    controller: 'MPhotoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                    }\n                }\n            }\n        }).state('view-website.song', {\n            parent: 'view-website',\n            url: '/songs',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@view-website': {\n                    templateUrl: 'app/web-modules/m-song/m-song.html',\n                    controller: 'MSongController',\n                    controllerAs: 'vm',\n                    resolve: {\n\n                    }\n                }\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('TemplateSearch', TemplateSearch);\n\n    TemplateSearch.$inject = ['$rootScope', 'WebTemplate','TemplateStorage'];\n\n    function TemplateSearch($rootScope, WebTemplate,TemplateStorage) {\n        var searchType = 'name';\n        var sortType = 'name';\n        var searchText = null;\n        var templates = [];\n\n        var instance = {\n            subscribe: subscribe,\n            search: search,\n            getTemplates: getTemplates,\n            setSortType: setSortType,\n            setSearchType: setSearchType\n        };\n\n        loadAll();\n\n        function getTemplates() {\n            return templates;\n        }\n\n        function setSortType(type) {\n            sortType = type;\n        }\n\n        function setSearchType(type) {\n            searchType = type;\n        }\n\n        function search(text) {\n            if (text) {\n                WebTemplate.search({\n                    query: text,\n                    field: searchType,\n                    sort: sort\n                }, onSuccess);\n                searchText = text;\n            } else\n                loadAll();\n        }\n\n\n        function loadAll() {\n            WebTemplate.query({\n                sort: sort()\n            }, onSuccess);\n        }\n\n        function sort() {\n            var result = [sortType + ',' + ('asc')];\n            if (sortType !== 'id') {\n                result.push('id');\n            }\n            return result;\n        }\n\n        function onSuccess(data) {\n            templates = data;\n            loadImages(templates);\n            notify();\n        }\n\n        function loadImages(webTemplates) {\n            for (var i = 0; i < webTemplates.length; i++) {\n                var template  = webTemplates[i];\n                if(template.image  != null){\n                    TemplateStorage.loadImageForWebTemplateItem(template.id,template,\"mainImage.jpg\");\n                }\n            }\n\n        }\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n\n        return instance;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('template', {\n            parent: 'app',\n            url: '/template?text&type',\n            data: {\n                authorities: []\n            },\n            params: {\n              text: null\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/templates/templates.html',\n                    controller: 'TemplateController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('template');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('TemplateService', TemplateService);\n\n    TemplateService.$inject = ['$rootScope','WebTemplate','TemplateStorage'];\n\n    function TemplateService($rootScope,WebTemplate,TemplateStorage) {\n        var instance = {\n            all: all,\n            subscribe: subscribe\n        };\n\n        var templates = [];\n\n        loadAll();\n\n        function all() {\n            return templates;\n        }\n\n        function loadAll() {\n            WebTemplate.query({}, onSuccess);\n        }\n\n        function onSuccess(data) {\n            templates = data;\n            loadImages(templates);\n            notify();\n        }\n\n        function loadImages(webTemplates) {\n            for (var i = 0; i < webTemplates.length; i++) {\n                var template = webTemplates[i];\n                if (template.image != null) {\n                    TemplateStorage.loadImageForWebTemplateItem(template.id, template, \"mainImage.jpg\");\n                }\n            }\n        }\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n\n        return instance;\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('TemplateController', TemplateController);\n\n    TemplateController.$inject = ['$scope', '$timeout','TemplateSearch', '$stateParams'];\n\n    function TemplateController($scope, $timeout,TemplateSearch, $stateParams) {\n        var vm = this;\n        vm.currentPage = 0;\n\n        vm.webTemplates = [];\n\n\n        vm.currentSearch = 'name';\n        vm.currentSort = 'name';\n        vm.changeSearchType = changeSearchType;\n        vm.changeSortType = changeSortType;\n\n        loadTemplates();\n\n        function loadTemplates() {\n            vm.webTemplates = TemplateSearch.getTemplates();\n        }\n\n        TemplateSearch.subscribe($scope, function somethingChanged() {\n            loadTemplates();\n        });\n\n        function changeSearchType() {\n            TemplateSearch.setSearchType(vm.currentSearch);\n        }\n\n        function changeSortType() {\n            TemplateSearch.setSortType(vm.currentSort);\n        }\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('latest-template', {\n            url: '/latest-template',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/templates/latest-template/latest-template.html',\n                    controller: 'LatestTemplateController',\n                    controllerAs: 'vm'\n                },\n                'm-home@latest-template': {\n                    templateUrl: 'app/web-modules/m-home/m-home.html',\n                    controller: 'MHomeController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }],\n                        song: [function () {\n                            return null;\n                        }],\n                        photo: [function () {\n                            return null;\n                        }],\n                        webId: [function () {\n                            return null;\n                        }],\n                        userLogin: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-toolbar@latest-template': {\n                    templateUrl: 'app/web-modules/m-toolbar/m-toolbar.html',\n                    controller: 'MToolBarController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-sidenav@latest-template': {\n                    templateUrl: 'app/web-modules/m-sidenav/m-sidenav.html',\n                    controller: 'MSidenavController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-footer@latest-template': {\n                    templateUrl: 'app/web-modules/m-footer/m-footer.html',\n                    controller: 'MFooterController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-audio-player@latest-template': {\n                    templateUrl: 'app/web-modules/m-audio-player/m-audio-player.html',\n                    controller: 'MAudioPlayerController',\n                    controllerAs: 'vm'\n                }\n            }, resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('template');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('latest-template.info', {\n            parent: 'latest-template',\n            url: '/info',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@latest-template': {\n                    templateUrl: 'app/web-modules/m-basic-info/m-basic-info.html',\n                    controller: 'MBasicInfoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        }).state('latest-template.photo', {\n            parent: 'latest-template',\n            url: '/photos',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@latest-template': {\n                    templateUrl: 'app/web-modules/m-photo/m-photo.html',\n                    controller: 'MPhotoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        }).state('latest-template.song', {\n            parent: 'latest-template',\n            url: '/songs',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@latest-template': {\n                    templateUrl: 'app/web-modules/m-song/m-song.html',\n                    controller: 'MSongController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('LatestTemplateController', LatestTemplateController);\n\n    LatestTemplateController.$inject = ['$scope','MSongService'];\n\n    function LatestTemplateController($scope,MSongService) {\n        var vm = this;\n\n        $scope.$on('$destroy', function handler() {\n            // destruction code here\n            MSongService.stop();\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('beautiful-template', {\n            url: '/beautiful-template',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/templates/beautiful-template/beautiful-template.html',\n                    controller: 'BeautifulTemplateController',\n                    controllerAs: 'vm'\n                },\n                'm-home@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-home/m-home.html',\n                    controller: 'MHomeController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }],\n                        song: [function () {\n                            return null;\n                        }],\n                        photo: [function () {\n                            return null;\n                        }],\n                        webId: [function () {\n                            return null;\n                        }],\n                        userLogin: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-toolbar@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-toolbar/m-toolbar.html',\n                    controller: 'MToolBarController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-sidenav@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-sidenav/m-sidenav.html',\n                    controller: 'MSidenavController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-footer@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-footer/m-footer.html',\n                    controller: 'MFooterController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-audio-player@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-audio-player/m-audio-player.html',\n                    controller: 'MAudioPlayerController',\n                    controllerAs: 'vm'\n                }\n            }, resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('template');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('beautiful-template.info', {\n            parent: 'beautiful-template',\n            url: '/info',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-basic-info/m-basic-info.html',\n                    controller: 'MBasicInfoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        }).state('beautiful-template.photo', {\n            parent: 'beautiful-template',\n            url: '/photos',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-photo/m-photo.html',\n                    controller: 'MPhotoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        }).state('beautiful-template.song', {\n            parent: 'beautiful-template',\n            url: '/songs',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@beautiful-template': {\n                    templateUrl: 'app/web-modules/m-song/m-song.html',\n                    controller: 'MSongController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('BeautifulTemplateController', BeautifulTemplateController);\n\n    BeautifulTemplateController.$inject = ['$scope','MSongService'];\n\n    function BeautifulTemplateController($scope,MSongService) {\n        var vm = this;\n\n        $scope.$on('$destroy', function handler() {\n            // destruction code here\n            MSongService.stop();\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('basic-template', {\n            url: '/basic-template',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/templates/basic-template/basic-template.html',\n                    controller: 'BasicTemplateController',\n                    controllerAs: 'vm'\n                },\n                'm-home@basic-template': {\n                    templateUrl: 'app/web-modules/m-home/m-home.html',\n                    controller: 'MHomeController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }],\n                        song: [function () {\n                            return null;\n                        }],\n                        photo: [function () {\n                            return null;\n                        }],\n                        webId: [function () {\n                            return null;\n                        }],\n                        userLogin: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-toolbar@basic-template': {\n                    templateUrl: 'app/web-modules/m-toolbar/m-toolbar.html',\n                    controller: 'MToolBarController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-sidenav@basic-template': {\n                    templateUrl: 'app/web-modules/m-sidenav/m-sidenav.html',\n                    controller: 'MSidenavController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-footer@basic-template': {\n                    templateUrl: 'app/web-modules/m-footer/m-footer.html',\n                    controller: 'MFooterController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                },\n                'm-audio-player@basic-template': {\n                    templateUrl: 'app/web-modules/m-audio-player/m-audio-player.html',\n                    controller: 'MAudioPlayerController',\n                    controllerAs: 'vm'\n                }\n            }, resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('template');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('basic-template.info', {\n            parent: 'basic-template',\n            url: '/info',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@basic-template': {\n                    templateUrl: 'app/web-modules/m-basic-info/m-basic-info.html',\n                    controller: 'MBasicInfoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        }).state('basic-template.photo', {\n            parent: 'basic-template',\n            url: '/photos',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@basic-template': {\n                    templateUrl: 'app/web-modules/m-photo/m-photo.html',\n                    controller: 'MPhotoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        }).state('basic-template.song', {\n            parent: 'basic-template',\n            url: '/songs',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@basic-template': {\n                    templateUrl: 'app/web-modules/m-song/m-song.html',\n                    controller: 'MSongController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: [function () {\n                            return null;\n                        }]\n                    }\n                }\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('BasicTemplateController', BasicTemplateController);\n\n    BasicTemplateController.$inject = ['$scope','MSongService'];\n\n    function BasicTemplateController($scope,MSongService) {\n        var vm = this;\n\n        $scope.$on(\"$destroy\", function handler() {\n            // destruction code here\n            MSongService.stop();\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('User', User);\n\n    User.$inject = ['$resource'];\n\n    function User($resource) {\n        var service = $resource('api/users/:login', {}, {\n            'query': {method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    data = angular.fromJson(data);\n                    return data;\n                }\n            },\n            'save': {method: 'POST'},\n            'update': {method: 'PUT'},\n            'delete': {method: 'DELETE'},\n            'email': {\n                method: 'GET',\n                url: 'api/users/email',\n                transformResponse: function (data) {\n                    if(data)\n                     data = angular.fromJson(data);\n                    return data;\n                }\n            }\n        });\n\n        return service;\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('TemplateStorage', TemplateStorage);\n\n    TemplateStorage.$inject = ['$http','Storage'];\n\n    function TemplateStorage($http,Storage) {\n\n        var storageToken = Storage.getToken();\n        var uploadUrl = Storage.getUploadUrl();\n        var getUrl = Storage.getLoadUrl();\n        var deleteUrl = Storage.getDeleteUrl();\n\n        var service = {\n            uploadTemplateImage: uploadTemplateImage,\n            getTemplateImage: getTemplateImage,\n            deleteTemplateImage: deleteTemplateImage,\n            loadImageForWebTemplateItem: loadImageForWebTemplateItem\n        };\n\n        function uploadTemplateImage(templateId,file,fileName) {\n            var req = {\n                method: 'POST',\n                url: uploadUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/octet-stream',\n                    'Dropbox-API-Arg': '{\"path\": \"/api/images/templates/' + templateId + '/'  + fileName + '\", \"autorename\": false,\"mode\":{\".tag\":\"overwrite\"}}'\n                },\n                data: file\n            }\n\n            return $http(req);\n        }\n\n        function getTemplateImage(templateId,fileName) {\n            var req = {\n                method: 'POST',\n                url: getUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/images/templates/\" + templateId + '/'  + fileName\n                }\n            }\n\n            return $http(req);\n        }\n\n        function deleteTemplateImage(templateId,fileName) {\n            var req = {\n                method: 'POST',\n                url: deleteUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/images/templates/\" + templateId + '/'  + fileName\n                }\n            }\n\n            return $http(req);\n        }\n\n        function loadImageForWebTemplateItem(templateId,item,fileName) {\n            var req = {\n                method: 'POST',\n                url: getUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/images/templates/\" + templateId + '/'  + fileName\n                }\n            }\n            $http(req).success(function (response) {\n                item['tempLink'] = response.link;\n            });\n        }\n\n\n        return service;\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Storage', Storage);\n\n    Storage.$inject = ['$http'];\n\n    function Storage($http) {\n\n        var storageToken = \"sHqhTAgPouAAAAAAAAACZd2ylvKjki_lxskKjwGaWh3Y3GdF-6il8ytpoJYlDNNO\";\n        var uploadUrl = \"https://content.dropboxapi.com/2/files/alpha/upload\";\n        var getUrl = \"https://api.dropboxapi.com/2/files/get_temporary_link\";\n        var deleteUrl = \"https://api.dropboxapi.com/2/files/delete\";\n\n        var service = {\n            getToken: getToken,\n            getUploadUrl: getUploadUrl,\n            getLoadUrl: getLoadUrl,\n            getDeleteUrl: getDeleteUrl\n        };\n\n        function getToken() {\n            return storageToken;\n        }\n\n        function getUploadUrl() {\n            return uploadUrl;\n        }\n\n        function getLoadUrl() {\n            return getUrl;\n        }\n\n        function getDeleteUrl() {\n            return deleteUrl;\n        }\n\n\n        return service;\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('MyWebsiteStorage', MyWebsiteStorage);\n\n    MyWebsiteStorage.$inject = ['$http','Storage'];\n\n    function MyWebsiteStorage($http,Storage) {\n\n        var storageToken = Storage.getToken();\n        var uploadUrl = Storage.getUploadUrl();\n        var getUrl = Storage.getLoadUrl();\n        var deleteUrl = Storage.getDeleteUrl();\n\n        var service = {\n            uploadUserWebImage: uploadUserWebImage,\n            getUserWebImage: getUserWebImage,\n            getUserWebSong: getUserWebSong,\n            uploadUserWebSong: uploadUserWebSong,\n            deleteUserWebImage: deleteUserWebImage,\n            deleteUserWebSong: deleteUserWebSong,\n            deleteUserWebImageFolder: deleteUserWebImageFolder,\n            loadImageForWebItem: loadImageForWebItem,\n            loadSongForWebItem: loadSongForWebItem\n        };\n\n        function uploadUserWebImage(userId,webId,file,fileName) {\n            var req = {\n                method: 'POST',\n                url: uploadUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/octet-stream',\n                    'Dropbox-API-Arg': '{\"path\": \"/api/images/' + userId + '/' + webId + '/'  + fileName + '\", \"autorename\": false,\"mode\":{\".tag\":\"overwrite\"}}'\n                },\n                data: file\n            }\n\n            return $http(req);\n        }\n\n        function uploadUserWebSong(userId,webId,file,fileName) {\n            var req = {\n                method: 'POST',\n                url: uploadUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/octet-stream',\n                    'Dropbox-API-Arg': '{\"path\": \"/api/songs/' + userId + '/' + webId + '/'  + fileName + '\", \"autorename\": false,\"mode\":{\".tag\":\"overwrite\"}}'\n                },\n                data: file\n            }\n\n            return $http(req);\n        }\n\n        function getUserWebImage(userId,webId, fileName) {\n            var req = {\n                method: 'POST',\n                url: getUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/images/\" + userId + '/' + webId + '/' + fileName\n                }\n            }\n            return $http(req);\n        }\n\n        function getUserWebSong(userId,webId, fileName) {\n            var req = {\n                method: 'POST',\n                url: getUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/songs/\" + userId + '/' + webId + '/' + fileName\n                }\n            }\n\n            return $http(req);\n        }\n\n        function deleteUserWebImageFolder(userId,webId) {\n            var req = {\n                method: 'POST',\n                url: deleteUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/images/\" + userId + '/' + webId\n                }\n            }\n            return  $http(req);\n        }\n\n        function deleteUserWebImage(userId,webId,fileName) {\n            var req = {\n                method: 'POST',\n                url: deleteUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/images/\" + userId + '/' + webId + '/' + fileName\n                }\n            }\n\n            return $http(req);\n        }\n\n        function deleteUserWebSong(userId,webId,fileName) {\n            var req = {\n                method: 'POST',\n                url: deleteUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/songs/\" + userId + '/' + webId + '/' + fileName\n                }\n            }\n\n            return $http(req);\n        }\n\n        function loadImageForWebItem(userId, webId, item, fileName) {\n            var req = {\n                method: 'POST',\n                url: getUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/images/\" + userId + '/' + webId + '/' + fileName\n                }\n            }\n            $http(req).success(function (response) {\n                item['tempLink'] = response.link;\n            });\n        }\n\n        function loadSongForWebItem(userId, webId, item, fileName) {\n            var req = {\n                method: 'POST',\n                url: getUrl,\n                headers: {\n                    'Authorization': 'Bearer ' + storageToken,\n                    'Content-Type': 'application/json'\n                },\n                data: {\n                    \"path\": \"/api/songs/\" + userId + '/' + webId + '/' + fileName\n                }\n            }\n            $http(req).success(function (response) {\n                item['tempLink'] = response.link;\n            });\n        }\n\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('ProfileService', ProfileService);\n\n    ProfileService.$inject = ['$http'];\n\n    function ProfileService($http) {\n\n        var dataPromise;\n\n        var service = {\n            getProfileInfo : getProfileInfo\n        };\n\n        return service;\n\n        function getProfileInfo() {\n            if (angular.isUndefined(dataPromise)) {\n                dataPromise = $http.get('api/profile-info').then(function(result) {\n                    if (result.data.activeProfiles) {\n                        var response = {};\n                        response.activeProfiles = result.data.activeProfiles;\n                        response.ribbonEnv = result.data.ribbonEnv;\n                        response.inProduction = result.data.activeProfiles.indexOf(\"prod\") !== -1;\n                        response.swaggerEnabled = result.data.activeProfiles.indexOf(\"swagger\") !== -1;\n                        return response;\n                    }\n                });\n            }\n            return dataPromise;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('pageRibbon', pageRibbon);\n\n    pageRibbon.$inject = ['ProfileService', '$rootScope', '$translate'];\n\n    function pageRibbon(ProfileService, $rootScope, $translate) {\n        var directive = {\n            replace : true,\n            restrict : 'AE',\n            template : '<div class=\"ribbon hidden\"><a href=\"\" translate=\"global.ribbon.{{ribbonEnv}}\">{{ribbonEnv}}</a></div>',\n            link : linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            ProfileService.getProfileInfo().then(function(response) {\n                if (response.ribbonEnv) {\n                    scope.ribbonEnv = response.ribbonEnv;\n                    element.addClass(response.ribbonEnv);\n                    element.removeClass('hidden');\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Mail', Mail);\n\n    Mail.$inject = ['$resource'];\n\n    function Mail ($resource) {\n        var service = $resource('api/mail', {}, {\n            'share': { method: 'GET',\n                url: 'api/mail/share'}\n        });\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Facebook', Facebook);\n\n    Facebook.$inject = [];\n\n    function Facebook () {\n        var service ={\n            share: share\n        };\n\n        function share(url) {\n            FB.ui({\n                method: 'share',\n                display: 'popup',\n                href: url,\n            }, function(response){});\n        }\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Sessions', Sessions);\n\n    Sessions.$inject = ['$resource'];\n\n    function Sessions ($resource) {\n        return $resource('api/account/sessions/:series', {}, {\n            'getAll': { method: 'GET', isArray: true}\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Register', Register);\n\n    Register.$inject = ['$resource'];\n\n    function Register ($resource) {\n        return $resource('api/register', {}, {});\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Principal', Principal);\n\n    Principal.$inject = ['$q', 'Account', '$rootScope'];\n\n    function Principal($q, Account, $rootScope) {\n        var _identity,\n            _authenticated = false;\n\n        var service = {\n            authenticate: authenticate,\n            hasAnyAuthority: hasAnyAuthority,\n            hasAuthority: hasAuthority,\n            identity: identity,\n            isAuthenticated: isAuthenticated,\n            isIdentityResolved: isIdentityResolved\n        };\n\n        return service;\n\n        function authenticate(identity) {\n            _identity = identity;\n            _authenticated = identity !== null;\n\n        }\n\n\n        function hasAnyAuthority(authorities) {\n            if (!_authenticated || !_identity || !_identity.authorities) {\n                return false;\n            }\n\n            for (var i = 0; i < authorities.length; i++) {\n                if (_identity.authorities.indexOf(authorities[i]) !== -1) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        function hasAuthority(authority) {\n            if (!_authenticated) {\n                return $q.when(false);\n            }\n\n            return this.identity().then(function (_id) {\n                return _id.authorities && _id.authorities.indexOf(authority) !== -1;\n            }, function () {\n                return false;\n            });\n        }\n\n        function identity(force) {\n            var deferred = $q.defer();\n\n            if (force === true) {\n                _identity = undefined;\n            }\n\n            // check and see if we have retrieved the identity data from the server.\n            // if we have, reuse it by immediately resolving\n            if (angular.isDefined(_identity)) {\n                deferred.resolve(_identity);\n\n                return deferred.promise;\n            }\n\n            // retrieve the identity data from the server, update the identity object, and then resolve.\n            Account.get().$promise\n                .then(getAccountThen)\n                .catch(getAccountCatch);\n\n\n            return deferred.promise;\n\n            function getAccountThen(account) {\n                _identity = account.data;\n                _authenticated = true;\n                deferred.resolve(_identity);\n            }\n\n            function getAccountCatch() {\n                _identity = null;\n                _authenticated = false;\n                deferred.resolve(_identity);\n            }\n\n\n        }\n\n\n\n\n        function isAuthenticated() {\n            return _authenticated;\n        }\n\n        function isIdentityResolved() {\n            return angular.isDefined(_identity);\n        }\n\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('PasswordResetInit', PasswordResetInit);\n\n    PasswordResetInit.$inject = ['$resource'];\n\n    function PasswordResetInit($resource) {\n        var service = $resource('api/account/reset_password/init', {}, {});\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('PasswordResetFinish', PasswordResetFinish);\n\n    PasswordResetFinish.$inject = ['$resource'];\n\n    function PasswordResetFinish($resource) {\n        var service = $resource('api/account/reset_password/finish', {}, {});\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Password', Password);\n\n    Password.$inject = ['$resource'];\n\n    function Password($resource) {\n        var service = $resource('api/account/change_password', {}, {});\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('hasAuthority', hasAuthority);\n\n    hasAuthority.$inject = ['Principal'];\n\n    function hasAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authority = attrs.hasAuthority.replace(/\\s+/g, '');\n\n            var setVisible = function () {\n                    element.removeClass('hide');\n                },\n                setHidden = function () {\n                    element.addClass('hide');\n                },\n                defineVisibility = function (reset) {\n\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    Principal.hasAuthority(authority)\n                        .then(function (result) {\n                            if (result) {\n                                setVisible();\n                            } else {\n                                setHidden();\n                            }\n                        });\n                };\n\n            if (authority.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('hasAnyAuthority', hasAnyAuthority);\n\n    hasAnyAuthority.$inject = ['Principal'];\n\n    function hasAnyAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authorities = attrs.hasAnyAuthority.replace(/\\s+/g, '').split(',');\n\n            var setVisible = function () {\n                    element.removeClass('hidden');\n                },\n                setHidden = function () {\n                    element.addClass('hidden');\n                },\n                defineVisibility = function (reset) {\n                    var result;\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    result = Principal.hasAnyAuthority(authorities);\n                    if (result) {\n                        setVisible();\n                    } else {\n                        setHidden();\n                    }\n                };\n\n            if (authorities.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Auth', Auth);\n\n    Auth.$inject = ['$rootScope', '$state', '$sessionStorage', '$q', '$translate', 'Principal', 'AuthServerProvider', 'Account', 'LoginService', 'Register', 'Activate', 'Password', 'PasswordResetInit', 'PasswordResetFinish','MyWebsiteOffline'];\n\n    function Auth ($rootScope, $state, $sessionStorage, $q, $translate, Principal, AuthServerProvider, Account, LoginService, Register, Activate, Password, PasswordResetInit, PasswordResetFinish,MyWebsiteOffline) {\n        var service = {\n            activateAccount: activateAccount,\n            authorize: authorize,\n            changePassword: changePassword,\n            createAccount: createAccount,\n            getPreviousState: getPreviousState,\n            login: login,\n            logout: logout,\n            loginWithToken: loginWithToken,\n            resetPasswordFinish: resetPasswordFinish,\n            resetPasswordInit: resetPasswordInit,\n            resetPreviousState: resetPreviousState,\n            storePreviousState: storePreviousState,\n            updateAccount: updateAccount,\n            subscribe: subscribe\n        };\n\n        return service;\n\n        function activateAccount (key, callback) {\n            var cb = callback || angular.noop;\n\n            return Activate.get(key,\n                function (response) {\n                    return cb(response);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function authorize (force) {\n            var authReturn = Principal.identity(force).then(authThen);\n\n            return authReturn;\n\n            function authThen () {\n                var isAuthenticated = Principal.isAuthenticated();\n\n                // an authenticated user can't access to login and register pages\n                if (isAuthenticated && $rootScope.toState.parent === 'account' && ($rootScope.toState.name === 'login' || $rootScope.toState.name === 'register' || $rootScope.toState.name === 'social-auth')) {\n                    $state.go('home');\n                }\n\n                // recover and clear previousState after external login redirect (e.g. oauth2)\n                if (isAuthenticated && !$rootScope.fromState.name && getPreviousState()) {\n                    var previousState = getPreviousState();\n                    resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n\n                if ($rootScope.toState.data.authorities && $rootScope.toState.data.authorities.length > 0 && !Principal.hasAnyAuthority($rootScope.toState.data.authorities)) {\n                    if (isAuthenticated) {\n                        // user is signed in but not authorized for desired state\n                        $state.go('accessdenied');\n                    }\n                    else {\n                        // user is not authenticated. stow the state they wanted before you\n                        // send them to the login service, so you can return them when you're done\n                        storePreviousState($rootScope.toState.name, $rootScope.toStateParams);\n\n                        // now, send them to the signin state so they can log in\n                        $state.go('accessdenied').then(function() {\n                            LoginService.open();\n                        });\n                    }\n                }\n            }\n        }\n\n        function changePassword (newPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return Password.save(newPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function createAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Register.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    this.logout();\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function login (credentials, callback) {\n            var cb = callback || angular.noop;\n            var deferred = $q.defer();\n\n            AuthServerProvider.login(credentials)\n                .then(loginThen)\n                .catch(function (err) {\n                    this.logout();\n                    deferred.reject(err);\n                    return cb(err);\n                }.bind(this));\n\n            function loginThen (data) {\n                Principal.identity(true).then(function(account) {\n                    // After the login the language will be changed to\n                    // the language selected by the user during his registration\n                    if (account!== null) {\n                         loadDefaultUserData(account);\n                        $translate.use(account.langKey).then(function () {\n                            $translate.refresh();\n                        });\n                    }\n                    deferred.resolve(data);\n                });\n                return cb();\n            }\n\n            return deferred.promise;\n        }\n\n        function loginWithToken(jwt, rememberMe) {\n            return AuthServerProvider.loginWithToken(jwt, rememberMe);\n        }\n\n        function loadDefaultUserData(account) {\n            MyWebsiteOffline.reloadAll();\n            Account.social().$promise\n                .then(getSocialAccountThen);\n\n            function getSocialAccountThen(result) {\n                if(account.data != \"\"){\n                    account[\"displayName\"] = result.data.displayName;\n                    account[\"imageURL\"] = result.data.imageURL;\n                    notify();\n                }\n            }\n            notify();\n        }\n\n\n\n        function logout () {\n            AuthServerProvider.logout();\n            Principal.authenticate(null);\n        }\n\n        function resetPasswordFinish (keyAndPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetFinish.save(keyAndPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function resetPasswordInit (mail, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetInit.save(mail, function() {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function updateAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Account.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function getPreviousState() {\n            var previousState = $sessionStorage.previousState;\n            return previousState;\n        }\n\n        function resetPreviousState() {\n            delete $sessionStorage.previousState;\n        }\n\n        function storePreviousState(previousStateName, previousStateParams) {\n            var previousState = { \"name\": previousStateName, \"params\": previousStateParams };\n            $sessionStorage.previousState = previousState;\n        }\n\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('AuthServerProvider', AuthServerProvider);\n\n    AuthServerProvider.$inject = ['$http', '$localStorage', '$sessionStorage', '$q'];\n\n    function AuthServerProvider ($http, $localStorage, $sessionStorage, $q) {\n        var service = {\n            getToken: getToken,\n            login: login,\n            loginWithToken: loginWithToken,\n            storeAuthenticationToken: storeAuthenticationToken,\n            logout: logout\n        };\n\n        return service;\n\n        function getToken () {\n            return $localStorage.authenticationToken || $sessionStorage.authenticationToken;\n        }\n\n        function login (credentials) {\n\n            var data = {\n                username: credentials.username,\n                password: credentials.password,\n                rememberMe: credentials.rememberMe\n            };\n            return $http.post('api/authenticate', data).success(authenticateSuccess);\n\n            function authenticateSuccess (data, status, headers) {\n                var bearerToken = headers('Authorization');\n                if (angular.isDefined(bearerToken) && bearerToken.slice(0, 7) === 'Bearer ') {\n                    var jwt = bearerToken.slice(7, bearerToken.length);\n                    service.storeAuthenticationToken(jwt, credentials.rememberMe);\n                    return jwt;\n                }\n            }\n        }\n\n        function loginWithToken(jwt, rememberMe) {\n            var deferred = $q.defer();\n\n            if (angular.isDefined(jwt)) {\n                this.storeAuthenticationToken(jwt, rememberMe);\n                deferred.resolve(jwt);\n            } else {\n                deferred.reject();\n            }\n\n            return deferred.promise;\n        }\n\n        function storeAuthenticationToken(jwt, rememberMe) {\n            if(rememberMe){\n                $localStorage.authenticationToken = jwt;\n            } else {\n                $sessionStorage.authenticationToken = jwt;\n            }\n        }\n\n        function logout () {\n            delete $localStorage.authenticationToken;\n            delete $sessionStorage.authenticationToken;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Activate', Activate);\n\n    Activate.$inject = ['$resource'];\n\n    function Activate ($resource) {\n        var service = $resource('api/activate', {}, {\n            'get': { method: 'GET', params: {}, isArray: false}\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Account', Account);\n\n    Account.$inject = ['$resource'];\n\n    function Account ($resource) {\n        var service = $resource('api/account', {}, {\n            'get': { method: 'GET', params: {}, isArray: false,\n                interceptor: {\n                    response: function(response) {\n                        // expose response\n                        return response;\n                    }\n                }\n            },\n            'social': { method: 'GET', url: 'api/account/social', params: {}, isArray: false,\n                interceptor: {\n                    response: function(response) {\n                        // expose response\n                        return response;\n                    }\n                }\n            }\n        });\n\n        return service;\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('website-payment', {\n            parent: 'payment',\n            url: '/payment/website/{id}',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'gsiteApp.website.detail.title'\n            },\n            params: {\n                id: null\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/payment/website-payment/website-payment.html',\n                    controller: 'WebsitePaymentController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('website-payment');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Website', function ($stateParams, Website) {\n                    return Website.get({id: $stateParams.id}).$promise;\n                }]\n            }\n        }).state('website-payment.pay', {\n            parent: 'payment',\n            url: '/website-payment/{id}',\n            data: {\n                authorities: ['ROLE_USER']\n            },\n            views: {\n                'content@': {\n                    controller: 'WebsitePaymentPayPalController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('website-payment');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Website', function ($stateParams, Website) {\n                    return Website.get({id: $stateParams.id}).$promise;\n                }]\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('WebsitePayment', WebsitePayment);\n\n    WebsitePayment.$inject = ['$resource', 'DateUtils'];\n\n    function WebsitePayment($resource, DateUtils) {\n        var resourceUrl = 'api/website-payment/';\n\n        return $resource(resourceUrl, {}, {\n            'create': {method: 'POST', url: 'api/website-payment/create'},\n            'execute': {method: 'POST', url: 'api/website-payment/execute'},\n            'card': {method: 'POST', url: 'api/website-payment/credit-card'}\n        });\n    }\n})();\n\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebsitePaymentPayPalController', WebsitePaymentPayPalController);\n\n    WebsitePaymentPayPalController.$inject = ['$state', '$stateParams', 'WebsitePayment', '$location', 'MyWebsite'];\n\n    function WebsitePaymentPayPalController( $state, $stateParams, WebsitePayment, $location, MyWebsite) {\n        var vm = this;\n\n        var payment = $location.search();\n\n        var webId = $stateParams.id;\n\n        WebsitePayment.execute({\n            paymentID: payment.paymentId, payerID: payment.PayerID\n        }, null, onExecuteSuccess, onExecuteError);\n\n\n        function onExecuteSuccess(data) {\n            MyWebsite.paid({id: webId},null, onSuccess);\n\n            function onSuccess() {\n                $state.go('my-website', null, {reload: 'my-website'});\n            }\n        }\n\n        function onExecuteError() {\n            $state.go('website-payment', {id: webId}, {reload: 'website-payment'});\n        }\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebsitePaymentController', WebsitePaymentController);\n\n    WebsitePaymentController.$inject = ['entity','$state','WebsitePayment','$window','MyWebsite','AlertService'];\n\n    function WebsitePaymentController( entity, $state, WebsitePayment, $window, MyWebsite, AlertService) {\n        var vm = this;\n\n        if(entity == null) {\n            $state.go(\"template\");\n            return;\n        }\n        vm.website = entity;\n\n        vm.buyNow = buyNow;\n        vm.buyWithCard = buyWithCard;\n        vm.card = {\n            number: null,\n            type: null,\n            firstName: null,\n            lastName: null,\n            month: null,\n            year: null,\n            cvv: null\n        };\n\n        function buyNow() {\n            vm.isPaying = true;\n            WebsitePayment.create({\n                webId: vm.website.id\n            },null, onSuccess);\n\n            function onSuccess(data) {\n                $window.location.href  = data.approval_link;\n            }\n        }\n\n        function buyWithCard() {\n            vm.isPaying = true;\n            WebsitePayment.card({\n                webId: vm.website.id,\n                number: vm.card.number,\n                type: vm.card.type,\n                firstName: vm.card.firstName,\n                lastName: vm.card.lastName,\n                month: vm.card.month,\n                year: vm.card.year,\n                cvv: vm.card.cvv\n            },null,onExecuteSuccess, onExecuteError);\n\n        }\n\n        function onExecuteSuccess() {\n            MyWebsite.paid({id: vm.website.id},null, onSuccess);\n            function onSuccess() {\n                $state.go('my-website', null, {reload: 'my-website'});\n            }\n        }\n\n        function onExecuteError() {\n            vm.isPaying = false;\n            AlertService.error(\"PayPal with timeout. Press buy button again!\");\n        }\n\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('payment', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebsiteDialogController', WebsiteDialogController);\n\n    WebsiteDialogController.$inject = ['$scope', '$mdDialog', 'entity', 'Website','WebTemplate','User'];\n\n    function WebsiteDialogController ( $scope, $mdDialog, entity, Website, WebTemplate, User) {\n        var vm = this;\n\n        vm.templates = [];\n        vm.users = [];\n\n        vm.website = entity;\n        vm.isDomainError = false;\n        vm.closeDialog = closeDialog;\n        vm.datePickerOpenStatus = {};\n        vm.openCalendar = openCalendar;\n        vm.save = save;\n\n        function closeDialog () {\n            $mdDialog.cancel('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.website.id !== null) {\n                Website.update(vm.website, onSaveSuccess, onSaveError);\n            } else {\n                Website.save(vm.website, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('gsiteApp:websiteUpdate', result);\n            $mdDialog.hide(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError (result) {\n            vm.isSaving = false;\n            if(result.data != null){\n                vm.isDomainError = true;\n            }\n        }\n\n        vm.datePickerOpenStatus.created = false;\n\n        function openCalendar (date) {\n            vm.datePickerOpenStatus[date] = true;\n        }\n\n        findAllTemplates();\n\n        function findAllTemplates() {\n            WebTemplate.query({\n                page: 0,\n                size: 5\n            }, onSuccess);\n\n            function onSuccess(data) {\n                for (var i = 0; i < data.length; i++) {\n                    vm.templates.push(data[i]);\n                }\n            }\n        }\n\n\n        findAllUsers();\n\n        function findAllUsers() {\n            User.query({\n                page: 0,\n                size: 5\n            }, onSuccess);\n\n            function onSuccess(data) {\n                for (var i = 0; i < data.length; i++) {\n                    vm.users.push(data[i]);\n                }\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebsiteDetailController', WebsiteDetailController);\n\n    WebsiteDetailController.$inject = ['$scope', '$rootScope', 'previousState', 'entity'];\n\n    function WebsiteDetailController($scope, $rootScope, previousState, entity) {\n        var vm = this;\n\n        vm.website = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('gsiteApp:websiteUpdate', function(event, result) {\n            vm.website = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('website', {\n                parent: 'manager',\n                url: '/website',\n                data: {\n                    authorities: ['ROLE_MANAGER'],\n                    pageTitle: 'gsiteApp.website.home.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/website/websites.html',\n                        controller: 'WebsiteController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('website');\n                        $translatePartialLoader.addPart('global');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('website.new', {\n                parent: 'website',\n                url: '/new',\n                data: {\n                    authorities: ['ROLE_MANAGER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/website/website-dialog.html',\n                        controller: 'WebsiteDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: function () {\n                                return {\n                                    id: null,\n                                    name: null,\n                                    des: null,\n                                    domain: null,\n                                    template: null,\n                                    created: new Date(),\n                                    user_id: null,\n                                    paid: false,\n                                    sharedUsers: [],\n                                    custom: {\n                                        toolbar: {\n                                            isEnable: true,\n                                            title: \"Person\",\n                                            textColor: '#FFFFFF'\n                                        },\n                                        homepage: {\n                                            isEnable: true,\n                                            name: \"name\",\n                                            fullName: \"Full name\",\n                                            avatar: null,\n                                            mainImage: 'none'\n                                        },\n                                        sidenav: {\n                                            isEnable: true,\n                                            title: \"Sidenav\",\n                                            textColor: '#FFFFFF',\n                                            backgroundColor: 'white'\n                                        },\n                                        footer: {\n                                            isEnable: true\n                                        },\n                                        basicinfo: {\n                                            isEnable: true,\n                                            firstName: 'First name',\n                                            lastName: 'Last name',\n                                            email: 'email',\n                                            age: 21,\n                                            des: 'description'\n                                        },\n                                        song: {\n                                            isEnable: true,\n                                            items: []\n                                        },\n                                        photo: {\n                                            isEnable: true,\n                                            items: []\n                                        }\n                                    }\n                                };\n                            }\n                        }\n                    }).then(function () {\n                        $state.go('website', null, {\n                            reload: 'website'\n                        });\n                    }, function () {\n                        $state.go('website');\n                    });\n                }]\n            })\n            .state('website.detail', {\n                parent: 'manager',\n                url: '/website/{id}',\n                data: {\n                    authorities: ['ROLE_MANAGER'],\n                    pageTitle: 'gsiteApp.website.detail.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/website/website-detail.html',\n                        controller: 'WebsiteDetailController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('website');\n                        return $translate.refresh();\n                    }],\n                    entity: ['$stateParams', 'Website', function ($stateParams, Website) {\n                        return Website.get({\n                            id: $stateParams.id\n                        }).$promise;\n                    }],\n                    previousState: [\"$state\", function ($state) {\n                        var currentStateData = {\n                            name: $state.current.name || 'website',\n                            params: $state.params,\n                            url: $state.href($state.current.name, $state.params)\n                        };\n                        return currentStateData;\n                    }]\n                }\n            })\n            .state('website.edit', {\n                parent: 'website',\n                url: '/{id}/edit',\n                data: {\n                    authorities: ['ROLE_MANAGER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/website/website-dialog.html',\n                        controller: 'WebsiteDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: ['Website', function (Website) {\n                                return Website.get({\n                                    id: $stateParams.id\n                                }).$promise;\n                            }]\n                        }\n                    }).then(function () {\n                        $state.go('website', null, {\n                            reload: 'website'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            })\n            .state('website.delete', {\n                parent: 'website',\n                url: '/{id}/delete',\n                data: {\n                    authorities: ['ROLE_MANAGER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', 'Website', function ($stateParams, $state, $mdDialog, Website) {\n                    var confirm = $mdDialog.confirm()\n                        .title('You delete this website?')\n                        .textContent('This website and its data will be lost forever!')\n                        .ariaLabel('Lucky day')\n                        .targetEvent(null)\n                        .ok('Yes')\n                        .cancel('Cancel');\n\n                    $mdDialog.show(confirm).then(function () {\n                        Website.delete({id: $stateParams.id});\n                        $state.go('website', null, {\n                            reload: 'website'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            });\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('Website', Website);\n\n    Website.$inject = ['$resource', 'DateUtils'];\n\n    function Website ($resource, DateUtils) {\n        var resourceUrl =  'api/websites/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                        data.created = DateUtils.convertDateTimeFromServer(data.created);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' },\n            'domain': {method: 'GET', url: 'api/websites/domain'}\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebsiteController', WebsiteController);\n\n    WebsiteController.$inject = ['Website'];\n\n    function WebsiteController(Website) {\n        var vm = this;\n\n        vm.websites = [];\n\n        loadAll();\n\n        function loadAll() {\n            Website.query(function (result) {\n                vm.websites = result;\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebTemplateDialogController', WebTemplateDialogController);\n\n    WebTemplateDialogController.$inject = [ '$scope', '$mdDialog', 'entity', 'WebTemplate'];\n\n    function WebTemplateDialogController ( $scope, $mdDialog, entity, WebTemplate) {\n        var vm = this;\n\n        vm.sources = ['basic-template','latest-template','beautiful-template'];\n        vm.webTemplate = entity;\n        vm.closeDialog = closeDialog;\n        vm.save = save;\n        vm.datePickerOpenStatus = {};\n        vm.openCalendar = openCalendar;\n\n\n        function closeDialog () {\n            $mdDialog.cancel('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.webTemplate.id !== null) {\n                WebTemplate.update(vm.webTemplate, onSaveSuccess, onSaveError);\n            } else {\n                WebTemplate.save(vm.webTemplate, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('gsiteApp:webTemplateUpdate', result);\n            $mdDialog.hide(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n        vm.datePickerOpenStatus.created = false;\n\n        function openCalendar (date) {\n            vm.datePickerOpenStatus[date] = true;\n        }\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebTemplateDetailController', WebTemplateDetailController);\n\n    WebTemplateDetailController.$inject = ['$scope', '$rootScope', 'previousState', 'entity', 'WebTemplate','TemplateStorage','AlertService'];\n\n    function WebTemplateDetailController($scope, $rootScope, previousState, entity, WebTemplate,TemplateStorage,AlertService) {\n        var vm = this;\n\n        vm.webTemplate = entity;\n        vm.previousState = previousState.name;\n\n        var fileName = 'mainImage.jpg';\n        vm.loading = false;\n        vm.upload = upload;\n\n        getMainImage();\n\n        function upload(file) {\n            if (file != null) {\n                vm.loading = true;\n                TemplateStorage.uploadTemplateImage(vm.webTemplate.id, file, fileName).then(onSuccess, onError);\n            }\n\n            function onSuccess(response) {\n                vm.loading = false;\n                vm.webTemplate.image = fileName;\n                WebTemplate.update(vm.webTemplate);\n                AlertService.success(\"OK !\")\n            }\n\n            function onError(response) {\n                vm.loading = false;\n                console.log(response);\n            }\n        }\n\n        function getMainImage() {\n            if (vm.webTemplate.image == null)\n                return;\n            TemplateStorage.getTemplateImage(vm.webTemplate.id, fileName).then(onSuccess, onError);\n            function onSuccess(response) {\n                vm.tempImageLink = response.data.link;\n            }\n\n            function onError(response) {\n                console.log(response);\n            }\n        }\n\n        var unsubscribe = $rootScope.$on('gsiteApp:webTemplateUpdate', function(event, result) {\n            vm.webTemplate = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('web-template', {\n                parent: 'manager',\n                url: '/web-template',\n                data: {\n                    authorities: ['ROLE_MANAGER'],\n                    pageTitle: 'gsiteApp.webTemplate.home.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/web-template/web-templates.html',\n                        controller: 'WebTemplateController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('webTemplate');\n                        $translatePartialLoader.addPart('global');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('web-template.new', {\n                parent: 'web-template',\n                url: '/new',\n                data: {\n                    authorities: ['ROLE_MANAGER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/web-template/web-template-dialog.html',\n                        controller: 'WebTemplateDialogController',\n                        controllerAs: 'vm',\n                        targetEvent: null,\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: function () {\n                                return {\n                                    name: null,\n                                    source: null,\n                                    id: null,\n                                    category: null,\n                                    rating: 1,\n                                    price: 0,\n                                    image: null,\n                                    created: new Date()\n                                };\n                            }\n                        }\n                    }).then(function () {\n                        $state.go('web-template', null, {\n                            reload: 'web-template'\n                        });\n                    }, function () {\n                        $state.go('web-template');\n                    });\n                }]\n            })\n            .state('web-template.detail', {\n                parent: 'manager',\n                url: '/web-template/{id}',\n                data: {\n                    authorities: ['ROLE_MANAGER'],\n                    pageTitle: 'gsiteApp.webTemplate.detail.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/web-template/web-template-detail.html',\n                        controller: 'WebTemplateDetailController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('webTemplate');\n                        return $translate.refresh();\n                    }],\n                    entity: ['$stateParams', 'WebTemplate', function ($stateParams, WebTemplate) {\n                        return WebTemplate.get({\n                            id: $stateParams.id\n                        }).$promise;\n                    }],\n                    previousState: [\"$state\", function ($state) {\n                        var currentStateData = {\n                            name: $state.current.name || 'web-template',\n                            params: $state.params,\n                            url: $state.href($state.current.name, $state.params)\n                        };\n                        return currentStateData;\n                    }]\n                }\n            })\n            .state('web-template.edit', {\n                parent: 'web-template',\n                url: '/{id}/edit',\n                data: {\n                    authorities: ['ROLE_MANAGER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/web-template/web-template-dialog.html',\n                        controller: 'WebTemplateDialogController',\n                        controllerAs: 'vm',\n                        targetEvent: null,\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: ['WebTemplate', function (WebTemplate) {\n                                return WebTemplate.get({\n                                    id: $stateParams.id\n                                }).$promise;\n                            }]\n                        }\n                    }).then(function () {\n                        $state.go('web-template', null, {\n                            reload: 'web-template'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            })\n            .state('web-template.delete', {\n                parent: 'web-template',\n                url: '/{id}/delete',\n                data: {\n                    authorities: ['ROLE_MANAGER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', 'WebTemplate', 'TemplateStorage', function ($stateParams, $state, $mdDialog, WebTemplate, TemplateStorage) {\n                    var confirm = $mdDialog.confirm()\n                        .title('You delete this template?')\n                        .textContent('This template and its data will be lost forever!')\n                        .ariaLabel('Lucky day')\n                        .targetEvent(null)\n                        .ok('Yes')\n                        .cancel('Cancel');\n\n                    $mdDialog.show(confirm).then(function () {\n                        WebTemplate.get({id: $stateParams.id}, function (data) {\n                            TemplateStorage.deleteTemplateImage(data.id, data.image);\n                            WebTemplate.delete({id: $stateParams.id});\n                            $state.go('web-template', null, {\n                                reload: 'web-template'\n                            });\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            });\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('WebTemplate', WebTemplate);\n\n    WebTemplate.$inject = ['$resource'];\n\n    function WebTemplate ($resource) {\n        var resourceUrl =  'api/web-templates/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' },\n            'search': {method: 'GET', url: 'api/_search/web-templates/:id', isArray: true}\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('WebTemplateController', WebTemplateController);\n\n    WebTemplateController.$inject = [ 'WebTemplate', 'AlertService'];\n\n    function WebTemplateController( WebTemplate, AlertService) {\n        var vm = this;\n\n        vm.webTemplates = [];\n\n        loadAll();\n        function loadAll() {\n            WebTemplate.query({}, onSuccess, onError);\n\n            function onSuccess(data) {\n                vm.webTemplates = data;\n            }\n\n            function onError(error) {\n                AlertService.error(error.data.message);\n            }\n        }\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('QuestionDialogController', QuestionDialogController);\n\n    QuestionDialogController.$inject = ['$scope', '$mdDialog', 'entity', 'Question', 'User'];\n\n    function QuestionDialogController ( $scope, $mdDialog, entity, Question, User) {\n        var vm = this;\n\n        vm.users = [];\n\n        vm.question = entity;\n        vm.closeDialog = closeDialog;\n        vm.datePickerOpenStatus = {};\n        vm.openCalendar = openCalendar;\n        vm.save = save;\n\n\n        function closeDialog () {\n            $mdDialog.cancel('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.question.id !== null) {\n                Question.update(vm.question, onSaveSuccess, onSaveError);\n            } else {\n                Question.save(vm.question, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('gsiteApp:questionUpdate', result);\n            $mdDialog.hide(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n        vm.datePickerOpenStatus.created = false;\n\n        function openCalendar (date) {\n            vm.datePickerOpenStatus[date] = true;\n        }\n\n        findAllUsers();\n\n        function findAllUsers() {\n            User.query({\n                page: 0,\n                size: 5\n            }, onSuccess);\n\n            function onSuccess(data) {\n                for(var i = 0; i < data.length; i++){\n                    vm.users.push(data[i]);\n                }\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('QuestionDetailController', QuestionDetailController);\n\n    QuestionDetailController.$inject = ['$scope', '$rootScope', 'previousState', 'entity', 'Question'];\n\n    function QuestionDetailController($scope, $rootScope, previousState, entity, Question) {\n        var vm = this;\n\n        vm.question = entity;\n        vm.previousState = previousState.name;\n        vm.setFrequent = setFrequent;\n\n\n\n        function setFrequent() {\n            if(vm.question.id != null)\n                Question.update(vm.question);\n        }\n\n        var unsubscribe = $rootScope.$on('gsiteApp:questionUpdate', function(event, result) {\n            vm.question = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('question', {\n                parent: 'manager',\n                url: '/question',\n                data: {\n                    authorities: ['ROLE_USER'],\n                    pageTitle: 'gsiteApp.question.home.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/question/questions.html',\n                        controller: 'QuestionController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('question');\n                        $translatePartialLoader.addPart('global');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('question.new', {\n                parent: 'question',\n                url: '/new',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/question/question-dialog.html',\n                        controller: 'QuestionDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: function () {\n                                return {\n                                    content: null,\n                                    answer: null,\n                                    created: new Date(),\n                                    user_id: null,\n                                    isFrequent: false,\n                                    id: null\n                                };\n                            }\n                        }\n                    }).then(function () {\n                        $state.go('question', null, {\n                            reload: 'question'\n                        });\n                    }, function () {\n                        $state.go('question');\n                    });\n                }]\n            }).state('question.detail', {\n                parent: 'manager',\n                url: '/question/{id}',\n                data: {\n                    authorities: ['ROLE_USER'],\n                    pageTitle: 'gsiteApp.question.detail.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/question/question-detail.html',\n                        controller: 'QuestionDetailController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('question');\n                        return $translate.refresh();\n                    }],\n                    entity: ['$stateParams', 'Question', function ($stateParams, Question) {\n                        return Question.get({\n                            id: $stateParams.id\n                        }).$promise;\n                    }],\n                    previousState: [\"$state\", function ($state) {\n                        var currentStateData = {\n                            name: $state.current.name || 'question',\n                            params: $state.params,\n                            url: $state.href($state.current.name, $state.params)\n                        };\n                        return currentStateData;\n                    }]\n                }\n            })\n            .state('question.edit', {\n                parent: 'question',\n                url: '/{id}/edit',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/question/question-dialog.html',\n                        controller: 'QuestionDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: ['Question', function (Question) {\n                                return Question.get({\n                                    id: $stateParams.id\n                                }).$promise;\n                            }]\n                        }\n                    }).then(function () {\n                        $state.go('question', null, {\n                            reload: 'question'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            })\n            .state('question.delete', {\n                parent: 'question',\n                url: '/{id}/delete',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', 'Question', function ($stateParams, $state, $mdDialog, Question) {\n                    var confirm = $mdDialog.confirm()\n                        .title('You delete this question?')\n                        .textContent('This question and its data will be lost forever!')\n                        .ariaLabel('Lucky day')\n                        .targetEvent(null)\n                        .ok('Yes')\n                        .cancel('Cancel');\n\n                    $mdDialog.show(confirm).then(function () {\n                        Question.delete({id: $stateParams.id});\n                        $state.go('question', null, {\n                            reload: 'question'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            });\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('Question', Question);\n\n    Question.$inject = ['$resource', 'DateUtils'];\n\n    function Question ($resource, DateUtils) {\n        var resourceUrl =  'api/questions/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                        data.created = DateUtils.convertDateTimeFromServer(data.created);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' },\n            'myquestion': {method: 'GET', url: 'api/myquestions',isArray: true},\n            'faq': {method: 'GET', url: 'api/faq',isArray: true}\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('QuestionController', QuestionController);\n\n    QuestionController.$inject = [ 'Question', 'AlertService'];\n\n    function QuestionController ( Question, AlertService) {\n        var vm = this;\n\n        vm.questions = [];\n\n        loadAll();\n\n        function loadAll () {\n            Question.query({}, onSuccess, onError);\n\n            function onSuccess(data) {\n                vm.questions = data;\n            }\n\n            function onError(error) {\n                AlertService.error(error.data.message);\n            }\n        }\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('NotificationDialogController', NotificationDialogController);\n\n    NotificationDialogController.$inject = [ '$scope',  '$mdDialog', 'entity', 'Notification'];\n\n    function NotificationDialogController ( $scope,  $mdDialog, entity, Notification) {\n        var vm = this;\n\n        vm.users = [];\n\n        vm.notification = entity;\n        vm.closeDialog = closeDialog;\n        vm.save = save;\n\n\n        function closeDialog () {\n            $mdDialog.cancel('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.notification.id !== null) {\n                Notification.update(vm.notification, onSaveSuccess, onSaveError);\n            } else {\n                Notification.save(vm.notification, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('gsiteApp:notificationUpdate', result);\n            $mdDialog.hide(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('NotificationDetailController', NotificationDetailController);\n\n    NotificationDetailController.$inject = ['$scope', '$rootScope', 'previousState', 'entity'];\n\n    function NotificationDetailController($scope, $rootScope, previousState, entity) {\n        var vm = this;\n\n        vm.notification = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('gsiteApp:notificationUpdate', function(event, result) {\n            vm.notification = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('notification', {\n                parent: 'manager',\n                url: '/notification',\n                data: {\n                    authorities: ['ROLE_USER'],\n                    pageTitle: 'gsiteApp.notification.home.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/notification/notifications.html',\n                        controller: 'NotificationController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('notification');\n                        $translatePartialLoader.addPart('global');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('notification.detail', {\n                parent: 'notification',\n                url: '/notification/{id}',\n                data: {\n                    authorities: ['ROLE_USER'],\n                    pageTitle: 'gsiteApp.notification.detail.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/notification/notification-detail.html',\n                        controller: 'NotificationDetailController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('notification');\n                        return $translate.refresh();\n                    }],\n                    entity: ['$stateParams', 'Notification', function ($stateParams, Notification) {\n                        return Notification.get({id: $stateParams.id}).$promise;\n                    }],\n                    previousState: [\"$state\", function ($state) {\n                        var currentStateData = {\n                            name: $state.current.name || 'notification',\n                            params: $state.params,\n                            url: $state.href($state.current.name, $state.params)\n                        };\n                        return currentStateData;\n                    }]\n                }\n            })\n            .state('notification.new', {\n                parent: 'notification',\n                url: '/new',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/notification/notification-dialog.html',\n                        controller: 'NotificationDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: function () {\n                                return {\n                                    title: null,\n                                    content: null,\n                                    isRead: null,\n                                    created: new Date(),\n                                    sentUsers: [],\n                                    id: null\n                                };\n                            }\n                        }\n                    }).then(function () {\n                        $state.go('notification', null, {reload: 'notification'});\n                    }, function () {\n                        $state.go('notification');\n                    });\n                }]\n            })\n            .state('notification.edit', {\n                parent: 'notification',\n                url: '/{id}/edit',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/notification/notification-dialog.html',\n                        controller: 'NotificationDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: ['Notification', function (Notification) {\n                                return Notification.get({id: $stateParams.id}).$promise;\n                            }]\n                        }\n                    }).then(function () {\n                        $state.go('notification', null, {reload: 'notification'});\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            })\n            .state('notification.delete', {\n                parent: 'notification',\n                url: '/{id}/delete',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', 'Notification', function ($stateParams, $state, $mdDialog, Notification) {\n                    var confirm = $mdDialog.confirm()\n                        .title('You delete this notification?')\n                        .textContent('This notification and its data will be lost forever!')\n                        .ariaLabel('Lucky day')\n                        .targetEvent(null)\n                        .ok('Yes')\n                        .cancel('Cancel');\n\n                    $mdDialog.show(confirm).then(function () {\n                        Notification.delete({id: $stateParams.id});\n                        $state.go('notification', null, {\n                            reload: 'notification'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            });\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('Notification', Notification);\n\n    Notification.$inject = ['$resource', 'DateUtils'];\n\n    function Notification ($resource, DateUtils) {\n        var resourceUrl =  'api/notifications/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                        data.created = DateUtils.convertDateTimeFromServer(data.created);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' },\n            'mynotifications': { method: 'GET', url:'api/mynotifications', isArray: true}\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('NotificationController', NotificationController);\n\n    NotificationController.$inject = ['Notification', 'AlertService'];\n\n    function NotificationController(Notification, AlertService) {\n        var vm = this;\n\n        vm.notifications = [];\n\n        loadAll();\n\n        function loadAll() {\n            Notification.query({}, onSuccess, onError);\n\n\n            function onSuccess(data) {\n                vm.notifications = data;\n            }\n\n            function onError(error) {\n                AlertService.error(error.data.message);\n            }\n        }\n\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('manager', {\n            abstract: true,\n            parent: 'app',\n            views: {\n                'managerbar@manager': {\n                    templateUrl: 'app/layouts/managerbar/managerbar.html',\n                    controller: 'ManagerBarController',\n                    controllerAs: 'vm'\n                },\n                'content@': {\n                    templateUrl: 'app/manager/manager.html',\n                }\n\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('FeedbackDialogController', FeedbackDialogController);\n\n    FeedbackDialogController.$inject = [ '$scope', '$mdDialog', 'entity', 'Feedback', 'User'];\n\n    function FeedbackDialogController ( $scope,$mdDialog, entity, Feedback, User) {\n        var vm = this;\n\n        vm.users = [];\n\n        vm.feedback = entity;\n        vm.closeDialog = closeDialog;\n        vm.save = save;\n\n\n\n        function closeDialog () {\n            $mdDialog.cancel('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.feedback.id !== null) {\n                Feedback.update(vm.feedback, onSaveSuccess, onSaveError);\n            } else {\n                Feedback.save(vm.feedback, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('gsiteApp:feedbackUpdate', result);\n            $mdDialog.hide(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n        findAllUsers();\n\n        function findAllUsers() {\n            User.query({\n                page: 0,\n                size: 5\n            }, onSuccess);\n\n            function onSuccess(data) {\n                for(var i = 0; i < data.length; i++){\n                    vm.users.push(data[i]);\n                }\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('FeedbackDetailController', FeedbackDetailController);\n\n    FeedbackDetailController.$inject = ['$scope', '$rootScope',  'previousState', 'entity'];\n\n    function FeedbackDetailController($scope, $rootScope, previousState, entity) {\n        var vm = this;\n\n        vm.feedback = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('gsiteApp:feedbackUpdate', function(event, result) {\n            vm.feedback = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('feedback', {\n                parent: 'manager',\n                url: '/feedback',\n                data: {\n                    authorities: ['ROLE_USER'],\n                    pageTitle: 'gsiteApp.feedback.home.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/feedback/feedbacks.html',\n                        controller: 'FeedbackController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('feedback');\n                        $translatePartialLoader.addPart('global');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('feedback.new', {\n                parent: 'feedback',\n                url: '/new',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/feedback/feedback-dialog.html',\n                        controller: 'FeedbackDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: function () {\n                                return {\n                                    title: null,\n                                    content: null,\n                                    created: new Date(),\n                                    user_id: null,\n                                    id: null\n                                };\n                            }\n                        }\n                    }).then(function () {\n                        $state.go('feedback', null, {\n                            reload: 'feedback'\n                        });\n                    }, function () {\n                        $state.go('feedback');\n                    });\n                }]\n            })\n            .state('feedback.detail', {\n                parent: 'manager',\n                url: '/feedback/{id}',\n                data: {\n                    authorities: ['ROLE_USER'],\n                    pageTitle: 'gsiteApp.feedback.detail.title'\n                },\n                views: {\n                    'manager-content@manager': {\n                        templateUrl: 'app/manager/feedback/feedback-detail.html',\n                        controller: 'FeedbackDetailController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('feedback');\n                        return $translate.refresh();\n                    }],\n                    entity: ['$stateParams', 'Feedback', function ($stateParams, Feedback) {\n                        return Feedback.get({\n                            id: $stateParams.id\n                        }).$promise;\n                    }],\n                    previousState: [\"$state\", function ($state) {\n                        var currentStateData = {\n                            name: $state.current.name || 'feedback',\n                            params: $state.params,\n                            url: $state.href($state.current.name, $state.params)\n                        };\n                        return currentStateData;\n                    }]\n                }\n            })\n            .state('feedback.edit', {\n                parent: 'feedback',\n                url: '/{id}/edit',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/manager/feedback/feedback-dialog.html',\n                        controller: 'FeedbackDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: ['Feedback', function (Feedback) {\n                                return Feedback.get({\n                                    id: $stateParams.id\n                                }).$promise;\n                            }]\n                        }\n                    }).then(function () {\n                        $state.go('feedback', null, {\n                            reload: 'feedback'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            })\n            .state('feedback.delete', {\n                parent: 'feedback',\n                url: '/{id}/delete',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', 'Feedback', function ($stateParams, $state, $mdDialog, Feedback) {\n                    var confirm = $mdDialog.confirm()\n                        .title('You delete this feedback?')\n                        .textContent('This feedback and its data will be lost forever!')\n                        .ariaLabel('Lucky day')\n                        .targetEvent(null)\n                        .ok('Yes')\n                        .cancel('Cancel');\n\n                    $mdDialog.show(confirm).then(function () {\n                        Feedback.delete({id: $stateParams.id});\n                        $state.go('feedback', null, {\n                            reload: 'feedback'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            });\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('Feedback', Feedback);\n\n    Feedback.$inject = ['$resource', 'DateUtils'];\n\n    function Feedback ($resource, DateUtils) {\n        var resourceUrl =  'api/feedbacks/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                        data.created = DateUtils.convertDateTimeFromServer(data.created);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' },\n            'myfeedback': {method: 'GET', url: 'api/myfeedbacks',isArray: true}\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('FeedbackController', FeedbackController);\n\n    FeedbackController.$inject = ['Feedback', 'AlertService'];\n\n    function FeedbackController(Feedback,  AlertService) {\n        var vm = this;\n\n        vm.feedbacks = [];\n\n        loadAll();\n\n        function loadAll() {\n            Feedback.query({}, onSuccess, onError);\n\n\n            function onSuccess(data) {\n                vm.feedbacks = data;\n            }\n\n            function onError(error) {\n                AlertService.error(error.data.message);\n            }\n        }\n\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .provider('ToolbarService', ToolbarService);\n\n    function ToolbarService() {\n        this.$get = getService;\n\n        getService.$inject = ['$mdSidenav'];\n\n        function getService($mdSidenav) {\n\n            return {\n                toggleSidenav: toggleSidenav\n            };\n\n            function toggleSidenav() {\n                return function () {\n                    return $mdSidenav('sidenav')\n                        .toggle();\n                };\n            }\n        }\n\n    }\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('ToolbarController', ToolbarController);\n\n    ToolbarController.$inject = ['$state', '$timeout', 'ToolbarService', 'LanguageService', 'LoginService', 'Principal', 'TemplateSearch'];\n\n    function ToolbarController($state, $timeout, ToolbarService, LanguageService, LoginService, Principal, TemplateSearch) {\n\n        var vm = this;\n        vm.toggleSidenav = ToolbarService.toggleSidenav();\n        vm.showLoginDialog = LoginService.open;\n        vm.isAuthenticated = Principal.isAuthenticated;\n        vm.search = search;\n        vm.predicate = 'name';\n\n        vm.changeEnglish = changeEnglish;\n        vm.changeVietnam = changeVietnam;\n\n        function search() {\n            $timeout(function () {\n                angular.element('#searchInput').focus();\n            });\n\n            TemplateSearch.search(vm.searchText);\n            checkState();\n        }\n\n        function checkState() {\n            if ($state.current.name != 'template')\n                $state.go('template');\n        }\n\n        function changeEnglish() {\n            LanguageService.changeLanguage('en');\n        }\n\n        function changeVietnam() {\n            LanguageService.changeLanguage('vi');\n        }\n    }\n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('SupportBarController', SupportBarController);\n\n    SupportBarController.$inject = ['$state','Principal'];\n\n    function SupportBarController($state,Principal) {\n        var vm = this;\n        vm.currentState = $state.current.name;\n\n        vm.isAuthenticated = Principal.isAuthenticated;\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('SidenavController', SidenavController);\n\n    SidenavController.$inject = ['$state','$scope', 'ToolbarService', 'LoginService', 'Principal', 'ProfileService', 'LanguageService', '$location', '$anchorScroll','Auth'];\n\n    function SidenavController($state, $scope,ToolbarService, LoginService, Principal, ProfileService, LanguageService, $location, $anchorScroll,Auth) {\n        var vm = this;\n\n        vm.toggleSidenav = ToolbarService.toggleSidenav();\n        vm.showLoginDialog = LoginService.open;\n\n\n        vm.isAuthenticated = Principal.isAuthenticated;\n\n        vm.showLoginDialog = LoginService.open;\n        vm.goFeatureSec = goFeatureSec;\n        vm.goHomeSec = goHomeSec;\n        vm.changeLanguage = changeLanguage;\n\n        vm.username = null;\n        vm.userEmail = null;\n\n        ProfileService.getProfileInfo().then(function (response) {\n            vm.inProduction = response.inProduction;\n            vm.swaggerEnabled = response.swaggerEnabled;\n        });\n\n        getUserInfo();\n\n        function getUserInfo() {\n            Principal.identity().then(function (user) {\n                vm.userEmail = user.email;\n                vm.userImage = user.imageURL;\n\n                if (user.displayName != null)\n                    vm.username = user.displayName;\n                else if (user.firstName == null)\n                    vm.username = user.login;\n                else\n                    vm.username = user.firstName + ' ' + user.lastName;\n\n            });\n        }\n\n        Auth.subscribe($scope, function somethingChanged() {\n                getUserInfo();\n        });\n\n\n        function goFeatureSec() {\n            vm.toggleSidenav();\n            if ($state.current.name == 'home') {\n                $location.hash('features');\n                $anchorScroll();\n            } else\n                $state.go('home');\n\n        }\n\n        function goHomeSec() {\n            vm.toggleSidenav();\n            if ($state.current.name == 'home') {\n                $location.hash('home');\n                $anchorScroll();\n            }\n            else\n                $state.go('home');\n        }\n\n\n        function changeLanguage() {\n            LanguageService.changeLanguage(vm.langKey);\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('QuickToolController', QuickToolController);\n\n    QuickToolController.$inject = [];\n\n    function QuickToolController() {\n        var vm = this;\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('ManagerBarController', ManagerBarController);\n\n    ManagerBarController.$inject = ['$state'];\n\n    function ManagerBarController($state) {\n        var vm = this;\n        vm.currentState = $state.current.name;\n\n    }\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('FooterController', FooterController);\n\n    FooterController.$inject = ['$state'];\n\n    function FooterController($state) {\n        var vm = this;\n\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('error', {\n                parent: 'app',\n                url: '/error',\n                data: {\n                    authorities: [],\n                    pageTitle: 'error.title'\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/error.html'\n                    }\n                },\n                resolve: {\n                    mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('accessdenied', {\n                parent: 'app',\n                url: '/accessdenied',\n                data: {\n                    authorities: []\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/accessdenied.html'\n                    }\n                },\n                resolve: {\n                    mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            }).state('pagenotfound', {\n            url: '/pagenotfound',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/layouts/error/pagenotfound.html'\n                }\n            },\n            resolve: {\n                mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                    $translatePartialLoader.addPart('error');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('CustomSidenavController', CustomSidenavController);\n\n    CustomSidenavController.$inject = ['$state', '$scope', 'Principal', 'ProfileService', 'LoginService', '$location', '$anchorScroll','Auth'];\n\n    function CustomSidenavController($state, $scope, Principal, ProfileService, LoginService, $location, $anchorScroll,Auth) {\n        var vm = this;\n\n        vm.isAuthenticated = Principal.isAuthenticated;\n\n        vm.showLoginDialog = LoginService.open;\n        vm.goFeatureSec = goFeatureSec;\n        vm.goHomeSec = goHomeSec;\n        vm.goTemplateSec = goTemplateSec;\n\n        vm.username = null;\n        vm.userEmail = null;\n        vm.userImage = null;\n\n        ProfileService.getProfileInfo().then(function (response) {\n            vm.inProduction = response.inProduction;\n            vm.swaggerEnabled = response.swaggerEnabled;\n        });\n\n        getUserInfo();\n\n        function getUserInfo() {\n            Principal.identity().then(function (user) {\n                vm.userEmail = user.email;\n                vm.userImage = user.imageURL;\n\n                if (user.displayName != null)\n                    vm.username = user.displayName;\n                else if (user.firstName == null)\n                    vm.username = user.login;\n                else\n                    vm.username = user.firstName + ' ' + user.lastName;\n            });\n        }\n\n        Auth.subscribe($scope, function somethingChanged() {\n                getUserInfo();\n        });\n\n\n        function goFeatureSec() {\n            $location.hash('features');\n            $anchorScroll();\n        }\n\n        function goHomeSec() {\n            if ($state.current.name == 'home') {\n                $location.hash('home');\n                $anchorScroll();\n            }\n            else\n                $state.go('home');\n        }\n\n        function goTemplateSec() {\n            if ($state.current.name == 'home') {\n                $location.hash('templates');\n                $anchorScroll();\n            }\n            else\n                $state.go('template');\n        }\n\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('AdminBarController', AdminBarController);\n\n    AdminBarController.$inject = ['$state'];\n\n    function AdminBarController($state) {\n        var vm = this;\n        vm.currentState = $state.current.name;\n    }\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('AccountBarController', AccountBarController);\n\n    AccountBarController.$inject = ['$state'];\n\n    function AccountBarController($state) {\n        var vm = this;\n        vm.currentState = $state.current.name;\n\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('home', {\n            parent: 'app',\n            url: '/',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/home/home.html',\n                    controller: 'HomeController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                    $translatePartialLoader.addPart('home');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('HomeController', HomeController);\n\n    HomeController.$inject = ['$scope', 'Principal', 'LoginService', '$state', 'TemplateService'];\n\n    function HomeController($scope, Principal, LoginService, $state, TemplateService) {\n        var vm = this;\n\n        vm.account = null;\n        vm.isAuthenticated = null;\n        vm.login = LoginService.open;\n        vm.register = register;\n\n        $scope.$on('authenticationSuccess', function () {\n            getAccount();\n        });\n\n\n        getAccount();\n\n        function getAccount() {\n            Principal.identity().then(function (account) {\n                vm.account = account;\n                vm.isAuthenticated = Principal.isAuthenticated;\n            });\n        }\n\n        vm.webTemplates = [];\n\n\n        loadAllTemplates();\n\n        TemplateService.subscribe($scope, function somethingChanged() {\n            loadAllTemplates();\n        });\n\n        function loadAllTemplates() {\n            var templates = TemplateService.all();\n            if (templates.length > 3)\n                vm.webTemplates = templates.slice(0, 3)\n            else\n                vm.webTemplates = templates;\n        }\n\n        function register() {\n            $state.go('register');\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('entity', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('support', {\n            abstract: true,\n            parent: 'customer',\n            views: {\n                'supportbar@support': {\n                    templateUrl: 'app/layouts/supportbar/supportbar.html',\n                    controller: 'SupportBarController',\n                    controllerAs: 'vm'\n                },\n                'content@': {\n                    templateUrl: 'app/customer/support/support.html',\n                }\n            }\n        });\n    }\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyQuestionDialogController', MyQuestionDialogController);\n\n    MyQuestionDialogController.$inject = ['$mdDialog', 'MyQuestionService'];\n\n    function MyQuestionDialogController($mdDialog, MyQuestionService) {\n        var vm = this;\n        vm.question = {\n            content: null,\n            answer: null,\n            created: new Date(),\n            is_frequent: false,\n            userId: null\n        };\n\n        vm.closeDialog = closeDialog;\n        vm.submit = submit;\n\n        function closeDialog() {\n            $mdDialog.cancel();\n        }\n\n        function submit() {\n            MyQuestionService.add(vm.question);\n            $mdDialog.hide();\n        }\n\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('my-question', {\n            parent: 'support',\n            url: '/my-question',\n            data: {\n                authorities: [\"ROLE_USER\"],\n                pageTitle: 'gsiteApp.template.home.title'\n            },\n            views: {\n                'support-content@support': {\n                    templateUrl: 'app/customer/support/my-question/my-questions.html',\n                    controller: 'MyQuestionController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                    $translatePartialLoader.addPart('my-question');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('my-question.new', {\n            parent: 'my-question',\n            url: '/my-question/new',\n            data: {\n                authorities: [\"ROLE_USER\"]\n            },\n            params: {\n                template_id: null\n            },\n            onEnter: ['$state', '$mdDialog', function ($state, $mdDialog) {\n                $mdDialog.show({\n                    templateUrl: 'app/customer/support/my-question/my-question-dialog.html',\n                    controller: 'MyQuestionDialogController',\n                    controllerAs: 'vm',\n                    parent: 'my-question',\n                    targetEvent: null,\n                    clickOutsideToClose: true,\n                    fullscreen: false\n                }).then(function (answer) {\n                    $state.go('my-question', null);\n                }, function () {\n                    $state.go('my-question', null);\n                });\n            }]\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MyQuestionService', MyQuestionService);\n\n    MyQuestionService.$inject = ['$rootScope','Question', 'Principal'];\n\n    function MyQuestionService($rootScope,Question, Principal) {\n        var instance = {\n            all: all,\n            add: add,\n            subscribe: subscribe\n        };\n\n        var userId = null;\n\n        var list = [];\n\n        Principal.identity().then(function (account) {\n            userId = account.id;\n            loadAll(account.id);\n        });\n\n\n        function loadAll(userId) {\n            Question.myquestion({\n                userId: userId\n            }, onSuccess, onError);\n\n            function onSuccess(data) {\n                list = data;\n                notify();\n            }\n\n            function onError(error) {\n                console.log(error);\n            }\n        }\n\n        function all() {\n            return list;\n        }\n\n        function add(question) {\n            question.user_id = userId;\n            Question.save(question, onSaveSuccess, onSaveError);\n\n            function onSaveSuccess (result) {\n                loadAll(userId);\n            }\n\n            function onSaveError (error) {\n                console.log(error);\n            }\n        }\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n\n        return instance;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyQuestionController', MyQuestionController);\n\n    MyQuestionController.$inject = ['$scope','MyQuestionService'];\n\n    function MyQuestionController ($scope,MyQuestionService) {\n        var vm = this;\n\n        vm.questions = [];\n\n        vm.questions = MyQuestionService.all();\n\n        MyQuestionService.subscribe($scope, function somethingChanged() {\n            vm.questions = MyQuestionService.all();\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MyFeedbackOptionService', MyFeedbackOptionService);\n\n    MyFeedbackOptionService.$inject = [];\n\n    function MyFeedbackOptionService() {\n        var instance = {\n            all: all,\n            get: get,\n            del: del,\n            add: add\n        };\n\n        var list = [\n            {\n                title: 'Performance',\n                options: ['It is quite fast','Sometime slow','It is okay']\n            },\n             {\n                title: 'Experience',\n                options: ['It is quite convenient','Sometime it is laggy','It is okay']\n            }\n        ];\n\n        var hashMap = {};\n        hashMap[list[0].id] = list[0];\n        hashMap[list[1].id] = list[1];\n\n        function all() {\n            return list;\n        }\n\n        function get(id) {\n            return hashMap[id];\n        }\n\n        function del(id) {\n            var index = getIndex(id);\n            list.splice(index, 1);\n            delete hashMap[id];\n        }\n\n        function getIndex(id) {\n            var entity = hashMap[id];\n            return list.indexOf(entity);\n        }\n\n        function add(entity){\n            list.push(entity);\n            hashMap[entity.id] = entity;\n        }\n\n        return instance;\n    }\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyFeedbackDialogController', MyFeedbackDialogController);\n\n    MyFeedbackDialogController.$inject = ['$scope', '$mdDialog', 'MyFeedbackService'];\n\n    function MyFeedbackDialogController($scope, $mdDialog, MyFeedbackService) {\n        var vm = this;\n        vm.feedback = {\n            title: null,\n            content: null,\n            created: new Date(),\n            user_id: null\n        };\n\n        vm.closeDialog = closeDialog;\n        vm.submit = submit;\n\n        function closeDialog() {\n            $mdDialog.cancel();\n        }\n\n        function submit() {\n            MyFeedbackService.add(vm.feedback);\n            $mdDialog.hide();\n        }\n\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('my-feedback', {\n            parent: 'support',\n            url: '/my-feedback',\n            data: {\n                authorities: [\"ROLE_USER\"],\n                pageTitle: 'gsiteApp.template.home.title'\n            },\n            views: {\n                'support-content@support': {\n                    templateUrl: 'app/customer/support/my-feedback/my-feedbacks.html',\n                    controller: 'MyFeedbackController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                    $translatePartialLoader.addPart('my-feedback');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('my-feedback.new', {\n            parent: 'my-feedback',\n            url: '/my-feedback/new',\n            data: {\n                authorities: [\"ROLE_USER\"]\n            },\n            params: {\n                template_id: null\n            },\n            onEnter: ['$state', '$mdDialog', function ($state, $mdDialog) {\n                $mdDialog.show({\n                    templateUrl: 'app/customer/support/my-feedback/my-feedback-dialog.html',\n                    controller: 'MyFeedbackDialogController',\n                    controllerAs: 'vm',\n                    parent: 'my-feedback',\n                    targetEvent: null,\n                    clickOutsideToClose: true,\n                    fullscreen: false\n                }).then(function (answer) {\n                     $state.go('my-feedback', null);\n                }, function () {\n                    $state.go('my-feedback', null);\n                });\n            }]\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MyFeedbackService', MyFeedbackService);\n\n    MyFeedbackService.$inject = ['$rootScope','Feedback', 'Principal'];\n\n    function MyFeedbackService($rootScope,Feedback, Principal) {\n        var instance = {\n            all: all,\n            add: add,\n            subscribe: subscribe\n        };\n\n        var userId = null;\n\n        var list = [];\n\n        Principal.identity().then(function (account) {\n            userId = account.id;\n            loadAll(account.id);\n        });\n\n\n        function loadAll(userId) {\n            Feedback.myfeedback({\n                userId: userId\n            }, onSuccess, onError);\n\n            function onSuccess(data) {\n                list = data;\n                notify();\n            }\n\n            function onError(error) {\n                console.log(error);\n            }\n        }\n\n        function add(feedback) {\n            feedback.user_id = userId;\n            Feedback.save(feedback, onSaveSuccess, onSaveError);\n\n            function onSaveSuccess (result) {\n                loadAll(userId);\n            }\n\n            function onSaveError (error) {\n                console.log(error);\n            }\n        }\n\n        function all() {\n            return list;\n        }\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n\n        return instance;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyFeedbackController', MyFeedbackController);\n\n    MyFeedbackController.$inject = ['$scope','MyFeedbackService'];\n\n    function MyFeedbackController ($scope,MyFeedbackService) {\n        var vm = this;\n\n        vm.feedbacks = [];\n\n        vm.feedbacks = MyFeedbackService.all();\n\n\n        MyFeedbackService.subscribe($scope, function somethingChanged() {\n            vm.feedbacks = MyFeedbackService.all();\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('faq', {\n            parent: 'support',\n            url: '/faq',\n            data: {\n                authorities: [],\n                pageTitle: 'gsiteApp.template.home.title'\n            },\n            views: {\n                'support-content@support': {\n                    templateUrl: 'app/customer/support/faq/faqs.html',\n                    controller: 'FAQController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('user-management');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('FAQService', FAQService);\n\n    FAQService.$inject = ['$rootScope','Question'];\n\n    function FAQService($rootScope,Question) {\n        var instance = {\n            all: all,\n            subscribe: subscribe\n        };\n\n        var list = [];\n\n        loadAll();\n\n\n        function loadAll() {\n            Question.faq({}, onSuccess, onError);\n\n            function onSuccess(data) {\n                list = data;\n                notify();\n            }\n\n            function onError(error) {\n                console.log(error);\n            }\n        }\n\n        function all() {\n            return list;\n        }\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n\n        return instance;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('FAQController', FAQController);\n\n    FAQController.$inject = ['$scope','FAQService'];\n\n    function FAQController ($scope,FAQService) {\n        var vm = this;\n\n        vm.faqs = [];\n\n        vm.faqs = FAQService.all();\n\n        FAQService.subscribe($scope, function somethingChanged() {\n            vm.faqs = FAQService.all();\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyWebsiteViewController', MyWebsiteViewController);\n\n    MyWebsiteViewController.$inject = ['$scope','MSongService'];\n\n    function MyWebsiteViewController($scope,MSongService) {\n        var vm = this;\n\n\n        $scope.$on(\"$destroy\", function handler() {\n            // destruction code here\n            MSongService.stop();\n        });\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyWebsiteShareController', MyWebsiteShareController);\n\n    MyWebsiteShareController.$inject = ['entity', '$mdBottomSheet','Facebook','$window','subdomainHandler'];\n\n    function MyWebsiteShareController(entity, $mdBottomSheet,Facebook,$window,subdomainHandler) {\n        var vm = this;\n\n        vm.myWebsite = entity;\n\n        vm.shareFacebook = shareFacebook;\n        vm.shareTwitter = shareTwitter;\n\n        vm.closeShare = closeShare;\n\n        function closeShare() {\n            $mdBottomSheet.hide();\n        }\n\n\n        function shareFacebook() {\n            var domain = subdomainHandler.getHost(vm.myWebsite.domain);\n            Facebook.share(domain);\n        }\n\n\n        function shareTwitter() {\n            var domain = subdomainHandler.getHost(vm.myWebsite.domain);\n            var text = vm.myWebsite.name;\n            var href = \"https://twitter.com/share?\"\n                + \"url=\" + domain\n                + \"&text=\" + text;\n            $window.open(href);\n        }\n\n    }\n})();\n\n(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MyWebsiteOffline', MyWebsiteOffline);\n\n    MyWebsiteOffline.$inject = ['$rootScope', '$state', 'MyWebsite', 'Principal', 'Website', 'MyWebsiteStorage'];\n\n    function MyWebsiteOffline($rootScope, $state, MyWebsite, Principal, Website, MyWebsiteStorage) {\n        var service = {\n            subscribe: subscribe,\n            all: all,\n            updateWeb: updateWeb,\n            deleteWeb: deleteWeb,\n            refuse: refuse,\n            loadAll: loadAll,\n            reloadAll: reloadAll\n        };\n        var userLogin = null;\n        var userEmail = null;\n        var websites = [];\n\n        function all() {\n            return websites;\n        }\n\n        checkUser();\n\n        function checkUser() {\n            Principal.identity().then(function (account) {\n                if(account == null)\n                    return;\n                userLogin = account.login;\n                userEmail = account.email;\n                loadAll();\n            });\n        }\n\n\n\n        function reloadAll() {\n            websites = [];\n            checkUser();\n        }\n\n        function loadAll() {\n            websites = [];\n            MyWebsite.query({\n                user_id: userLogin\n            }, onSuccess);\n\n            MyWebsite.share({\n                user_email: userEmail\n            }, onSuccess);\n        }\n\n        function onSuccess(result) {\n            loadImages(result);\n            websites = websites.concat(result);\n            notify();\n        }\n\n        function loadImages(list) {\n            for (var i = 0; i < list.length; i++) {\n                var web = list[i];\n                if (web.custom.homepage.mainImage != 'none') {\n                    MyWebsiteStorage.loadImageForWebItem(userLogin, web.id, web, \"mainImage.jpg\");\n                }\n            }\n\n        }\n\n        function updateWeb(website) {\n            MyWebsite.update(website, success);\n            function success() {\n                loadAll();\n                $state.go(\"my-website\");\n            }\n        }\n\n        function deleteWeb(id) {\n            Website.delete({\n                id: id\n            }, success);\n\n            function success() {\n                loadAll();\n                $state.go(\"my-website\");\n                MyWebsiteStorage.deleteUserWebImageFolder(userLogin, id);\n            }\n        }\n\n        function refuse(id) {\n            Website.get({\n                id: id\n            }, function (web) {\n                var index = web.sharedUsers.indexOf(userEmail);\n                web.sharedUsers.splice(index, 1);\n                Website.update(web, onRefuseSuccess);\n            });\n        }\n\n        function onRefuseSuccess(result) {\n            notify();\n        }\n\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n\n        return service;\n    }\n})();\n\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyWebsiteMailController', MyWebsiteMailController);\n\n    MyWebsiteMailController.$inject = ['AlertService', 'entity', 'Principal', 'Mail','MyWebsiteOffline'];\n\n    function MyWebsiteMailController( AlertService, entity, Principal, Mail,MyWebsiteOffline) {\n        var vm = this;\n\n        vm.website = entity;\n        vm.website.sharedUsers = [];\n        vm.sendEmail = sendEmail;\n        vm.deleteEmail = deleteEmail;\n\n        vm.currentAccount = null;\n\n\n        Principal.identity().then(function (account) {\n            vm.currentAccount = account;\n        });\n\n\n        function sendEmail(email) {\n            if (getIndex(email) < 0) {\n                vm.website.sharedUsers.push(email);\n                shareWithEmail(email);\n            } else\n                AlertService.error(\"Email is already sent!\")\n        }\n\n        function getIndex(email) {\n            return vm.website.sharedUsers.indexOf(email);\n        }\n\n        function deleteEmail(index) {\n            return vm.website.sharedUsers.splice(index, 1);\n        }\n\n        function share() {\n            shareWithEmail(vm.email);\n        }\n\n        function shareWithEmail(email) {\n            if (vm.currentAccount.email == email)\n                AlertService.error(\"This is your email\");\n            else {\n                sendMail(vm.currentAccount,email);\n            }\n        }\n\n\n\n        function sendMail(user, toEmail) {\n            var fromName = vm.currentAccount.firstName + \" \" + vm.currentAccount.lastName;\n            var toName = toEmail;\n            var lang = vm.currentAccount.langKey;\n            var webId = vm.website.id;\n            if (user != null) {\n                toName = user.firstName + \" \" + user.lastName;\n                lang = user.langKey;\n            }\n            Mail.share({\n                from_name: fromName,\n                to_name: toName,\n                lang: lang,\n                to_email: toEmail,\n                web_id: webId\n            }, function (response) {\n                save();\n                AlertService.success(\"Sent mail to \" + toEmail);\n            });\n        }\n\n        function save() {\n            MyWebsiteOffline.update(vm.website);\n        }\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyWebsiteDialogController', MyWebsiteDialogController);\n\n    MyWebsiteDialogController.$inject = [ '$scope', '$state', '$mdDialog', 'entity', 'MyWebsite', 'WebTemplate', 'Principal','MyWebsiteOffline'];\n\n    function MyWebsiteDialogController($scope, $state, $mdDialog, entity, MyWebsite, WebTemplate, Principal,MyWebsiteOffline) {\n        var vm = this;\n\n        vm.templates = [];\n\n        vm.myWebsite = entity;\n\n        vm.isDomainError = false;\n        vm.closeDialog = closeDialog;\n        vm.save = save;\n\n        Principal.identity().then(function (account) {\n            vm.myWebsite.user_id = account.login;\n            clearUnPaidWebsites(account.login);\n        });\n\n\n        function closeDialog() {\n            $mdDialog.cancel('cancel');\n        }\n\n        function save() {\n            vm.isSaving = true;\n            if (vm.myWebsite.id !== null) {\n                MyWebsite.update(vm.myWebsite, onSaveSuccess, onSaveError);\n            } else {\n                MyWebsite.create(vm.myWebsite, onSaveSuccess, onSaveError);\n            }\n            $state.go('my-website', null, {\n                reload: 'my-website'\n            });\n        }\n\n        function onSaveSuccess(result) {\n            MyWebsiteOffline.loadAll();\n            $scope.$emit('gsiteApp:myWebsiteUpdate', result);\n            $mdDialog.hide();\n            vm.isSaving = false;\n        }\n\n        function onSaveError(result) {\n            vm.isSaving = false;\n            if (result.data != null) {\n                $mdDialog.hide();\n                $state.go(\"website-payment\", {id: result.data.id});\n            } else {\n                vm.isDomainError = true;\n            }\n        }\n\n        function clearUnPaidWebsites(userId) {\n            MyWebsite.getUnpaid({user_id: userId}, onSuccess);\n\n            function onSuccess(data) {\n                for (var i = 0; i < data.length; i++) {\n                    MyWebsite.delete({webId: data[i].id});\n                }\n            }\n        }\n\n\n        findAllTemplates();\n\n        function findAllTemplates() {\n            WebTemplate.query({}, onSuccess);\n\n            function onSuccess(data) {\n                for (var i = 0; i < data.length; i++) {\n                    vm.templates.push(data[i]);\n                }\n            }\n        }\n    }\n})();\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyWebsiteCustomController', MyWebsiteCustomController);\n\n    MyWebsiteCustomController.$inject = ['$timeout','$mdDialog', 'entity', 'MyWebsiteOffline','Principal', 'previousState','subdomainHandler'];\n\n    function MyWebsiteCustomController ($timeout,$mdDialog, entity, MyWebsiteOffline,Principal, previousState,subdomainHandler) {\n        var vm = this;\n\n        vm.templates = [];\n\n        vm.myWebsite = entity;\n        vm.save = save;\n\n        vm.getHost = subdomainHandler.getHost;\n        vm.previousState = previousState.name;\n\n        vm.customizeToolbar = customizeToolbar;\n        vm.customizeSidenav = customizeSidenav;\n        vm.customizeHomepage = customizeHomepage;\n        vm.customizeBasicInfo = customizeBasicInfo;\n        vm.customizeSong = customizeSong;\n        vm.customizePhoto = customizePhoto;\n\n\n\n        Principal.identity().then(function(account) {\n            vm.myWebsite.user_id = account.login;\n        });\n\n        $timeout(function (){\n            angular.element('md-input-container:eq(1)>input').focus();\n        });\n\n        function save () {\n            vm.isSaving = true;\n            MyWebsiteOffline.updateWeb(vm.myWebsite);\n        }\n\n\n        function customizeToolbar() {\n            if (vm.myWebsite.custom.toolbar.isEnable) {\n                var templateUrl = 'app/web-modules/m-toolbar/m-toolbar-dialog.html';\n                var controller = 'MToolbarDialogController';\n                var entity = vm.myWebsite.custom.toolbar;\n                customDialog(templateUrl, controller, entity);\n            }\n        }\n        function customizeSidenav() {\n            if (vm.myWebsite.custom.sidenav.isEnable) {\n                var templateUrl = 'app/web-modules/m-sidenav/m-sidenav-dialog.html';\n                var controller = 'MSidenavDialogController';\n                var entity = vm.myWebsite.custom.sidenav;\n                customDialog(templateUrl, controller, entity);\n            }\n        }\n\n\n\n        function customizeHomepage() {\n            if (vm.myWebsite.custom.homepage.isEnable) {\n                var templateUrl = 'app/web-modules/m-home/m-home-dialog.html';\n                var controller = 'MHomeDialogController';\n                var entity = vm.myWebsite.custom.homepage;\n                customDialog(templateUrl, controller, entity);\n            }\n        }\n\n\n\n        function customizeBasicInfo() {\n            if(vm.myWebsite.custom.basicInfo.isEnable){\n                var templateUrl = 'app/web-modules/m-basic-info/m-basic-info-dialog.html';\n                var controller = 'MBasicInfoDialogController';\n                var entity = vm.myWebsite.custom.basicInfo;\n                customDialog(templateUrl, controller, entity);\n            }\n        }\n        function customizeSong() {\n            if(vm.myWebsite.custom.song.isEnable){\n                var templateUrl = 'app/web-modules/m-song/m-song-dialog.html';\n                var controller = 'MSongDialogController';\n                var entity = vm.myWebsite.custom.song;\n                customDialog(templateUrl, controller, entity);\n            }\n        }\n\n        function customizePhoto() {\n            if(vm.myWebsite.custom.photo.isEnable){\n                var templateUrl = 'app/web-modules/m-photo/m-photo-dialog.html';\n                var controller = 'MPhotoDialogController';\n                var entity = vm.myWebsite.custom.photo;\n                customDialog(templateUrl, controller, entity);\n            }\n        }\n\n\n        function customDialog(templateUrl, controller, entity) {\n            $mdDialog.show({\n                templateUrl: templateUrl,\n                controller: controller,\n                controllerAs: 'vm',\n                parent: 'my-website.custom',\n                targetEvent: null,\n                clickOutsideToClose: true,\n                fullscreen: false,\n                resolve: {\n                    entity: function () {\n                        return entity;\n                    },\n                    webId: function () {\n                        return vm.myWebsite.id;\n                    }\n                }\n            });\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('my-website', {\n                parent: 'customer',\n                url: '/my-website',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/customer/my-website/my-websites.html',\n                        controller: 'MyWebsiteController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('my-website');\n                        return $translate.refresh();\n                    }]\n                }\n            }).state('my-website.new', {\n                parent: 'my-website',\n                url: '/new/{template}',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                params: {\n                    template: null\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/customer/my-website/my-website-dialog.html',\n                        controller: 'MyWebsiteDialogController',\n                        controllerAs: 'vm',\n                        targetEvent: null,\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: [function () {\n                                var entity =  {\n                                    id: null,\n                                    name: null,\n                                    des: null,\n                                    domain: null,\n                                    template: $stateParams.template,\n                                    created: new Date(),\n                                    user_id: null,\n                                    paid: false,\n                                    sharedUsers: [],\n                                    custom: {\n                                        toolbar: {\n                                            isEnable: true,\n                                            title: \"Person\",\n                                            textColor: '#FFFFFF'\n                                        },\n                                        homepage: {\n                                            isEnable: true,\n                                            name: \"name\",\n                                            fullName: \"Full name\",\n                                            avatar: 'none',\n                                            mainImage: 'none'\n                                        },\n                                        sidenav: {\n                                            isEnable: true,\n                                            title: \"Sidenav\",\n                                            textColor: '#FFFFFF',\n                                            backgroundColor: 'white'\n                                        },\n                                        footer: {\n                                            isEnable: true\n                                        },\n                                        basicInfo: {\n                                            isEnable: true,\n                                            firstName: 'First name',\n                                            lastName: 'Last name',\n                                            email: null,\n                                            age: 21,\n                                            des: 'description'\n                                        },\n                                        song: {\n                                            isEnable: true,\n                                            items: []\n                                        },\n                                        photo: {\n                                            isEnable: true,\n                                            items: []\n                                        }\n                                    }\n                                };\n\n                                return entity;\n                            }]\n                        }\n                    }).then(function () {\n                        // $state.go('my-website', null, {\n                        //     reload: 'my-website'\n                        // });\n                    }, function () {\n                        $state.go('my-website');\n                    });\n                }]\n            }).state('my-website.customize', {\n                parent: 'my-website',\n                url: '/{id}/customize',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                views: {\n                    'content@': {\n                        templateUrl: function ($stateParams) {\n                            return 'app/customer/my-website/my-website-custom.html';\n                        },\n                        controller: 'MyWebsiteCustomController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('my-website');\n                        return $translate.refresh();\n                    }],\n                    entity: ['$stateParams', 'Website', function ($stateParams, Website) {\n                        return Website.get({\n                            id: $stateParams.id\n                        }).$promise;\n                    }],\n                    previousState: [\"$state\", function ($state) {\n                        var currentStateData = {\n                            name: $state.current.name || 'my-website',\n                            params: $state.params,\n                            url: $state.href($state.current.name, $state.params)\n                        };\n                        return currentStateData;\n                    }]\n                }\n            }).state('my-website.share', {\n                parent: 'my-website',\n                url: '/share/{id}',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                params: {\n                    id: null\n                },\n                onEnter: ['$stateParams', '$state', '$mdBottomSheet', function ($stateParams, $state, $mdBottomSheet) {\n                    $mdBottomSheet.show({\n                        templateUrl: 'app/customer/my-website/my-website-share.html',\n                        controller: 'MyWebsiteShareController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        resolve: {\n                            entity: ['$stateParams', 'Website', function ($stateParams, Website) {\n                                return Website.get({\n                                    id: $stateParams.id\n                                }).$promise;\n                            }],\n                            translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                                $translatePartialLoader.addPart('my-website');\n                                return $translate.refresh();\n                            }]\n\n                        }\n                    }).then(function (clickedItem) {\n                        //console.log(clickedItem);\n                    }, function () {\n                         $state.go('my-website');\n                    });\n                }]\n            }).state('my-website.mail', {\n                parent: 'my-website',\n                url: '/mail/{id}',\n                data: {\n                    authorities: []\n                },\n                params: {\n                    id: null\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/customer/my-website/my-website-mail.html',\n                        controller: 'MyWebsiteMailController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    entity: ['$stateParams', 'Website', function ($stateParams, Website) {\n                        return Website.get({\n                            id: $stateParams.id\n                        });\n                    }]\n                }\n            }).state('my-website.delete', {\n                parent: 'my-website',\n                url: '/{id}/delete',\n                data: {\n                    authorities: ['ROLE_USER']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', 'MyWebsiteOffline', function ($stateParams, $state, $mdDialog, MyWebsiteOffline) {\n                    var confirm = $mdDialog.confirm()\n                        .title('You delete this website?')\n                        .textContent('This website and its template will be lost forever!')\n                        .ariaLabel('Lucky day')\n                        .targetEvent(null)\n                        .ok('Yes')\n                        .cancel('Cancel');\n\n                    $mdDialog.show(confirm).then(function () {\n                        MyWebsiteOffline.deleteWeb($stateParams.id);\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            });\n\n        $stateProvider.state('my-website-view', {\n            url: '/my-website/view',\n            data: {\n                authorities: []\n            },\n            params: {\n                website: null\n            },\n            views: {\n                'content@': {\n                    templateUrl: function ($stateParams) {\n                        return 'app/templates/' + $stateParams.website.template + '/' + $stateParams.website.template + '.html';\n                    },\n                    controller: 'MyWebsiteViewController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-home@my-website-view': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.homepage.isEnable)\n                            return 'app/web-modules/m-home/m-home.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MHomeController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-toolbar@my-website-view': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.toolbar.isEnable)\n                            return 'app/web-modules/m-toolbar/m-toolbar.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MToolBarController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-sidenav@my-website-view': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.sidenav.isEnable)\n                            return 'app/web-modules/m-sidenav/m-sidenav.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MSidenavController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-footer@my-website-view': {\n                    templateUrl: function ($stateParams) {\n                        if ($stateParams.website.custom.footer.isEnable)\n                            return 'app/web-modules/m-footer/m-footer.html';\n                        else\n                            return null;\n                    },\n                    controller: 'MFooterController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website;\n                        }\n                    }\n                },\n                'm-audio-player@my-website-view': {\n                    templateUrl: 'app/web-modules/m-audio-player/m-audio-player.html',\n                    controller: 'MAudioPlayerController',\n                    controllerAs: 'vm'\n                }\n            },resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('template');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('my-website-view.info', {\n            parent: 'my-website-view',\n            url: '/info',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@my-website-view': {\n                    templateUrl: 'app/web-modules/m-basic-info/m-basic-info.html',\n                    controller: 'MBasicInfoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        entity: function ($stateParams) {\n                            return $stateParams.website.custom.basicInfo;\n                        }\n                    }\n                }\n            }\n        }).state('my-website-view.photo', {\n            parent: 'my-website-view',\n            url: '/photos',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@my-website-view': {\n                    templateUrl: 'app/web-modules/m-photo/m-photo.html',\n                    controller: 'MPhotoController',\n                    controllerAs: 'vm',\n                    resolve: {\n                    }\n                }\n            }\n        }).state('my-website-view.song', {\n            parent: 'my-website-view',\n            url: '/songs',\n            data: {\n                authorities: []\n            },\n            views: {\n                'm-home@my-website-view': {\n                    templateUrl: 'app/web-modules/m-song/m-song.html',\n                    controller: 'MSongController',\n                    controllerAs: 'vm',\n                    resolve: {\n\n                    }\n                }\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MyWebsite', MyWebsite);\n\n    MyWebsite.$inject = ['$resource'];\n\n    function MyWebsite($resource) {\n        var resourceUrl = 'api/mywebsites/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': {method: 'GET', isArray: true},\n            'share': {method: 'GET', isArray: true, url: 'api/mywebsites/share'},\n            'create': {method: 'POST', url: 'api/mywebsites/create'},\n            'delete': {method: 'DELETE', url: 'api/mywebsites/delete'},\n            'update': {method: 'PUT', url: 'api/mywebsites/update'},\n            'paid': {method: 'POST', url: 'api/mywebsites/paid'},\n            'getUnpaid': {method: 'GET', url: 'api/mywebsites/unpaid', isArray: true}\n        });\n    }\n})();\n\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyWebsiteController', MyWebsiteController);\n\n    MyWebsiteController.$inject = ['$scope', 'MyWebsiteOffline'];\n\n    function MyWebsiteController($scope, MyWebsiteOffline ) {\n        var vm = this;\n\n        vm.refuse = MyWebsiteOffline.refuse;\n\n        vm.websites = [];\n\n        loadWebsites();\n\n        function loadWebsites() {\n            vm.websites = MyWebsiteOffline.all();\n        }\n\n        MyWebsiteOffline.subscribe($scope, function somethingChanged() {\n            loadWebsites();\n        });\n\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyNotificationViewController', MyNotificationViewController);\n\n    MyNotificationViewController.$inject = ['entity'];\n\n    function MyNotificationViewController(entity) {\n        var vm = this;\n\n        vm.notification = entity;\n        vm.notification.isRead = true;\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('my-notification', {\n            parent: 'customer',\n            url: '/my-notification',\n            data: {\n                authorities: [],\n                pageTitle: 'gsiteApp.template.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/customer/my-notification/my-notifications.html',\n                    controller: 'MyNotificationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('my-notification');\n                    return $translate.refresh();\n                }]\n            }\n        }).state('my-notification.view', {\n            parent: 'my-notification',\n            url: '/my-notification/view/{id}',\n            data: {\n                authorities: [],\n                pageTitle: 'gsiteApp.template.home.title'\n            },\n            params: {\n                id: null\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/customer/my-notification/my-notification-view.html',\n                    controller: 'MyNotificationViewController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                entity: ['$stateParams', 'Notification', function ($stateParams, Notification) {\n                    return Notification.get({id : $stateParams.id}).$promise;\n                }]\n            }\n        }).state('my-notification.delete', {\n            parent: 'my-notification',\n            url: '/my-notification/delete/{id}',\n            data: {\n                authorities: []\n            },\n            params: {\n                template_id: null\n            },\n            onEnter: ['$stateParams', '$state','Notification', function ($stateParams, $state,MyNotificationService) {\n                MyNotificationService.del($stateParams.id);\n                $state.go('my-notification');\n            }]\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n    angular\n        .module('gsiteApp')\n        .factory('MyNotificationService', MyNotificationService);\n\n    MyNotificationService.$inject = ['$rootScope','Principal','Notification'];\n\n    function MyNotificationService($rootScope,Principal,Notification) {\n        var instance = {\n            all: all,\n            del: del,\n            subscribe: subscribe\n        };\n\n        var userId = null;\n\n        var list = [];\n\n        Principal.identity().then(function (account) {\n            userId = account.id;\n            loadAll(account.id);\n        });\n\n\n        function loadAll(userId) {\n            Notification.mynotifications({\n                userId: userId\n            }, onSuccess, onError);\n\n            function onSuccess(data) {\n                list = data;\n                notify();\n            }\n\n            function onError(error) {\n                console.log(error);\n            }\n        }\n\n        function all() {\n            return list;\n        }\n\n\n        function del(id) {\n            Notification.delete({id: id}, onSuccess, onError);\n            function onSuccess(data) {\n                notify();\n            }\n            function onError(error) {\n                console.log(error);\n            }\n        }\n\n        function subscribe(scope, callback) {\n            var handler = $rootScope.$on('notifying-service-event', callback);\n            scope.$on('$destroy', handler);\n        }\n\n        function notify() {\n            $rootScope.$emit('notifying-service-event');\n        }\n\n\n        return instance;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MyNotificationController', MyNotificationController);\n\n    MyNotificationController.$inject = ['$scope','MyNotificationService'];\n\n    function MyNotificationController ($scope, MyNotificationService) {\n        var vm = this;\n        vm.notifications = [];\n\n        vm.notifications = MyNotificationService.all();\n\n        MyNotificationService.subscribe($scope, function somethingChanged() {\n            vm.notifications = MyNotificationService.all();\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('customer', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .filter('words', words);\n\n    function words() {\n        return wordsFilter;\n\n        function wordsFilter(input, words) {\n            if (isNaN(words)) {\n                return input;\n            }\n            if (words <= 0) {\n                return '';\n            }\n            if (input) {\n                var inputWords = input.split(/\\s+/);\n                if (inputWords.length > words) {\n                    input = inputWords.slice(0, words).join(' ') + '...';\n                }\n            }\n            return input;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .filter('characters', characters);\n\n    function characters () {\n        return charactersFilter;\n\n        function charactersFilter(input, chars, breakOnWord) {\n            if (isNaN(chars)) {\n                return input;\n            }\n            if (chars <= 0) {\n                return '';\n            }\n            if (input && input.length > chars) {\n                input = input.substring(0, chars);\n\n                if (!breakOnWord) {\n                    var lastspace = input.lastIndexOf(' ');\n                    // Get last space\n                    if (lastspace !== -1) {\n                        input = input.substr(0, lastspace);\n                    }\n                } else {\n                    while (input.charAt(input.length-1) === ' ') {\n                        input = input.substr(0, input.length - 1);\n                    }\n                }\n                return input + '...';\n            }\n            return input;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('jhSortBy', jhSortBy);\n\n    function jhSortBy() {\n        var directive = {\n            restrict: 'A',\n            scope: false,\n            require: '^jhSort',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs, parentCtrl) {\n            element.bind('click', function () {\n                parentCtrl.sort(attrs.jhSortBy);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('jhSort', jhSort);\n\n    function jhSort () {\n        var directive = {\n            restrict: 'A',\n            scope: {\n                predicate: '=jhSort',\n                ascending: '=',\n                callback: '&'\n            },\n            controller: SortController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n    }\n\n    SortController.$inject = ['$scope', '$element'];\n\n    function SortController ($scope, $element) {\n        var vm = this;\n\n        vm.applyClass = applyClass;\n        vm.resetClasses = resetClasses;\n        vm.sort = sort;\n        vm.triggerApply = triggerApply;\n\n        $scope.$watchGroup(['vm.predicate', 'vm.ascending'], vm.triggerApply);\n        vm.triggerApply();\n\n        function applyClass (element) {\n            var thisIcon = element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt',\n                remove = sortIcon + ' ' + sortDesc,\n                add = sortAsc;\n            if (!vm.ascending) {\n                remove = sortIcon + ' ' + sortAsc;\n                add = sortDesc;\n            }\n            vm.resetClasses();\n            thisIcon.removeClass(remove);\n            thisIcon.addClass(add);\n        }\n\n        function resetClasses () {\n            var allThIcons = $element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt';\n            allThIcons.removeClass(sortAsc + ' ' + sortDesc);\n            allThIcons.addClass(sortIcon);\n        }\n\n        function sort (field) {\n            if (field !== vm.predicate) {\n                vm.ascending = true;\n            } else {\n                vm.ascending = !vm.ascending;\n            }\n            vm.predicate = field;\n            $scope.$apply();\n            vm.callback();\n        }\n\n        function triggerApply (values)  {\n            vm.resetClasses();\n            if (values && values[0] !== '_score') {\n                vm.applyClass($element.find('th[jh-sort-by=\\'' + values[0] + '\\']'));\n            }\n        }\n    }\n})();\n\n(function(){\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('ParseLinks', ParseLinks);\n\n    function ParseLinks () {\n\n        var service = {\n            parse : parse\n        };\n\n        return service;\n\n        function parse(header) {\n            if (header.length === 0) {\n                throw new Error('input must not be of zero length');\n            }\n\n            // Split parts by comma\n            var parts = header.split(',');\n            var links = {};\n            // Parse each part into a named link\n            angular.forEach(parts, function(p) {\n                var section = p.split('>;');\n                if (section.length !== 2) {\n                    throw new Error('section could not be split on \">;\"');\n                }\n                var url = section[0].replace(/<(.*)/, '$1').trim();\n                var queryString = {};\n                url.replace(\n                    new RegExp('([^?=&]+)(=([^&]*))?', 'g'),\n                    function($0, $1, $2, $3) { queryString[$1] = $3; }\n                );\n                var page = queryString.page;\n                if (angular.isString(page)) {\n                    page = parseInt(page);\n                }\n                var name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n                links[name] = page;\n            });\n            return links;\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('PaginationUtil', PaginationUtil);\n\n    function PaginationUtil () {\n\n        var service = {\n            parseAscending : parseAscending,\n            parsePage : parsePage,\n            parsePredicate : parsePredicate\n        };\n\n        return service;\n\n        function parseAscending (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                return sort.split(',').slice(-1)[0] === 'asc';\n            } else {\n                // default to true if no sort defined\n                return true;\n            }\n        }\n\n        // query params are strings, and need to be parsed\n        function parsePage (page) {\n            return parseInt(page);\n        }\n\n        // sort can be in the format `id,asc` or `id`\n        function parsePredicate (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                sortArray.pop();\n            }\n            return sortArray.join(',');\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    var jhiItemCount = {\n        template: '<div class=\"info\">' +\n                    'Showing {{(($ctrl.page - 1) * $ctrl.itemsPerPage) == 0 ? 1 : (($ctrl.page - 1) * $ctrl.itemsPerPage + 1)}} - ' +\n                    '{{($ctrl.page * $ctrl.itemsPerPage) < $ctrl.queryCount ? ($ctrl.page * $ctrl.itemsPerPage) : $ctrl.queryCount}} ' +\n                    'of {{$ctrl.queryCount}} items.' +\n                '</div>',\n        bindings: {\n            page: '<',\n            queryCount: '<total',\n            itemsPerPage: '<'\n        }\n    };\n\n    angular\n        .module('gsiteApp')\n        .component('jhiItemCount', jhiItemCount);\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('DateUtils', DateUtils);\n\n    DateUtils.$inject = ['$filter'];\n\n    function DateUtils ($filter) {\n\n        var service = {\n            convertDateTimeFromServer : convertDateTimeFromServer,\n            convertLocalDateFromServer : convertLocalDateFromServer,\n            convertLocalDateToServer : convertLocalDateToServer,\n            dateformat : dateformat\n        };\n\n        return service;\n\n        function convertDateTimeFromServer (date) {\n            if (date) {\n                return new Date(date);\n            } else {\n                return null;\n            }\n        }\n\n        function convertLocalDateFromServer (date) {\n            if (date) {\n                var dateString = date.split('-');\n                return new Date(dateString[0], dateString[1] - 1, dateString[2]);\n            }\n            return null;\n        }\n\n        function convertLocalDateToServer (date) {\n            if (date) {\n                return $filter('date')(date, 'yyyy-MM-dd');\n            } else {\n                return null;\n            }\n        }\n\n        function dateformat () {\n            return 'yyyy-MM-dd';\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('DataUtils', DataUtils);\n\n    DataUtils.$inject = ['$window'];\n\n    function DataUtils ($window) {\n\n        var service = {\n            abbreviate: abbreviate,\n            byteSize: byteSize,\n            openFile: openFile,\n            toBase64: toBase64\n        };\n\n        return service;\n\n        function abbreviate (text) {\n            if (!angular.isString(text)) {\n                return '';\n            }\n            if (text.length < 30) {\n                return text;\n            }\n            return text ? (text.substring(0, 15) + '...' + text.slice(-10)) : '';\n        }\n\n        function byteSize (base64String) {\n            if (!angular.isString(base64String)) {\n                return '';\n            }\n\n            function endsWith(suffix, str) {\n                return str.indexOf(suffix, str.length - suffix.length) !== -1;\n            }\n\n            function paddingSize(base64String) {\n                if (endsWith('==', base64String)) {\n                    return 2;\n                }\n                if (endsWith('=', base64String)) {\n                    return 1;\n                }\n                return 0;\n            }\n\n            function size(base64String) {\n                return base64String.length / 4 * 3 - paddingSize(base64String);\n            }\n\n            function formatAsBytes(size) {\n                return size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') + ' bytes';\n            }\n\n            return formatAsBytes(size(base64String));\n        }\n\n        function openFile (type, data) {\n            $window.open('data:' + type + ';base64,' + data, '_blank', 'height=300,width=400');\n        }\n\n        function toBase64 (file, cb) {\n            var fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = function (e) {\n                var base64Data = e.target.result.substr(e.target.result.indexOf('base64,') + 'base64,'.length);\n                cb(base64Data);\n            };\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .filter('capitalize', capitalize);\n\n    function capitalize() {\n        return capitalizeFilter;\n\n        function capitalizeFilter (input) {\n            if (input !== null) {\n                input = input.toLowerCase();\n                input = input.substring(0, 1).toUpperCase() + input.substring(1);\n            }\n            return input;\n        }\n    }\n})();\n\n(function() {\n    /*jshint bitwise: false*/\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('Base64', Base64);\n\n    function Base64 () {\n        var keyStr = 'ABCDEFGHIJKLMNOP' +\n            'QRSTUVWXYZabcdef' +\n            'ghijklmnopqrstuv' +\n            'wxyz0123456789+/' +\n            '=';\n\n        var service = {\n            decode : decode,\n            encode : encode\n        };\n\n        return service;\n\n        function encode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n\n                enc1 = chr1 >> 2;\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n                enc4 = chr3 & 63;\n\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n\n                output = output +\n                    keyStr.charAt(enc1) +\n                    keyStr.charAt(enc2) +\n                    keyStr.charAt(enc3) +\n                    keyStr.charAt(enc4);\n            }\n\n            return output;\n        }\n\n        function decode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n            while (i < input.length) {\n                enc1 = keyStr.indexOf(input.charAt(i++));\n                enc2 = keyStr.indexOf(input.charAt(i++));\n                enc3 = keyStr.indexOf(input.charAt(i++));\n                enc4 = keyStr.indexOf(input.charAt(i++));\n\n                chr1 = (enc1 << 2) | (enc2 >> 4);\n                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n                chr3 = ((enc3 & 3) << 6) | enc4;\n\n                output = output + String.fromCharCode(chr1);\n\n                if (enc3 !== 64) {\n                    output = output + String.fromCharCode(chr2);\n                }\n                if (enc4 !== 64) {\n                    output = output + String.fromCharCode(chr3);\n                }\n            }\n\n            return output;\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('LoginService', LoginService);\n\n    LoginService.$inject = ['$mdDialog'];\n\n    function LoginService($mdDialog) {\n        var service = {\n            open: open\n        };\n\n        var modalInstance = null;\n        var resetModal = function () {\n            modalInstance = null;\n        };\n\n        return service;\n\n        function open() {\n            if (modalInstance !== null) return;\n            modalInstance = $mdDialog.show({\n                animation: true,\n                templateUrl: 'app/components/login/login.html',\n                controller: 'LoginController',\n                controllerAs: 'vm',\n                targetEvent: null,\n                clickOutsideToClose: true,\n                fullscreen: false,\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('login');\n                        return $translate.refresh();\n                    }]\n                }\n            });\n            modalInstance.then(\n                resetModal,\n                resetModal\n            );\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('LoginController', LoginController);\n\n    LoginController.$inject = ['$rootScope', '$state', 'Auth', '$mdDialog', 'Principal'];\n\n    function LoginController($rootScope ,$state, Auth, $mdDialog, Principal) {\n        var vm = this;\n\n        vm.authenticationError = false;\n        vm.closeLoginDialog = closeLoginDialog;\n        vm.credentials = {};\n        vm.login = login;\n        vm.password = null;\n        vm.register = register;\n        vm.rememberMe = true;\n        vm.requestResetPassword = requestResetPassword;\n\n        vm.username = null;\n        vm.isAuthenticated = false;\n        vm.logout = logout;\n\n        vm.isAuthenticated = Principal.isAuthenticated;\n\n\n        function closeLoginDialog() {\n            vm.credentials = {\n                username: null,\n                password: null,\n                rememberMe: true\n            };\n            vm.authenticationError = false;\n            $mdDialog.cancel('cancel');\n        }\n\n\n        if (vm.isAuthenticated())\n            getUserInfo();\n\n        function getUserInfo() {\n            Principal.identity().then(function (user) {\n                vm.username = user.login;\n            });\n        }\n\n\n        function logout() {\n            Auth.logout();\n            $mdDialog.hide();\n            $state.go('home');\n        }\n\n        function login(event) {\n            event.preventDefault();\n            Auth.login({\n                username: vm.username,\n                password: vm.password,\n                rememberMe: vm.rememberMe\n            }).then(function () {\n                vm.authenticationError = false;\n                $mdDialog.cancel();\n                if ($state.current.name === 'register' || $state.current.name === 'activate' ||\n                    $state.current.name === 'finishReset' || $state.current.name === 'requestReset') {\n                    $state.go('home');\n                }\n\n                $rootScope.$broadcast('authenticationSuccess');\n\n                // previousState was set in the authExpiredInterceptor before being redirected to login modal.\n                // since login is successful, go to stored previousState and clear previousState\n                if (Auth.getPreviousState()) {\n                    var previousState = Auth.getPreviousState();\n                    Auth.resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n            }).catch(function () {\n                vm.authenticationError = true;\n            });\n        }\n\n        function register() {\n            $mdDialog.cancel('cancel');\n            $state.go('register');\n        }\n\n        function requestResetPassword() {\n            $mdDialog.cancel('cancel');\n            $state.go('requestReset');\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('LanguageService', LanguageService);\n\n    LanguageService.$inject = ['$q', '$http', '$translate', 'LANGUAGES','tmhDynamicLocale'];\n\n    function LanguageService ($q, $http, $translate, LANGUAGES,tmhDynamicLocale) {\n        var service = {\n            getAll: getAll,\n            getCurrent: getCurrent,\n            changeLanguage: changeLanguage\n        };\n\n        return service;\n\n        function getAll () {\n            var deferred = $q.defer();\n            deferred.resolve(LANGUAGES);\n            return deferred.promise;\n        }\n\n        function getCurrent () {\n            var deferred = $q.defer();\n            var language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n\n            deferred.resolve(language);\n\n            return deferred.promise;\n        }\n\n        function changeLanguage(langKey) {\n            $translate.use(langKey);\n            tmhDynamicLocale.set(langKey);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .filter('findLanguageFromKey', findLanguageFromKey);\n\n    function findLanguageFromKey() {\n        return findLanguageFromKeyFilter;\n\n        function findLanguageFromKeyFilter(lang) {\n            return {\n                'en': 'English',\n                'vi': 'Tiếng Việt'\n            }[lang];\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('LanguageController', LanguageController);\n\n    LanguageController.$inject = ['$translate', 'LanguageService', 'tmhDynamicLocale'];\n\n    function LanguageController ($translate, LanguageService, tmhDynamicLocale) {\n        var vm = this;\n\n        vm.changeLanguage = changeLanguage;\n        vm.languages = null;\n\n        LanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function changeLanguage (languageKey) {\n            $translate.use(languageKey);\n            tmhDynamicLocale.set(languageKey);\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n\n\n        .constant('LANGUAGES', [\n            'en',\n            'vi'\n            // jhipster-needle-i18n-language-constant - JHipster will add/remove languages in this array\n        ]\n    );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('showValidation', showValidation);\n\n    function showValidation () {\n        var directive = {\n            restrict: 'A',\n            require: 'form',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, formCtrl) {\n            element.find('.form-group').each(function() {\n                var $formGroup = angular.element(this);\n                var $inputs = $formGroup.find('input[ng-model],textarea[ng-model],select[ng-model]');\n\n                if ($inputs.length > 0) {\n                    $inputs.each(function() {\n                        var $input = angular.element(this);\n                        var inputName = $input.attr('name');\n                        scope.$watch(function() {\n                            return formCtrl[inputName].$invalid && formCtrl[inputName].$dirty;\n                        }, function(isInvalid) {\n                            $formGroup.toggleClass('has-error', isInvalid);\n                        });\n                    });\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .constant('paginationConstants', {\n            'itemsPerPage': 20\n        });\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('minbytes', minbytes);\n\n    function minbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.minbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) >= attrs.minbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('maxbytes', maxbytes);\n\n    function maxbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.maxbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) <= attrs.maxbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .provider('AlertService', AlertService);\n\n    function AlertService() {\n        /*jshint validthis: true */\n        this.$get = getService;\n\n        getService.$inject = ['$mdToast'];\n\n        function getService($mdToast) {\n            return {\n                success: success,\n                error: error,\n                info: info,\n                warning: warning\n            };\n\n            function success(msg) {\n                var style = '';\n                return show(msg, style);\n            }\n\n            function error(msg) {\n                var style = 'm-toast-error';\n                return show(msg, style);\n            }\n\n            function warning(msg) {\n                var style = 'm-toast-warning';\n                return show(msg, style);\n            }\n\n            function info(msg) {\n                var style = '';\n                return show(msg, style);\n            }\n\n            function show(msg, style) {\n                $mdToast.show({\n                    hideDelay: 3000,\n                    toastClass: style,\n                    templateUrl: 'app/components/alert/alert.html',\n                    controller: 'AlertController',\n                    controllerAs: 'vm',\n                    resolve: {\n                        params: [function () {\n                            return {\n                                msg: msg\n                            };\n                        }]\n                    }\n                });\n            }\n        }\n    }\n\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('AlertController', AlertController);\n\n    AlertController.$inject = ['$scope','params'];\n\n    function AlertController ($scope,params) {\n        var vm = this;\n        vm.msg = params.msg;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('errorHandlerInterceptor', errorHandlerInterceptor);\n\n    errorHandlerInterceptor.$inject = ['$q', '$rootScope'];\n\n    function errorHandlerInterceptor ($q, $rootScope) {\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError (response) {\n            if (!(response.status === 401 && (response.data === '' || (response.data.path && response.data.path.indexOf('/api/account') === 0 )))) {\n                $rootScope.$emit('gsiteApp.httpError', response);\n            }\n            return $q.reject(response);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('authExpiredInterceptor', authExpiredInterceptor);\n\n    authExpiredInterceptor.$inject = ['$rootScope', '$q', '$injector', '$localStorage', '$sessionStorage'];\n\n    function authExpiredInterceptor($rootScope, $q, $injector, $localStorage, $sessionStorage) {\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError(response) {\n            if (response.status === 401) {\n                delete $localStorage.authenticationToken;\n                delete $sessionStorage.authenticationToken;\n                var Principal = $injector.get('Principal');\n                if (Principal.isAuthenticated()) {\n                    var Auth = $injector.get('Auth');\n                    Auth.authorize(true);\n                }\n            }\n            return $q.reject(response);\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('authInterceptor', authInterceptor);\n\n    authInterceptor.$inject = ['$rootScope', '$q', '$location', '$localStorage', '$sessionStorage'];\n\n    function authInterceptor($rootScope, $q, $location, $localStorage, $sessionStorage) {\n        var service = {\n            request: request\n        };\n\n        return service;\n\n\n        function request(config) {\n            function isExternal(config) {\n                if (config.url.indexOf('dropboxapi') > 0)\n                    return true;\n                return false;\n            }\n\n            /*jshint camelcase: false */\n            config.headers = config.headers || {};\n            var token = $localStorage.authenticationToken || $sessionStorage.authenticationToken;\n            if (token && !isExternal(config)) {\n                config.headers.Authorization = 'Bearer ' + token;\n            }\n            return config;\n        }\n\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('translationHandler', translationHandler);\n\n    translationHandler.$inject = ['$rootScope', '$window', '$state', '$translate'];\n\n    function translationHandler($rootScope, $window, $state, $translate) {\n        return {\n            initialize: initialize,\n            updateTitle: updateTitle\n        };\n\n        function initialize() {\n            // if the current translation changes, update the window title\n            var translateChangeSuccess = $rootScope.$on('$translateChangeSuccess', function() {\n                updateTitle();\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(translateChangeSuccess) && translateChangeSuccess !== null){\n                    translateChangeSuccess();\n                }\n            });\n        }\n\n        function updateTitle(titleKey) {\n            if (!titleKey && $state.$current.data && $state.$current.data.pageTitle) {\n                titleKey = $state.$current.data.pageTitle;\n            }\n            $translate(titleKey || 'global.title').then(function (title) {\n                $window.document.title = title;\n            });\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('subdomainHandler',subdomainHandler);\n\n    subdomainHandler.$inject = ['$location','$state','Website'];\n\n    function subdomainHandler($location,$state,Website) {\n        var subdomain = null;\n        var host = null;\n\n        var instance = {\n            initialize: initialize,\n            getSubdomain: getSubdomain,\n            getHost: getHost\n        };\n\n\n        function initialize() {\n            loadSubdomain();\n        }\n\n        function getHost(sub) {\n            if(sub != null)\n                sub = sub + \".\";\n\n            var fullHost = $location.protocol() + '://' + sub + host + \":\" + $location.port()\n            return fullHost;\n        }\n\n\n\n        function loadSubdomain() {\n             host = $location.host();\n            if (host.indexOf('.') > 0) {\n                var array = host.split('.');\n                // if (array.size > 2)\n                    subdomain = array[0];\n                handleSubdomain(subdomain);\n            }\n        }\n\n        function handleSubdomain(subdomain) {\n            if (subdomain != null) {\n                Website.domain({domain: subdomain}, success, error);\n                return;\n            }\n\n            function success(result) {\n                $state.go(\"view-website\",{website: result});\n            }\n\n            function error() {\n                $state.go(\"pagenotfound\");\n            }\n        }\n\n        function getSubdomain() {\n            return subdomain;\n        }\n\n\n        return instance;\n    }\n})\n();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('stateHandler', stateHandler);\n\n    stateHandler.$inject = ['$rootScope', '$state', '$sessionStorage', '$translate', 'LanguageService', 'translationHandler', '$window',\n        'Auth', 'Principal', 'VERSION'];\n\n    function stateHandler($rootScope, $state, $sessionStorage, $translate, LanguageService, translationHandler, $window,\n        Auth, Principal, VERSION) {\n        return {\n            initialize: initialize\n        };\n\n        function initialize() {\n            $rootScope.VERSION = VERSION;\n\n            var stateChangeStart = $rootScope.$on('$stateChangeStart', function (event, toState, toStateParams, fromState) {\n                $rootScope.toState = toState;\n                $rootScope.toStateParams = toStateParams;\n                $rootScope.fromState = fromState;\n\n                // Redirect to a state with an external URL (http://stackoverflow.com/a/30221248/1098564)\n                if (toState.external) {\n                    event.preventDefault();\n                    $window.open(toState.url, '_self');\n                }\n\n                if (Principal.isIdentityResolved()) {\n                    Auth.authorize();\n                }\n\n                // Update the language\n                LanguageService.getCurrent().then(function (language) {\n                    $translate.use(language);\n                });\n            });\n\n            var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess',  function(event, toState, toParams, fromState, fromParams) {\n                var titleKey = 'global.title' ;\n\n                // Set the page title key to the one configured in state or use default one\n                if (toState.data.pageTitle) {\n                    titleKey = toState.data.pageTitle;\n                }\n                translationHandler.updateTitle(titleKey);\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(stateChangeStart) && stateChangeStart !== null){\n                    stateChangeStart();\n                }\n                if(angular.isDefined(stateChangeSuccess) && stateChangeSuccess !== null){\n                    stateChangeSuccess();\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(paginationConfig);\n\n    paginationConfig.$inject = ['uibPaginationConfig', 'paginationConstants'];\n\n    function paginationConfig(uibPaginationConfig, paginationConstants) {\n        uibPaginationConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPaginationConfig.maxSize = 5;\n        uibPaginationConfig.boundaryLinks = true;\n        uibPaginationConfig.firstText = '«';\n        uibPaginationConfig.previousText = '‹';\n        uibPaginationConfig.nextText = '›';\n        uibPaginationConfig.lastText = '»';\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(pagerConfig);\n\n    pagerConfig.$inject = ['uibPagerConfig', 'paginationConstants'];\n\n    function pagerConfig(uibPagerConfig, paginationConstants) {\n        uibPagerConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPagerConfig.previousText = '«';\n        uibPagerConfig.nextText = '»';\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('translationStorageProvider', translationStorageProvider);\n\n    translationStorageProvider.$inject = ['$cookies', '$log', 'LANGUAGES'];\n\n    function translationStorageProvider($cookies, $log, LANGUAGES) {\n        return {\n            get: get,\n            put: put\n        };\n\n        function get(name) {\n            if (LANGUAGES.indexOf($cookies.getObject(name)) === -1) {\n                $log.info('Resetting invalid cookie language \"' + $cookies.getObject(name) + '\" to preferred language \"en\"');\n                $cookies.putObject(name, 'en');\n            }\n            return $cookies.getObject(name);\n        }\n\n        function put(name, value) {\n            $cookies.putObject(name, value);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(translationConfig);\n\n    translationConfig.$inject = ['$translateProvider', 'tmhDynamicLocaleProvider'];\n\n    function translationConfig($translateProvider, tmhDynamicLocaleProvider) {\n        // Initialize angular-translate\n        $translateProvider.useLoader('$translatePartialLoader', {\n            urlTemplate: 'i18n/{lang}/{part}.json'\n        });\n\n        $translateProvider.preferredLanguage('en');\n        $translateProvider.useStorage('translationStorageProvider');\n        $translateProvider.useSanitizeValueStrategy('escaped');\n        $translateProvider.addInterpolation('$translateMessageFormatInterpolation');\n\n        tmhDynamicLocaleProvider.localeLocationPattern('i18n/angular-locale_{{locale}}.js');\n        tmhDynamicLocaleProvider.useCookieStorage();\n        tmhDynamicLocaleProvider.storageKey('NG_TRANSLATE_LANG_KEY');\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(localStorageConfig);\n\n    localStorageConfig.$inject = ['$localStorageProvider', '$sessionStorageProvider'];\n\n    function localStorageConfig($localStorageProvider, $sessionStorageProvider) {\n        $localStorageProvider.setKeyPrefix('jhi-');\n        $sessionStorageProvider.setKeyPrefix('jhi-');\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(httpConfig);\n\n    httpConfig.$inject = ['$urlRouterProvider', '$httpProvider', 'httpRequestInterceptorCacheBusterProvider', '$urlMatcherFactoryProvider'];\n\n    function httpConfig($urlRouterProvider, $httpProvider, httpRequestInterceptorCacheBusterProvider, $urlMatcherFactoryProvider) {\n        //Cache everything except rest api requests\n        httpRequestInterceptorCacheBusterProvider.setMatchlist([/.*api.*/, /.*protected.*/], true);\n\n        $urlRouterProvider.otherwise('/');\n\n        $httpProvider.interceptors.push('errorHandlerInterceptor');\n        $httpProvider.interceptors.push('authExpiredInterceptor');\n        $httpProvider.interceptors.push('authInterceptor');\n        // jhipster-needle-angularjs-add-interceptor JHipster will add new application http interceptor here\n\n        $urlMatcherFactoryProvider.type('boolean', {\n            name : 'boolean',\n            decode: function(val) { return val === true || val === 'true'; },\n            encode: function(val) { return val ? 1 : 0; },\n            equals: function(a, b) { return this.is(a) && a === b; },\n            is: function(val) { return [true,false,0,1].indexOf(val) >= 0; },\n            pattern: /bool|true|0|1/\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(html5ModeConfig);\n\n    html5ModeConfig.$inject = ['$locationProvider'];\n\n    function html5ModeConfig($locationProvider) {\n        $locationProvider.html5Mode({ enabled: true, requireBase: true });\n    }\n})();\n\nwindow.fbAsyncInit = function() {\n    FB.init({\n        appId      : '940460799422307',\n        xfbml      : true,\n        version    : 'v2.8'\n    });\n    FB.AppEvents.logPageView();\n};\n\n(function(d, s, id){\n    var js, fjs = d.getElementsByTagName(s)[0];\n    if (d.getElementById(id)) {return;}\n    js = d.createElement(s); js.id = id;\n    js.src = \"//connect.facebook.net/en_US/sdk.js\";\n    fjs.parentNode.insertBefore(js, fjs);\n}(document, 'script', 'facebook-jssdk'));\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(compileServiceConfig);\n\n    compileServiceConfig.$inject = ['$compileProvider','DEBUG_INFO_ENABLED'];\n\n    function compileServiceConfig($compileProvider,DEBUG_INFO_ENABLED) {\n        $compileProvider.debugInfoEnabled(DEBUG_INFO_ENABLED);\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(cacheBusterConfig);\n\n    cacheBusterConfig.$inject = ['httpRequestInterceptorCacheBusterProvider'];\n\n    function cacheBusterConfig(httpRequestInterceptorCacheBusterProvider) {\n\n        httpRequestInterceptorCacheBusterProvider.setMatchlist([/.*.html/,/.*.svg/, /.*views.*/,'https://content.dropboxapi.com'/*.*/, 'https://api.dropboxapi.com'/*.*/]);\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(themeConfig);\n\n    themeConfig.$inject = ['$mdThemingProvider'];\n\n    function themeConfig($mdThemingProvider) {\n        $mdThemingProvider.theme('input')\n            .primaryPalette('pink')\n            .dark();\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('app', {\n            abstract: true,\n            views: {\n                'sidenav@': {\n                    templateUrl: 'app/layouts/sidenav/sidenav.html',\n                    controller: 'SidenavController',\n                    controllerAs: 'vm',\n                },\n                'toolbar@': {\n                    templateUrl: 'app/layouts/toolbar/toolbar.html',\n                    controller: 'ToolbarController',\n                    controllerAs: 'vm'\n                },\n                'quicktool@': {\n                    templateUrl: 'app/layouts/quicktool/quicktool.html',\n                    controller: 'QuickToolController',\n                    controllerAs: 'vm'\n                },\n                'footer@': {\n                    templateUrl: 'app/layouts/footer/footer.html',\n                    controller: 'FooterController',\n                    controllerAs: 'vm'\n                },\n                'custom-sidenav@': {\n                    templateUrl: 'app/layouts/custom-sidenav/custom-sidenav.html',\n                    controller: 'CustomSidenavController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                authorize: ['Auth',\n                    function (Auth) {\n                        return Auth.authorize();\n                    }\n                ],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('global');\n                }]\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n    // DO NOT EDIT THIS FILE, EDIT THE GULP TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE\n    angular\n        .module('gsiteApp')\n        .constant('VERSION', \"0.0.1-SNAPSHOT\")\n        .constant('DEBUG_INFO_ENABLED', false)\n;\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('UserManagementDialogController', UserManagementDialogController);\n\n    UserManagementDialogController.$inject = ['$mdDialog', 'entity', 'User', 'LanguageService','Register'];\n\n    function UserManagementDialogController( $mdDialog, entity, User, LanguageService,Register) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_MANAGER', 'ROLE_ADMIN'];\n        vm.closeDialog = closeDialog;\n        vm.languages = null;\n        vm.save = save;\n        vm.user = entity;\n\n        vm.choose = choose;\n        vm.deleteChoice = deleteChoice;\n\n\n\n        LanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function closeDialog() {\n            $mdDialog.cancel();\n        }\n\n        function onSaveSuccess(result) {\n            vm.isSaving = false;\n            $mdDialog.hide(result);\n        }\n\n        function onSaveError() {\n            vm.isSaving = false;\n            vm.message = \"User or email is already existed!\";\n        }\n\n        function save() {\n            vm.isSaving = true;\n            if (vm.user.id !== null) {\n                User.update(vm.user, onSaveSuccess, onSaveError);\n            } else {\n                Register.save(vm.user, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function choose() {\n            if (getIndex(vm.choice) < 0)\n                vm.user.authorities.push(vm.choice);\n        }\n\n        function getIndex(choice) {\n            return vm.user.authorities.indexOf(choice);\n        }\n\n        function deleteChoice(index) {\n            vm.user.authorities.splice(index, 1);\n        }\n\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('UserManagementDetailController', UserManagementDetailController);\n\n    UserManagementDetailController.$inject = ['$stateParams', 'User'];\n\n    function UserManagementDetailController ($stateParams, User) {\n        var vm = this;\n\n        vm.load = load;\n        vm.user = {};\n        vm.setActivated = setActivated;\n        vm.setLanguage = setLanguage;\n\n        vm.load($stateParams.login);\n\n\n        function load (login) {\n            User.get({login: login}, function(result) {\n                vm.user = result;\n            });\n        }\n\n        function setActivated(user,activated) {\n            user.activated = activated;\n            User.update(user);\n        }\n\n        function setLanguage(user,langKey) {\n            user.langKey = langKey;\n            User.update(vm.user);\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('user-management', {\n                parent: 'admin',\n                url: '/user-management?page&sort',\n                data: {\n                    authorities: ['ROLE_ADMIN'],\n                    pageTitle: 'userManagement.home.title'\n                },\n                views: {\n                    'admin-content@admin': {\n                        templateUrl: 'app/admin/user-management/user-management.html',\n                        controller: 'UserManagementController',\n                        controllerAs: 'vm'\n                    }\n                },\n                params: {\n                    page: {\n                        value: '1',\n                        squash: true\n                    },\n                    sort: {\n                        value: 'id,asc',\n                        squash: true\n                    }\n                },\n                resolve: {\n                    pagingParams: ['$stateParams', 'PaginationUtil', function ($stateParams, PaginationUtil) {\n                        return {\n                            page: PaginationUtil.parsePage($stateParams.page),\n                            sort: $stateParams.sort,\n                            predicate: PaginationUtil.parsePredicate($stateParams.sort),\n                            ascending: PaginationUtil.parseAscending($stateParams.sort)\n                        };\n                    }],\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('user-management');\n                        return $translate.refresh();\n                    }]\n\n                }\n            })\n            .state('user-management.new', {\n                parent: 'user-management',\n                url: '/new',\n                data: {\n                    authorities: ['ROLE_ADMIN']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                        controller: 'UserManagementDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: [function () {\n                                var user = {\n                                    id: null,\n                                    login: null,\n                                    firstName: null,\n                                    lastName: null,\n                                    email: null,\n                                    activated: false,\n                                    langKey: 'en',\n                                    authorities: [],\n                                    createdBy: null,\n                                    createdDate: new Date(),\n                                    modifiedBy: null,\n                                    modifiedDate: null\n                                };\n                                return user;\n                            }]\n                        }\n                    }).then(function (answer) {\n                        $state.go('user-management', null, {reload: 'user-management'});\n                    }, function () {\n                        $state.go('user-management');\n                    });\n                }]\n            }).state('user-management-detail', {\n                parent: 'admin',\n                url: '/user/:login',\n                data: {\n                    authorities: ['ROLE_ADMIN'],\n                    pageTitle: 'user-management.detail.title'\n                },\n                views: {\n                    'admin-content@admin': {\n                        templateUrl: 'app/admin/user-management/user-management-detail.html',\n                        controller: 'UserManagementDetailController',\n                        controllerAs: 'vm'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('user-management');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('user-management.edit', {\n                parent: 'user-management',\n                url: '/{login}/edit',\n                data: {\n                    authorities: ['ROLE_ADMIN']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', function ($stateParams, $state, $mdDialog) {\n                    $mdDialog.show({\n                        templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                        controller: 'UserManagementDialogController',\n                        controllerAs: 'vm',\n                        clickOutsideToClose: true,\n                        fullscreen: false,\n                        resolve: {\n                            entity: ['User', function (User) {\n                                return User.get({\n                                    login: $stateParams.login\n                                });\n                            }]\n                        }\n                    }).then(function (answer) {\n                        $state.go('user-management', null, {\n                            reload: true\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            })\n            .state('user-management.delete', {\n                parent: 'user-management',\n                url: '/{login}/delete',\n                data: {\n                    authorities: ['ROLE_ADMIN']\n                },\n                onEnter: ['$stateParams', '$state', '$mdDialog', 'User', function ($stateParams, $state, $mdDialog, User) {\n                    var confirm = $mdDialog.confirm()\n                        .title('You delete this user?')\n                        .textContent('This user and its data will be lost forever!')\n                        .ariaLabel('Lucky day')\n                        .targetEvent(null)\n                        .ok('Yes')\n                        .cancel('Cancel');\n\n                    $mdDialog.show(confirm).then(function () {\n                        User.delete({login: $stateParams.login});\n                        $state.go('user-management', null, {\n                            reload: 'user-management'\n                        });\n                    }, function () {\n                        $state.go('^');\n                    });\n                }]\n            });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('UserManagementController', UserManagementController);\n\n    UserManagementController.$inject = ['Principal', 'User', 'AlertService', 'LanguageService'];\n\n    function UserManagementController(Principal, User, AlertService, LanguageService) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_MANAGER', 'ROLE_ADMIN'];\n        vm.currentAccount = null;\n        vm.languages = null;\n        vm.loadAll = loadAll;\n        vm.setActive = setActive;\n        vm.users = [];\n        vm.clear = clear;\n\n\n        vm.loadAll();\n\n        LanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n        Principal.identity().then(function (account) {\n            vm.currentAccount = account;\n        });\n\n        function setActive(user, isActivated) {\n            user.activated = isActivated;\n            User.update(user);\n        }\n\n        function loadAll() {\n            User.query({}, onSuccess, onError);\n        }\n\n        function onSuccess(data) {\n            vm.users = data;\n        }\n\n        function onError(error) {\n            AlertService.error(error.data.message);\n        }\n\n        function clear() {\n            vm.user = {\n                id: null, login: null, firstName: null, lastName: null, email: null,\n                activated: null, langKey: null, createdBy: null, createdDate: null,\n                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\n                resetKey: null, authorities: null\n            };\n        }\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('metrics', {\n            parent: 'admin',\n            url: '/metrics',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'metrics.title'\n            },\n            views: {\n                'admin-content@admin': {\n                    templateUrl: 'app/admin/metrics/metrics.html',\n                    controller: 'MetricsMonitoringController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('metrics');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('MetricsService', MetricsService);\n\n    MetricsService.$inject = ['$rootScope', '$http'];\n\n    function MetricsService ($rootScope, $http) {\n        var service = {\n            getMetrics: getMetrics,\n            threadDump: threadDump\n        };\n\n        return service;\n\n        function getMetrics () {\n            return $http.get('management/metrics').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function threadDump () {\n            return $http.get('management/dump').then(function (response) {\n                return response.data;\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('MetricsMonitoringController', MetricsMonitoringController);\n\n    MetricsMonitoringController.$inject = ['$scope','MetricsService'];\n\n    function MetricsMonitoringController ($scope, MetricsService) {\n        var vm = this;\n\n        vm.metrics = {};\n        vm.refresh = refresh;\n        vm.servicesStats = {};\n        vm.updatingMetrics = true;\n\n        vm.refresh();\n\n        $scope.$watch('vm.metrics', function (newValue) {\n            vm.servicesStats = {};\n            angular.forEach(newValue.timers, function (value, key) {\n                if (key.indexOf('web.rest') !== -1 || key.indexOf('service') !== -1) {\n                    vm.servicesStats[key] = value;\n                }\n            });\n\n        });\n\n        function refresh () {\n            vm.updatingMetrics = true;\n            MetricsService.getMetrics().then(function (promise) {\n                vm.metrics = promise;\n                vm.updatingMetrics = false;\n            }, function (promise) {\n                vm.metrics = promise.data;\n                vm.updatingMetrics = false;\n            });\n        }\n\n\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('logs', {\n            parent: 'admin',\n            url: '/logs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'logs.title'\n            },\n            views: {\n                'admin-content@admin': {\n                    templateUrl: 'app/admin/logs/logs.html',\n                    controller: 'LogsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('logs');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('LogsService', LogsService);\n\n    LogsService.$inject = ['$resource'];\n\n    function LogsService ($resource) {\n        var service = $resource('management/logs', {}, {\n            'findAll': { method: 'GET', isArray: true},\n            'changeLevel': { method: 'PUT'}\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('LogsController', LogsController);\n\n    LogsController.$inject = ['LogsService'];\n\n    function LogsController (LogsService) {\n        var vm = this;\n\n        vm.changeLevel = changeLevel;\n        vm.loggers = LogsService.findAll();\n\n        function changeLevel (name, level) {\n            LogsService.changeLevel({name: name, level: level}, function () {\n                vm.loggers = LogsService.findAll();\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('health', {\n            parent: 'admin',\n            url: '/health',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'health.title'\n            },\n            views: {\n                'admin-content@admin': {\n                    templateUrl: 'app/admin/health/health.html',\n                    controller: 'HealthCheckController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('health');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('HealthService', HealthService);\n\n    HealthService.$inject = ['$rootScope', '$http'];\n\n    function HealthService ($rootScope, $http) {\n        var separator = '.';\n        var service = {\n            checkHealth: checkHealth,\n            transformHealthData: transformHealthData,\n            getBaseName: getBaseName,\n            getSubSystemName: getSubSystemName\n        };\n\n        return service;\n\n        function checkHealth () {\n            return $http.get('management/health').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function transformHealthData (data) {\n            var response = [];\n            flattenHealthData(response, null, data);\n            return response;\n        }\n\n        function getBaseName (name) {\n            if (name) {\n                var split = name.split('.');\n                return split[0];\n            }\n        }\n\n        function getSubSystemName (name) {\n            if (name) {\n                var split = name.split('.');\n                split.splice(0, 1);\n                var remainder = split.join('.');\n                return remainder ? ' - ' + remainder : '';\n            }\n        }\n\n        /* private methods */\n        function flattenHealthData (result, path, data) {\n            angular.forEach(data, function (value, key) {\n                if (isHealthObject(value)) {\n                    if (hasSubSystem(value)) {\n                        addHealthObject(result, false, value, getModuleName(path, key));\n                        flattenHealthData(result, getModuleName(path, key), value);\n                    } else {\n                        addHealthObject(result, true, value, getModuleName(path, key));\n                    }\n                }\n            });\n            return result;\n        }\n\n        function addHealthObject (result, isLeaf, healthObject, name) {\n\n            var healthData = {\n                'name': name\n            };\n            var details = {};\n            var hasDetails = false;\n\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status' || key === 'error') {\n                    healthData[key] = value;\n                } else {\n                    if (!isHealthObject(value)) {\n                        details[key] = value;\n                        hasDetails = true;\n                    }\n                }\n            });\n\n            // Add the of the details\n            if (hasDetails) {\n                angular.extend(healthData, { 'details': details});\n            }\n\n            // Only add nodes if they provide additional information\n            if (isLeaf || hasDetails || healthData.error) {\n                result.push(healthData);\n            }\n            return healthData;\n        }\n\n        function getModuleName (path, name) {\n            var result;\n            if (path && name) {\n                result = path + separator + name;\n            }  else if (path) {\n                result = path;\n            } else if (name) {\n                result = name;\n            } else {\n                result = '';\n            }\n            return result;\n        }\n\n        function hasSubSystem (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value) {\n                if (value && value.status) {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n        function isHealthObject (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status') {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular.module('gsiteApp')\n        .controller('HealthModalController', HealthModalController);\n\n    HealthModalController.$inject = ['$mdDialog', 'currentHealth', 'baseName', 'subSystemName'];\n\n    function HealthModalController ($mdDialog, currentHealth, baseName, subSystemName) {\n        var vm = this;\n\n        vm.cancel = cancel;\n        vm.currentHealth = currentHealth;\n        vm.baseName = baseName;\n        vm.subSystemName = subSystemName;\n\n        function cancel() {\n            $mdDialog.cancel('cancel');\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('HealthCheckController', HealthCheckController);\n\n    HealthCheckController.$inject = ['HealthService', '$mdDialog'];\n\n    function HealthCheckController(HealthService, $mdDialog) {\n        var vm = this;\n\n        vm.updatingHealth = true;\n        vm.getLabelClass = getLabelClass;\n        vm.refresh = refresh;\n        vm.showHealth = showHealth;\n        vm.baseName = HealthService.getBaseName;\n        vm.subSystemName = HealthService.getSubSystemName;\n\n        vm.refresh();\n\n        function getLabelClass(statusState) {\n            if (statusState === 'UP') {\n                return 'label-success';\n            } else {\n                return 'label-danger';\n            }\n        }\n\n        function refresh() {\n            vm.updatingHealth = true;\n            HealthService.checkHealth().then(function (response) {\n                vm.healthData = HealthService.transformHealthData(response);\n                vm.updatingHealth = false;\n            }, function (response) {\n                vm.healthData = HealthService.transformHealthData(response.data);\n                vm.updatingHealth = false;\n            });\n        }\n\n        function showHealth(health) {\n            $mdDialog.show({\n                templateUrl: 'app/admin/health/health.modal.html',\n                controller: 'HealthModalController',\n                controllerAs: 'vm',\n                clickOutsideToClose: true,\n                fullscreen: false,\n                resolve: {\n                    currentHealth: function () {\n                        return health;\n                    },\n                    baseName: function () {\n                        return vm.baseName;\n                    },\n                    subSystemName: function () {\n                        return vm.subSystemName;\n                    }\n\n                }\n            });\n        }\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig ($stateProvider) {\n        $stateProvider.state('docs', {\n            parent: 'admin',\n            url: '/docs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'global.menu.admin.apidocs'\n            },\n            views: {\n                'admin-content@admin': {\n                    templateUrl: 'app/admin/docs/docs.html'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', function ($translate) {\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('configuration', {\n            parent: 'admin',\n            url: '/configuration',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'configuration.title'\n            },\n            views: {\n                'admin-content@admin': {\n                    templateUrl: 'app/admin/configuration/configuration.html',\n                    controller: 'ConfigurationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('configuration');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('ConfigurationService', ConfigurationService);\n\n    ConfigurationService.$inject = ['$filter', '$http'];\n\n    function ConfigurationService ($filter, $http) {\n        var service = {\n            get: get,\n            getEnv: getEnv\n        };\n\n        return service;\n\n        function get () {\n            return $http.get('management/configprops').then(getConfigPropsComplete);\n\n            function getConfigPropsComplete (response) {\n                var properties = [];\n                angular.forEach(response.data, function (data) {\n                    properties.push(data);\n                });\n                var orderBy = $filter('orderBy');\n                return orderBy(properties, 'prefix');\n            }\n        }\n\n        function getEnv () {\n            return $http.get('management/env').then(getEnvComplete);\n\n            function getEnvComplete (response) {\n                var properties = {};\n                angular.forEach(response.data, function (val,key) {\n                    var vals = [];\n                    angular.forEach(val, function (v,k) {\n                        vals.push({ key:k, val:v });\n                    });\n                    properties[key] = vals;\n                });\n                return properties;\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('ConfigurationController', ConfigurationController);\n\n    ConfigurationController.$inject = ['$filter','ConfigurationService'];\n\n    function ConfigurationController (filter,ConfigurationService) {\n        var vm = this;\n\n        vm.allConfiguration = null;\n        vm.configuration = null;\n\n        ConfigurationService.get().then(function(configuration) {\n            vm.configuration = configuration;\n        });\n        ConfigurationService.getEnv().then(function (configuration) {\n            vm.allConfiguration = configuration;\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('audits', {\n            parent: 'admin',\n            url: '/audits',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'audits.title'\n            },\n            views: {\n                'admin-content@admin': {\n                    templateUrl: 'app/admin/audits/audits.html',\n                    controller: 'AuditsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('audits');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('AuditsService', AuditsService);\n\n    AuditsService.$inject = ['$resource'];\n\n    function AuditsService ($resource) {\n        var service = $resource('management/audits/:id', {}, {\n            'get': {\n                method: 'GET',\n                isArray: true\n            },\n            'query': {\n                method: 'GET',\n                isArray: true,\n                params: {fromDate: null, toDate: null}\n            }\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('AuditsController', AuditsController);\n\n    AuditsController.$inject = ['$filter', 'AuditsService', 'ParseLinks'];\n\n    function AuditsController ($filter, AuditsService, ParseLinks) {\n        var vm = this;\n\n        vm.audits = null;\n        vm.fromDate = null;\n        vm.links = null;\n        vm.loadPage = loadPage;\n        vm.onChangeDate = onChangeDate;\n        vm.page = 1;\n        vm.previousMonth = previousMonth;\n        vm.toDate = null;\n        vm.today = today;\n        vm.totalItems = null;\n    \n        vm.today();\n        vm.previousMonth();\n        vm.onChangeDate();\n\n        function onChangeDate () {\n            var dateFormat = 'yyyy-MM-dd';\n            var fromDate = $filter('date')(vm.fromDate, dateFormat);\n            var toDate = $filter('date')(vm.toDate, dateFormat);\n\n            AuditsService.query({page: vm.page -1, size: 20, fromDate: fromDate, toDate: toDate}, function(result, headers){\n                vm.audits = result;\n                vm.links = ParseLinks.parse(headers('link'));\n                vm.totalItems = headers('X-Total-Count');\n            });\n        }\n\n        // Date picker configuration\n        function today () {\n            // Today + 1 day - needed if the current day must be included\n            var today = new Date();\n            vm.toDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);\n        }\n\n        function previousMonth () {\n            var fromDate = new Date();\n            if (fromDate.getMonth() === 0) {\n                fromDate = new Date(fromDate.getFullYear() - 1, 11, fromDate.getDate());\n            } else {\n                fromDate = new Date(fromDate.getFullYear(), fromDate.getMonth() - 1, fromDate.getDate());\n            }\n\n            vm.fromDate = fromDate;\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.onChangeDate();\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('admin', {\n            abstract: true,\n            parent: 'app',\n            views: {\n                'adminbar@admin': {\n                    templateUrl: 'app/layouts/adminbar/adminbar.html',\n                    controller: 'AdminBarController',\n                    controllerAs: 'vm'\n                },\n                'content@': {\n                    templateUrl: 'app/admin/admin.html'\n                }\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('SocialRegisterController', SocialRegisterController);\n\n    SocialRegisterController.$inject = ['$filter', '$stateParams'];\n\n    function SocialRegisterController ($filter, $stateParams) {\n        var vm = this;\n\n        vm.success = $stateParams.success;\n        vm.error = !vm.success;\n        vm.provider = $stateParams.provider;\n        vm.providerLabel = $filter('capitalize')(vm.provider);\n        vm.success = $stateParams.success;\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('SocialAuthController', SocialAuthController);\n\n    SocialAuthController.$inject = ['$state', '$cookies', 'Auth'];\n\n    function SocialAuthController($state, $cookies, Auth) {\n        var token = $cookies.get('social-authentication');\n\n        Auth.loginWithToken(token, false).then(function () {\n            $cookies.remove('social-authentication');\n            Auth.authorize(true);\n        }, function () {\n            $state.go('social-register', {'success': 'false'});\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('social-register', {\n            parent: 'account',\n            url: '/social-register/:provider?{success:boolean}',\n            data: {\n                authorities: [],\n                pageTitle: 'social.register.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/social/social-register.html',\n                    controller: 'SocialRegisterController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('social');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('social-auth', {\n            parent: 'account',\n            url: '/social-auth',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    controller: 'SocialAuthController'\n                }\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .factory('SocialService', SocialService);\n\n    SocialService.$inject = ['$http', '$cookies'];\n\n    function SocialService ($http, $cookies) {\n        var socialService = {\n            getProviderSetting: getProviderSetting,\n            getProviderURL: getProviderURL,\n            getCSRF: getCSRF\n        };\n\n        return socialService;\n\n        function getProviderSetting (provider) {\n            switch(provider) {\n            case 'google': return 'https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email';\n            case 'facebook': return 'public_profile,email';\n            case 'twitter': return '';\n            default: return 'Provider setting not defined';\n            }\n        }\n\n        function getProviderURL (provider) {\n            return 'signin/' + provider;\n        }\n\n        function getCSRF () {\n            return $cookies.get($http.defaults.xsrfCookieName);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('jhSocial', jhSocial);\n\n    jhSocial.$inject = ['$translatePartialLoader', '$translate', '$filter', 'SocialService'];\n\n    function jhSocial($translatePartialLoader, $translate, $filter, SocialService) {\n        var directive = {\n            restrict: 'E',\n            scope: {\n                provider: '@ngProvider'\n            },\n            templateUrl: 'app/account/social/directive/social.html',\n            link: linkFunc\n        };\n\n        return directive;\n\n\n        function linkFunc(scope) {\n\n            $translatePartialLoader.addPart('social');\n            $translate.refresh();\n\n            scope.label = $filter('capitalize')(scope.provider);\n            scope.providerSetting = SocialService.getProviderSetting(scope.provider);\n            scope.providerURL = SocialService.getProviderURL(scope.provider);\n            scope.csrf = SocialService.getCSRF();\n        }\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('settings', {\n            parent: 'account',\n            url: '/settings',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.settings'\n            },\n            views: {\n                'account-content@account': {\n                    templateUrl: 'app/account/settings/settings.html',\n                    controller: 'SettingsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('settings');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('SettingsController', SettingsController);\n\n    SettingsController.$inject = ['$state','Principal', 'Auth', 'LanguageService', '$translate','AlertService'];\n\n    function SettingsController ($state,Principal, Auth, LanguageService, $translate,AlertService) {\n        var vm = this;\n\n        vm.save = save;\n        vm.settingsAccount = null;\n\n        vm.cancel = cancel;\n        function cancel() {\n            $state.go('settings');\n        }\n\n\n        var copyAccount = function (account) {\n            return {\n                activated: account.activated,\n                email: account.email,\n                firstName: account.firstName,\n                langKey: account.langKey,\n                lastName: account.lastName,\n                login: account.login\n            };\n        };\n\n        Principal.identity().then(function(account) {\n            vm.settingsAccount = copyAccount(account);\n        });\n\n        function save () {\n            Auth.updateAccount(vm.settingsAccount).then(function() {\n                AlertService.success(\"OK !\");\n                Principal.identity(true).then(function(account) {\n                    vm.settingsAccount = copyAccount(account);\n                });\n                LanguageService.getCurrent().then(function(current) {\n                    if (vm.settingsAccount.langKey !== current) {\n                        $translate.use(vm.settingsAccount.langKey);\n                    }\n                });\n            }).catch(function() {\n                AlertService.error(\"Error !\");\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('sessions', {\n            parent: 'account',\n            url: '/sessions',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.sessions'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/sessions/sessions.html',\n                    controller: 'SessionsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('sessions');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('SessionsController', SessionsController);\n\n    SessionsController.$inject = ['Sessions', 'Principal'];\n\n    function SessionsController (Sessions, Principal) {\n        var vm = this;\n\n        vm.account = null;\n        vm.error = null;\n        vm.invalidate = invalidate;\n        vm.sessions = Sessions.getAll();\n        vm.success = null;\n\n\n        Principal.identity().then(function(account) {\n            vm.account = account;\n        });\n\n        function invalidate (series) {\n            Sessions.delete({series: encodeURIComponent(series)},\n                function () {\n                    vm.error = null;\n                    vm.success = 'OK';\n                    vm.sessions = Sessions.getAll();\n                },\n                function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('requestReset', {\n            parent: 'account',\n            url: '/reset/request',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/request/reset.request.html',\n                    controller: 'RequestResetController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('RequestResetController', RequestResetController);\n\n    RequestResetController.$inject = ['Auth'];\n\n    function RequestResetController(Auth) {\n        var vm = this;\n\n        vm.error = null;\n        vm.errorEmailNotExists = null;\n        vm.requestReset = requestReset;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        function requestReset() {\n\n            vm.error = null;\n            vm.errorEmailNotExists = null;\n\n            Auth.resetPasswordInit(vm.resetAccount.email).then(function () {\n                vm.success = 'OK';\n            }).catch(function (response) {\n                vm.success = null;\n                if (response.status === 400 && response.data === 'e-mail address not registered') {\n                    vm.errorEmailNotExists = 'ERROR';\n                } else {\n                    vm.error = 'ERROR';\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('finishReset', {\n            parent: 'account',\n            url: '/reset/finish?key',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/finish/reset.finish.html',\n                    controller: 'ResetFinishController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('ResetFinishController', ResetFinishController);\n\n    ResetFinishController.$inject = ['$stateParams', 'Auth', 'LoginService'];\n\n    function ResetFinishController($stateParams, Auth, LoginService) {\n        var vm = this;\n\n        vm.keyMissing = angular.isUndefined($stateParams.key);\n        vm.confirmPassword = null;\n        vm.error = null;\n        vm.finishReset = finishReset;\n        vm.login = LoginService.open;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        function finishReset() {\n            vm.error = null;\n\n            Auth.resetPasswordFinish({\n                key: $stateParams.key,\n                newPassword: vm.resetAccount.password\n            }).then(function () {\n                vm.success = 'OK';\n            }).catch(function () {\n                vm.success = null;\n                vm.error = 'ERROR';\n            });\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('register', {\n            parent: 'account',\n            url: '/register',\n            data: {\n                authorities: [],\n                pageTitle: 'register.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/register/register.html',\n                    controller: 'RegisterController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('register');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('RegisterController', RegisterController);\n\n\n    RegisterController.$inject = ['$translate', 'Auth', 'LoginService'];\n\n    function RegisterController($translate, Auth, LoginService) {\n        var vm = this;\n\n        vm.error = null;\n        vm.errorUserExists = null;\n        vm.login = LoginService.open;\n        vm.register = register;\n        vm.registerAccount = {};\n        vm.success = null;\n\n        function register() {\n            vm.registerAccount.langKey = $translate.use();\n            vm.error = null;\n            vm.errorUserExists = null;\n            vm.errorEmailExists = null;\n\n            Auth.createAccount(vm.registerAccount).then(function () {\n                vm.success = 'OK';\n            }).catch(function (response) {\n                vm.success = null;\n                if (response.status === 400 && response.data === 'login already in use') {\n                    vm.errorUserExists = 'ERROR';\n                } else if (response.status === 400 && response.data === 'e-mail address already in use') {\n                    vm.errorEmailExists = 'ERROR';\n                } else {\n                    vm.error = 'ERROR';\n                }\n            });\n\n        }\n    }\n})();\n\n/* globals $ */\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .directive('passwordStrengthBar', passwordStrengthBar);\n\n    function passwordStrengthBar () {\n        var directive = {\n            replace: true,\n            restrict: 'E',\n            template: '<div id=\"strength\">' +\n                '<small data-translate=\"global.messages.validate.newpassword.strength\">Password strength:</small>' +\n                '<ul id=\"strengthBar\">' +\n                '<li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li>' +\n                '</ul>' +\n                '</div>',\n            scope: {\n                passwordToCheck: '='\n            },\n            link: linkFunc\n        };\n\n        return directive;\n\n        /* private helper methods*/\n\n        function linkFunc(scope, iElement) {\n            var strength = {\n                colors: ['#F00', '#F90', '#FF0', '#9F0', '#0F0'],\n                mesureStrength: function (p) {\n\n                    var _force = 0;\n                    var _regex = /[$-/:-?{-~!\"^_`\\[\\]]/g; // \"\n\n                    var _lowerLetters = /[a-z]+/.test(p);\n                    var _upperLetters = /[A-Z]+/.test(p);\n                    var _numbers = /[0-9]+/.test(p);\n                    var _symbols = _regex.test(p);\n\n                    var _flags = [_lowerLetters, _upperLetters, _numbers, _symbols];\n                    var _passedMatches = $.grep(_flags, function (el) {\n                        return el === true;\n                    }).length;\n\n                    _force += 2 * p.length + ((p.length >= 10) ? 1 : 0);\n                    _force += _passedMatches * 10;\n\n                    // penalty (short password)\n                    _force = (p.length <= 6) ? Math.min(_force, 10) : _force;\n\n                    // penalty (poor variety of characters)\n                    _force = (_passedMatches === 1) ? Math.min(_force, 10) : _force;\n                    _force = (_passedMatches === 2) ? Math.min(_force, 20) : _force;\n                    _force = (_passedMatches === 3) ? Math.min(_force, 40) : _force;\n\n                    return _force;\n\n                },\n                getColor: function (s) {\n\n                    var idx;\n                    if (s <= 10) {\n                        idx = 0;\n                    }\n                    else if (s <= 20) {\n                        idx = 1;\n                    }\n                    else if (s <= 30) {\n                        idx = 2;\n                    }\n                    else if (s <= 40) {\n                        idx = 3;\n                    }\n                    else {\n                        idx = 4;\n                    }\n\n                    return { idx: idx + 1, col: this.colors[idx] };\n                }\n            };\n            scope.$watch('passwordToCheck', function (password) {\n                if (password) {\n                    var c = strength.getColor(strength.mesureStrength(password));\n                    iElement.removeClass('ng-hide');\n                    iElement.find('ul').children('li')\n                        .css({ 'background-color': '#DDD' })\n                        .slice(0, c.idx)\n                        .css({ 'background-color': c.col });\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('password', {\n            parent: 'account',\n            url: '/password',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.password'\n            },\n            views: {\n                'account-content@account': {\n                    templateUrl: 'app/account/password/password.html',\n                    controller: 'PasswordController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('password');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('PasswordController', PasswordController);\n\n    PasswordController.$inject = ['Auth', 'Principal','AlertService'];\n\n    function PasswordController (Auth, Principal,AlertService) {\n        var vm = this;\n\n        vm.changePassword = changePassword;\n\n        Principal.identity().then(function(account) {\n            vm.account = account;\n        });\n\n        function changePassword () {\n            Auth.changePassword(vm.password).then(function () {\n                AlertService.success(\"OK !\")\n            }).catch(function () {\n                AlertService.error(\"Error !\")\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('activate', {\n            parent: 'account',\n            url: '/activate?key',\n            data: {\n                authorities: [],\n                pageTitle: 'activate.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/activate/activate.html',\n                    controller: 'ActivationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('activate');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .controller('ActivationController', ActivationController);\n\n    ActivationController.$inject = ['$stateParams', 'Auth', 'LoginService'];\n\n    function ActivationController ($stateParams, Auth, LoginService) {\n        var vm = this;\n\n        Auth.activateAccount({key: $stateParams.key}).then(function () {\n            vm.error = null;\n            vm.success = 'OK';\n        }).catch(function () {\n            vm.success = null;\n            vm.error = 'ERROR';\n        });\n\n        vm.login = LoginService.open;\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('gsiteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('account', {\n            abstract: true,\n            parent: 'app',\n            views: {\n                'accountbar@account': {\n                    templateUrl: 'app/layouts/accountbar/accountbar.html',\n                    controller: 'AccountBarController',\n                    controllerAs: 'vm'\n                },\n                'content@': {\n                    templateUrl: 'app/account/account.html',\n                }\n            }\n        });\n    }\n})();\n(function(){angular.module('gsiteApp').run(['$templateCache', function($templateCache) {$templateCache.put('app/account/account.html','<div class=\"m-common-toolbar\"></div><div ui-view=\"accountbar\" ng-cloak></div><div ui-view=\"account-content\" ng-cloak></div>');\n$templateCache.put('app/admin/admin.html','<div class=\"m-common-toolbar\"></div><div ui-view=\"adminbar\" ng-cloak></div><div class=\"m-common-panel md-whiteframe-1dp\" layout-padding layout=\"column\"><div ui-view=\"admin-content\" ng-cloak></div></div>');\n$templateCache.put('app/home/home.html','<main class=\"m-home\"><section id=\"home\" layout=\"row\" flex><div layout=\"row\" layout-fill ng-cloak><img hide-gt-xs class=\"m-home-bg\" src=\"/content/images/bg/bg-default.jpg\"></div></section><section id=\"description\" layout=\"row\" flex><div class=\"m-home-panel\"><div hide-xs flex layout=\"column\" layout-align=\"center center\"><b class=\"m-home-panel-title\" data-translate=\"home.title\">GSite</b> <b data-translate=\"home.subtitle\">Gifts for someone</b></div><p class=\"md-subhead\" data-translate=\"home.des\">Let\\'s create awsome websites with GSite. You can give your websites to someone as the gifts. We support free web templates.</p><div layout-gt-sm=\"column\" layout-align-gt-sm=\"center center\"><md-button class=\"md-raised md-primary\" ui-sref=\"template\" data-translate=\"home.ftemplate\">Find templates</md-button></div></div></section><section id=\"templates\"><div class=\"m-home-sec\"><p class=\"md-title\" align=\"center\" data-translate=\"home.template\">Most Popular Templates<md-icon style=\"color:white\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">keyboard_arrow_down</md-icon></p></div><div layout-xs=\"column\" layout-gt-xs=\"row\" layout-align-xs=\"center center\"><md-card ng-repeat=\"item in vm.webTemplates\" flex><img ng-src=\"{{item.tempLink ? item.tempLink : \\'content/images/temp/temp-default.jpg\\'}}\" class=\"md-card-image\" alt=\"Washed Out\"><md-card-title><md-card-title-text><span class=\"md-headline\">{{item.name}}</span></md-card-title-text></md-card-title><md-card-content><span><b class=\"blue\">{{item.price == 0 ? \\'Free\\' : item.price + \\'.0$\\'}}!</b> {{item.des}}</span></md-card-content><div class=\"m-card-actions\" layout=\"row\" layout-align=\"start center\"><md-button ui-sref=\"{{item.source}}\" class=\"md-icon-button md-raised md-primary\"><i class=\"material-icons\">remove_red_eye</i></md-button><md-button ui-sref=\"my-website.new({template: item.source})\" class=\"md-icon-button md-raised md-primary\"><i class=\"material-icons\">add</i></md-button></div></md-card></div></section><section id=\"features\" layout=\"column\" flex><div class=\"m-home-sec\"><p class=\"md-title\" align=\"center\" data-translate=\"home.feature.title\">Awsome Features<md-icon style=\"color:white\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">keyboard_arrow_down</md-icon></p></div><div layout=\"column\" layout-align-xs=\"center\"><md-content layout-xs=\"column\" layout-gt-xs=\"row\" class=\"m-features md-whiteframe-1dp\"><div flex layout=\"row\" layout-gt-xs=\"column\" class=\"m-home-feature-list\"><div flex><md-list-item><i class=\"material-icons\">check_circle</i> &nbsp<p class=\"md-subhead\" data-translate=\"home.feature.template\">View templates</p></md-list-item></div><div flex><md-list-item><i class=\"material-icons\">check_circle</i> &nbsp<p class=\"md-subhead\" data-translate=\"home.feature.web\">Build website</p></md-list-item></div></div><div flex layout=\"row\" layout-gt-xs=\"column\" class=\"m-home-feature-list\"><div flex><md-list-item><i class=\"material-icons\">check_circle</i> &nbsp<p class=\"md-subhead\" data-translate=\"home.feature.share\">Share website</p></md-list-item></div><div flex><md-list-item><i class=\"material-icons\">check_circle</i> &nbsp<p class=\"md-subhead\" data-translate=\"home.feature.custom\">Customization</p></md-list-item></div></div><div flex layout=\"row\" layout-gt-xs=\"column\" class=\"m-home-feature-list\"><div flex><md-list-item><i class=\"material-icons\">check_circle</i> &nbsp<p class=\"md-subhead\" data-translate=\"home.feature.domain\">Sub domain</p></md-list-item></div><div flex><md-list-item><i class=\"material-icons\">check_circle</i> &nbsp<p class=\"md-subhead\" data-translate=\"home.feature.manage\">Management</p></md-list-item></div></div></md-content></div></section></main>');\n$templateCache.put('app/manager/manager.html','<div class=\"m-common-toolbar\"></div><div ui-view=\"managerbar\" ng-cloak></div><div class=\"m-common-panel md-whiteframe-1dp\" layout-padding layout=\"column\"><div ui-view=\"manager-content\" ng-cloak></div></div>');\n$templateCache.put('app/templates/templates.html','<div class=\"m-common-toolbar\"></div><section id=\"templates\" class=\"m-templates\"><div layout=\"row\"><md-input-container md-whiteframe=\"1\" class=\"m-templates-sort-btn\"><label data-translate=\"global.sortby\">Sort by</label><md-select ng-model=\"vm.currentSort\" ng-change=\"vm.changeSortType()\"><md-option value=\"name\" data-translate=\"global.name\">name</md-option><md-option value=\"date\" data-translate=\"global.date\">date</md-option></md-select></md-input-container><span flex></span><md-input-container md-whiteframe=\"1\" class=\"m-templates-search-btn\"><label data-translate=\"global.searchby\">Search by</label><md-select ng-model=\"vm.currentSearch\" ng-change=\"vm.changeSearchType()\"><md-option value=\"name\" data-translate=\"global.name\">name</md-option><md-option value=\"des\" data-translate=\"global.des\">description</md-option></md-select></md-input-container></div><div layout=\"column\" layout-align=\"center center\"><md-card class=\"m-templates-card\" ng-repeat=\"item in vm.webTemplates\" layout-gt-sm=\"row\"><img flex ng-src=\"{{item.tempLink ? item.tempLink : \\'content/images/temp/temp-default.jpg\\'}}\" class=\"md-card-image\" alt=\"Washed Out\"><div flex><md-card-title><md-card-title-text><span class=\"md-headline\">{{item.name}}</span></md-card-title-text></md-card-title><md-card-content><span><b class=\"blue\">{{item.price == 0 ? \\'Free !\\' : item.price + \\'.0\\'}}$</b></span></md-card-content><div class=\"m-card-actions\" layout=\"row\" layout-align=\"start center\"><md-button ui-sref=\"{{item.source}}\" class=\"md-icon-button md-raised md-primary\"><i class=\"material-icons\">remove_red_eye</i></md-button><md-button class=\"md-icon-button md-raised md-primary\"><i ui-sref=\"my-website.new({template: item.source})\" class=\"material-icons\">add</i></md-button></div></div></md-card></div></section>');\n$templateCache.put('app/account/activate/activate.html','<div class=\"m-common-toolbar\"></div><div class=\"m-common-panel md-whiteframe-1dp\" layout=\"column\" layout-align=\"center center\"><h1 data-translate=\"activate.title\">Activation</h1><div ng-show=\"vm.success\" translate-compile layout=\"column\" layout-align=\"center center\"><p data-translate=\"activate.messages.success.title\">Your user has been activated successfully.</p><p><strong data-translate=\"activate.messages.success.subtitle\">Please sign in</strong></p><md-button class=\"md-raised md-primary\" aria-label=\"login\" data-translate=\"activate.login\">Login</md-button></div><div ng-show=\"vm.error\" layout=\"column\" layout-align=\"center center\"><p class=\"error-text\" data-translate=\"activate.messages.error.title\">Your user could not be activated!</p><p><strong data-translate=\"activate.messages.error.subtitle\">Please sign up</strong></p><md-button class=\"md-raised md-warn\" aria-label=\"Sign up\" data-translate=\"activate.signup\">Sign up</md-button></div></div>');\n$templateCache.put('app/account/password/password.html','<form class=\"m-settings\" name=\"Form\" layout-padding layout-gt-xs=\"row\" layout-align-gt-xs=\"center center\" ng-submit=\"vm.changePassword()\"><md-content class=\"md-no-momentum m-settings-panel\" md-whiteframe=\"1\"><h2 data-translate=\"password.title\">Password</h2><md-input-container class=\"md-icon-float md-block\"><md-icon style=\"color:black\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">lock</md-icon><label data-translate=\"password.newPassword\">New password</label><input type=\"password\" name=\"password\" ng-model=\"vm.password\" required=\"\" minlength=\"8\"><div ng-messages=\"Form.password.$error\"><div ng-message-exp=\"[\\'required\\', \\'minlength\\']\" data-translate=\"global.form.error.password\">This is required and more than 8 characters</div></div></md-input-container><p></p><md-input-container class=\"md-icon-float md-block\"><md-icon style=\"color:black\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">verified_user</md-icon><label data-translate=\"password.confirmPassword\">Confirm password</label><input type=\"password\" name=\"confirmpassword\" ng-model=\"vm.confirmPassword\" match-password=\"password\" required><div ng-messages=\"Form.confirmpassword.$error\"><div ng-message-exp=\"[\\'required\\',\\'passwordMatch\\']\" data-translate=\"global.form.error.confirmpassword\">This is required and match with the password</div></div></md-input-container><div layout=\"row\"><button ng-disabled=\"!Form.$valid\" type=\"submit\" class=\"md-button md-raised md-primary\" data-translate=\"global.form.save\">Save</button><md-button class=\"md-raised\" data-translate=\"global.form.cancel\">Cancel</md-button></div></md-content></form>');\n$templateCache.put('app/account/register/register.html','<div class=\"m-common-toolbar\"></div><div class=\"m-register\" layout-gt-xs=\"row\" layout-align-gt-xs=\"center center\"><form name=\"Form\" layout-padding ng-submit=\"vm.register()\"><md-content class=\"md-no-momentum white-bg\" md-whiteframe=\"1\"><span ng-show=\"vm.errorUserExists\" class=\"error-text\" data-translate=\"global.form.error.register.username\">Username is already existed!</span> <span ng-show=\"vm.errorEmailExists\" class=\"error-text\" data-translate=\"global.form.error.register.email\">Email is already existed!</span><div ng-show=\"vm.success\" layout=\"column\"><strong data-translate=\"register.messages.success.title\">Sign up successfully!</strong> <span data-translate=\"register.messages.success.subtitle\">Please check your email for confirmation</span></div><h2 data-translate=\"global.form.signup\">Register</h2><div layout-gt-sm=\"row\" ng-show=\"!vm.success\"><div flex layout-padding><md-input-container class=\"md-icon-float md-block\"><md-icon style=\"color:black\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">person</md-icon><input id=\"login\" name=\"username\" ng-model=\"vm.registerAccount.login\" type=\"text\" md-autofocus placeholder=\"{{\\'global.form.username\\' | translate}}\" minlength=\"6\" ng-pattern=\"/^[a-zA-Z0-9]*$/\" required><div ng-messages=\"Form.username.$error\"><div ng-message-exp=\"[\\'required\\', \\'minlength\\',\\'pattern\\']\" data-translate=\"global.form.error.username\">More than 6 characters, no space</div></div></md-input-container><md-input-container class=\"md-icon-float md-block\"><md-icon style=\"color:black\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">email</md-icon><input ng-model=\"vm.registerAccount.email\" type=\"email\" name=\"email\" ng-pattern=\"/^.+@.+\\\\..+$/\" placeholder=\"{{\\'global.form.email\\' | translate}}\" required><div ng-messages=\"Form.email.$error\"><div ng-message-exp=\"[\\'required\\', \\'pattern\\']\" data-translate=\"global.form.error.email\">This Must be valid email</div></div></md-input-container></div><div flex layout-padding><md-input-container class=\"md-icon-float md-block\"><md-icon style=\"color:black\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">lock</md-icon><input type=\"password\" name=\"password\" ng-model=\"vm.registerAccount.password\" placeholder=\"{{\\'global.form.password\\' | translate}}\" required=\"\" minlength=\"8\"><div ng-messages=\"Form.password.$error\"><div ng-message-exp=\"[\\'required\\', \\'minlength\\']\" data-translate=\"global.form.error.password\">This is required and more than 8 characters</div></div></md-input-container><md-input-container class=\"md-icon-float md-block\"><md-icon style=\"color:black\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">verified_user</md-icon><input type=\"password\" name=\"confirmpassword\" ng-model=\"vm.confirmPassword\" placeholder=\"{{\\'global.form.confirmpassword\\' | translate}}\" match-password=\"password\" required><div ng-messages=\"Form.confirmpassword.$error\"><div ng-message-exp=\"[\\'required\\',\\'passwordMatch\\']\" data-translate=\"global.form.error.confirmpassword\">This is required and match with the password</div></div></md-input-container></div></div><div layout=\"row\"><button type=\"submit\" ng-hide=\"vm.success\" ng-disabled=\"!Form.$valid\" class=\"md-button md-raised md-primary\" data-translate=\"global.form.signup\">Sign up</button><md-button ng-click=\"vm.login()\" class=\"md-raised md-primary\" data-translate=\"global.form.login\">Login</md-button></div></md-content></form></div>');\n$templateCache.put('app/account/sessions/sessions.html','<div class=\"m-common-toolbar\"></div><div class=\"m-common-panel md-whiteframe-1dp\"><h2 data-translate=\"sessions.title\" translate-values=\"{username: \\'{{vm.account.login}}\\'}\">Active sessions for {{vm.account.login}}</h2><table layout-fill><thead><tr><th>Invalidate</th><th data-translate=\"sessions.table.ipaddress\">IP Address</th><th hide-xs data-translate=\"sessions.table.useragent\">User agent</th><th data-translate=\"sessions.table.date\">Date</th></tr></thead><tbody><tr ng-repeat=\"session in vm.sessions\"><td><md-button class=\"md-raised md-warn\" aria-label=\"invalid\" ng-click=\"\">Invalid</md-button></td><td>{{session.ipAddress}}</td><td hide-xs>{{session.userAgent}}</td><td>{{session.tokenDate | date:\\'longDate\\'}}</td></tr></tbody></table></div>');\n$templateCache.put('app/account/settings/settings.html','<form class=\"m-settings\" name=\"Form\" layout-padding layout-gt-xs=\"row\" layout-align-gt-xs=\"center center\" ng-submit=\"vm.save()\"><md-content class=\"md-no-momentum m-settings-panel\" layout-padding md-whiteframe=\"1\"><h2 data-translate=\"settings.title\">Basic information</h2><md-input-container class=\"md-icon-float md-block\"><md-icon style=\"color:black\" class=\"material-icons\">person</md-icon><label data-translate=\"global.form.firstName\">First name</label><input name=\"firstName\" ng-model=\"vm.settingsAccount.firstName\" type=\"text\" minlength=\"3\" ng-required=\"true\"><div ng-messages=\"Form.firstName.$error\"><div ng-message-exp=\"[\\'required\\', \\'minlength\\']\" data-translate=\"global.form.error.username\">This is required and more than 3 characters</div></div></md-input-container><md-input-container class=\"md-icon-float md-block\"><md-icon style=\"color:black\" class=\"material-icons\">person</md-icon><label data-translate=\"global.form.lastName\">Last name</label><input name=\"lastName\" ng-model=\"vm.settingsAccount.lastName\" type=\"text\" minlength=\"3\" ng-required=\"true\"><div ng-messages=\"Form.lastName.$error\"><div ng-message-exp=\"[\\'required\\', \\'minlength\\']\" data-translate=\"global.form.error.username\">This is required and more than 3 characters</div></div></md-input-container><md-input-container class=\"md-icon-float md-block\"><md-icon style=\"color:black\" class=\"material-icons\">email</md-icon><lable data-translate=\"global.form.email\">Email</lable><input ng-model=\"vm.settingsAccount.email\" name=\"email\" type=\"email\" ng-required=\"true\" aria-label=\"Email\" ng-pattern=\"/^.+@.+\\\\..+$/\"><div ng-messages=\"Form.email.$error\"><div ng-message-exp=\"[\\'required\\', \\'pattern\\']\" data-translate=\"global.form.error.email\">This Tis required and must be valid email</div></div></md-input-container><md-input-container><md-icon style=\"color:black\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">language</md-icon><label data-translate=\"global.form.language\">Language</label><md-select ng-model=\"vm.settingsAccount.langKey\" name=\"lang\" required><md-option value=\"en\">English</md-option><md-option value=\"vi\">Vietnamese</md-option></md-select><div ng-messages=\"Form.lang.$error\"><div ng-message=\"required\">This is required.</div></div><p></p></md-input-container><div layout=\"row\"><button ng-disabled=\"!Form.$valid\" class=\"md-button md-raised md-primary\" data-translate=\"global.form.save\">Save</button><md-button class=\"md-raised\" ng-click=\"vm.cancel()\" data-translate=\"global.form.cancel\">Cancel</md-button></div></md-content></form>');\n$templateCache.put('app/account/social/social-register.html','<div class=\"m-common-toolbar\"></div><div class=\"m-common-panel md-whiteframe-1dp\" layout=\"column\" layout-align=\"center center\"><h2 data-translate=\"social.register.title\" translate-values=\"{ label: vm.providerLabel }\">Registration with</h2><div ng-show=\"vm.success\" layout=\"column\" layout-align=\"center center\"><div data-translate=\"social.register.messages.success\" layout=\"column\" layout-align=\"center center\"><p><strong>Registration saved!</strong></p><p>Please check your email for confirmation.</p></div><jh-social ng-provider=\"{{ vm.provider }}\"></jh-social></div><div ng-show=\"vm.error\" layout=\"column\" layout-align=\"center center\"><div ng-show=\"vm.error\"><strong class=\"error-text\" data-translate=\"social.register.messages.error.fail\">Registration failed! Please try again later</strong><p></p><div layout=\"row\" layout-fill layout-align=\"center center\"><button type=\"button\" class=\"m-common-google-btn\" md-ink-ripple></button> <button type=\"button\" class=\"m-common-facebook-btn\" md-ink-ripple></button> <button type=\"button\" class=\"m-common-twitter-btn\" md-ink-ripple></button></div></div></div></div>');\n$templateCache.put('app/admin/audits/audits.html','<h3 data-translate=\"audits.title\">Audits</h3><p data-translate=\"audits.filter.title\">Filter by date</p><div layout-gt-xs=\"row\"><md-input-container><label>From</label><md-datepicker type=\"date\" name=\"start\" ng-model=\"vm.fromDate\" ng-change=\"vm.onChangeDate()\" required></md-datepicker></md-input-container><md-input-container><label>To</label><md-datepicker type=\"date\" name=\"end\" ng-model=\"vm.toDate \" ng-change=\"vm.onChangeDate() \" required></md-datepicker></md-input-container></div><div layout-fill layout=\"column\"><md-content><table layout-fill><thead><tr><th ng-click=\"predicate=\\'timestamp\\' ; reverse=!reverse \"><span data-translate=\"audits.table.header.date \">Date</span></th><th ng-click=\"predicate=\\'principal\\' ; reverse=!reverse \"><span data-translate=\"audits.table.header.principal \">User</span></th><th ng-click=\"predicate=\\'type\\' ; reverse=!reverse \"><span data-translate=\"audits.table.header.status \">State</span></th><th ng-click=\"predicate=\\'data.message\\' ; reverse=!reverse \"><span data-translate=\"audits.table.header.data \">Extra data</span></th></tr></thead><tr ng-repeat=\"audit in vm.audits | filter:filter | orderBy:predicate:reverse \" ng-hide=\"audit.filtered \"><td><span>{{audit.timestamp| date:\\'medium\\'}}</span></td><td><small>{{audit.principal}}</small></td><td>{{audit.type}}</td><td><span ng-show=\"audit.data.message \">{{audit.data.message}}</span> <span ng-show=\"audit.data.remoteAddress \"><span data-translate=\"audits.table.data.remoteAddress \">Remote Address</span> {{audit.data.remoteAddress}}</span></td></tr></table></md-content></div>');\n$templateCache.put('app/admin/configuration/configuration.html','<h2 data-translate=\"configuration.title\">Configuration</h2><span data-translate=\"configuration.filter\">Filter</span><div class=\"m-content\"><md-input-container class=\"md-icon-float md-block\"><label>Enter filter</label><md-icon class=\"material-icons\">spellcheck</md-icon><input type=\"text\" name=\"filter\" ng-model=\"filter\"></md-input-container></div><label ng-hide=\"filteredConfig.length == 0\">Spring configuration</label><div layout-fill layout=\"column\"><md-content><table layout-fill style=\"table-layout:fixed\" ng-hide=\"filteredConfig.length == 0\"><thead><tr><th ng-click=\"predicate = \\'prefix\\'; reverse=!reverse\" class=\"col-sm-4\"><span data-translate=\"configuration.table.prefix\">Prefix</span></th><th hide-xs data-translate=\"configuration.table.properties\" class=\"col-sm-8\">Properties</th></tr></thead><tr ng-repeat=\"entry in filtered = (vm.configuration | filter:filter | orderBy:predicate:reverse)\"><td><span>{{entry.prefix}}</span></td><td hide-xs><div class=\"row\" ng-repeat=\"(key, value) in entry.properties\"><div class=\"col-md-4\">{{key}}</div><div class=\"col-md-8\"><span class=\"pull-right label label-default break\">{{value}}</span></div></div></td></tr></table><div ng-repeat=\"(key, value) in vm.allConfiguration\"><label ng-hide=\"filtered.length == 0\"><span>{{key}}</span></label><table layout-fill style=\"table-layout:fixed\" ng-hide=\"filtered.length == 0\"><thead><tr><th class=\"col-sm-4\">Property</th><th hide-xs class=\"col-sm-8\">Value</th></tr></thead><tbody><tr ng-repeat=\"item in filtered = (value | filter:filter)\"><td class=\"break\">{{item.key}}</td><td hide-xs class=\"break\"><span class=\"pull-right label label-default break\">{{item.val}}</span></td></tr></tbody></table></div></md-content></div>');\n$templateCache.put('app/admin/docs/docs.html','<iframe src=\"swagger-ui/index.html\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\" width=\"100%\" height=\"900\" scrolling=\"auto\" target=\"_top\" title=\"Swagger UI\"></iframe>');\n$templateCache.put('app/admin/health/health.html','<div layout=\"row\" layout-align=\"start center\"><h2 data-translate=\"health.title\">Health Checks</h2><md-button class=\"md-icon-button md-raised md-primary\" ng-click=\"vm.refresh()\"><i class=\"material-icons\">refresh</i></md-button></div><table id=\"healthCheck\" layout-fill><thead><tr><th class=\"col-md-7\" data-translate=\"health.table.service\">Service Name</th><th class=\"col-md-2 text-center\" data-translate=\"health.table.status\">Status</th><th class=\"col-md-2 text-center\" data-translate=\"health.details.details\">Details</th></tr></thead><tbody><tr ng-repeat=\"health in vm.healthData\"><td>{{\\'health.indicator.\\' + vm.baseName(health.name) | translate}} {{vm.subSystemName(health.name)}}</td><td class=\"text-center\"><span ng-class=\"vm.getLabelClass(health.status)\">{{\\'health.status.\\' + health.status | translate}}</span></td><td class=\"text-center\"><md-button aria-label=\"button-label\" class=\"md-icon-button md-primary\" ng-click=\"vm.showHealth(health)\" ng-show=\"health.details || health.error\"><i class=\"material-icons\">remove_red_eye</i></md-button></td></tr></tbody></table>');\n$templateCache.put('app/admin/health/health.modal.html','<div layout=\"row\"><div layout-padding><strong>Properties</strong></div><span flex></span><md-button class=\"md-icon-button\" ng-click=\"vm.cancel()\"><i class=\"material-icons\">close</i></md-button></div><div layout-padding><div ng-show=\"vm.currentHealth.details\"><table layout-fill><thead><tr><th data-translate=\"health.details.name\">Name</th><th data-translate=\"health.details.value\">Value</th></tr></thead><tbody><tr ng-repeat=\"(k,v) in vm.currentHealth.details\"><td>{{k}}</td><td>{{v}}</td></tr></tbody></table></div><div ng-show=\"vm.currentHealth.error\"><h4 data-translate=\"health.details.error\">Error</h4><pre>{{vm.currentHealth.error}}</pre></div></div>');\n$templateCache.put('app/admin/logs/logs.html','<h2 data-translate=\"logs.title\">Logs</h2><span data-translate=\"logs.nbloggers\" translate-values=\"{total: \\'{{ vm.loggers.length }}\\'}\">There are {{ vm.loggers.length }} loggers.</span><p data-translate=\"logs.filter\">Filter</p><div class=\"m-content\"><md-input-container class=\"md-icon-float md-block\"><label>Enter filter</label><md-icon class=\"material-icons\">spellcheck</md-icon><input type=\"text\" name=\"filter\" ng-model=\"filter\"></md-input-container></div><div layout-fill layout=\"column\"><md-content><table layout-fill><thead><tr title=\"click to order\"><th ng-click=\"predicate = \\'level\\'; reverse=!reverse\"><span data-translate=\"logs.table.level\">Level</span></th><th ng-click=\"predicate = \\'name\\'; reverse=!reverse\"><span data-translate=\"logs.table.name\">Name</span></th></tr></thead><tbody><tr ng-repeat=\"logger in vm.loggers | filter:filter | orderBy:predicate:reverse\"><td><div layout=\"row\" layout-align=\"center center\"><button class=\"m-normal-text\" hide-xs hide-sm ng-click=\"vm.changeLevel(logger.name, \\'TRACE\\')\" ng-class=\"(logger.level==\\'TRACE\\') ? \\'bg-danger\\' : \\'bg-default\\'\">TRACE</button> <button ng-click=\"vm.changeLevel(logger.name, \\'DEBUG\\')\" ng-class=\"(logger.level==\\'DEBUG\\') ? \\'bg-warning\\' : \\'bg-default\\'\">DEBUG</button> <button hide-xs ng-click=\"vm.changeLevel(logger.name, \\'INFO\\')\" ng-class=\"(logger.level==\\'INFO\\') ? \\'bg-info\\' : \\'bg-default\\'\">INFO</button> <button hide-xs hide-sm ng-click=\"vm.changeLevel(logger.name, \\'WARN\\')\" ng-class=\"(logger.level==\\'WARN\\') ? \\'bg-success\\' : \\'bg-default\\'\">WARN</button> <button ng-click=\"vm.changeLevel(logger.name, \\'ERROR\\')\" ng-class=\"(logger.level==\\'ERROR\\') ? \\'bg-primary\\' : \\'bg-default\\'\">ERROR</button></div></td><td><small>{{logger.name | characters:140}}</small></td></tr></tbody></table></md-content></div>');\n$templateCache.put('app/admin/metrics/metrics.html','<div class=\"m-content\"><div layout=\"row\" layout-align=\"start center\"><h2 data-translate=\"metrics.title\">Application Metrics</h2><md-button class=\"md-icon-button md-raised md-primary\" ng-click=\"vm.refresh()\"><i class=\"material-icons\">refresh</i></md-button></div><div><div><h3 data-translate=\"metrics.jvm.title\">JVM Metrics</h3><div layout-gt-sm=\"row\"><div flex><b data-translate=\"metrics.jvm.memory.title\">Memory</b><div class=\"m-content\"><p><span data-translate=\"metrics.jvm.memory.total\">Total Memory</span> ({{vm.metrics.gauges[\\'jvm.memory.total.used\\'].value / 1000000 | number:0}}M / {{vm.metrics.gauges[\\'jvm.memory.total.max\\'].value / 1000000 | number:0}}M)</p><span>{{vm.metrics.gauges[\\'jvm.memory.total.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.total.max\\'].value | number:0}}%</span><md-progress-linear md-mode=\"determinate\" value=\"{{vm.metrics.gauges[\\'jvm.memory.total.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.total.max\\'].value  | number:0}}\"></md-progress-linear><p><span data-translate=\"metrics.jvm.memory.heap\">Heap Memory</span> ({{vm.metrics.gauges[\\'jvm.memory.heap.used\\'].value / 1000000 | number:0}}M / {{vm.metrics.gauges[\\'jvm.memory.heap.max\\'].value / 1000000 | number:0}}M)</p><span>{{vm.metrics.gauges[\\'jvm.memory.heap.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.heap.max\\'].value | number:0}}%</span><md-progress-linear value=\"{{vm.metrics.gauges[\\'jvm.memory.heap.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.heap.max\\'].value  | number:0}}\"></md-progress-linear><p><span data-translate=\"metrics.jvm.memory.nonheap\">Non-Heap Memory</span> ({{vm.metrics.gauges[\\'jvm.memory.non-heap.used\\'].value / 1000000 | number:0}}M / {{vm.metrics.gauges[\\'jvm.memory.non-heap.committed\\'].value / 1000000 | number:0}}M)</p><span>{{vm.metrics.gauges[\\'jvm.memory.non-heap.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.non-heap.committed\\'].value | number:0}}%</span><md-progress-linear md-mode=\"determinate\" value=\"{{vm.metrics.gauges[\\'jvm.memory.non-heap.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.non-heap.committed\\'].value  | number:0}}\"></md-progress-linear><p></p></div></div><div flex><b data-translate=\"metrics.jvm.threads.title\">Threads</b> (Total: {{vm.metrics.gauges[\\'jvm.threads.count\\'].value}})<div class=\"m-content\"><p><span data-translate=\"metrics.jvm.threads.runnable\">Runnable</span> {{vm.metrics.gauges[\\'jvm.threads.runnable.count\\'].value}}</p><span>{{vm.metrics.gauges[\\'jvm.threads.runnable.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span><md-progress-linear md-mode=\"determinate\" class=\"md-warn\" value=\"{{vm.metrics.gauges[\\'jvm.threads.runnable.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value  | number:0}}\"></md-progress-linear><p><span data-translate=\"metrics.jvm.threads.timedwaiting\">Timed Waiting</span> ({{vm.metrics.gauges[\\'jvm.threads.timed_waiting.count\\'].value}})</p><span>{{vm.metrics.gauges[\\'jvm.threads.timed_waiting.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span><md-progress-linear value=\"{{vm.metrics.gauges[\\'jvm.threads.timed_waiting.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value  | number:0}}\"></md-progress-linear><p><span data-translate=\"metrics.jvm.threads.waiting\">Waiting</span> ({{vm.metrics.gauges[\\'jvm.threads.waiting.count\\'].value}})</p><span>{{vm.metrics.gauges[\\'jvm.threads.waiting.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span><md-progress-linear class=\"md-warn\" value=\"{{vm.metrics.gauges[\\'jvm.threads.waiting.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value  | number:0}}\"></md-progress-linear><p><span data-translate=\"metrics.jvm.threads.blocked\">Blocked</span> ({{vm.metrics.gauges[\\'jvm.threads.blocked.count\\'].value}})</p><span>{{vm.metrics.gauges[\\'jvm.threads.blocked.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span><md-progress-linear value=\"{{vm.metrics.gauges[\\'jvm.threads.blocked.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value  | number:0}}\"></md-progress-linear><p></p></div></div><div flex><b data-translate=\"metrics.jvm.gc.title\">Garbage collections</b><div class=\"m-content\"><div layout=\"row\"><p flex data-translate=\"metrics.jvm.gc.marksweepcount\">Mark Sweep count</p><p flex><strong>{{vm.metrics.gauges[\\'jvm.garbage.PS-MarkSweep.count\\'].value}}</strong></p></div><div layout=\"row\"><p flex data-translate=\"metrics.jvm.gc.marksweeptime\">Mark Sweep time</p><p flex><strong>{{vm.metrics.gauges[\\'jvm.garbage.PS-MarkSweep.time\\'].value}}</strong> ms</p></div><div layout=\"row\"><p flex data-translate=\"metrics.jvm.gc.scavengecount\">Scavenge count</p><p flex><strong>{{vm.metrics.gauges[\\'jvm.garbage.PS-Scavenge.count\\'].value}}</strong></p></div><div layout=\"row\"><p flex data-translate=\"metrics.jvm.gc.scavengetime\">Scavenge time</p><p flex><strong>{{vm.metrics.gauges[\\'jvm.garbage.PS-Scavenge.time\\'].value}}</strong> ms</p></div></div></div></div></div><div><h3 data-translate=\"metrics.jvm.http.title\">HTTP requests (events per second)</h3><p><span data-translate=\"metrics.jvm.http.active\">Active requests</span> <b>{{vm.metrics.counters[\\'com.codahale.metrics.servlet.InstrumentedFilter.activeRequests\\'].count | number:0}}</b> - <span data-translate=\"metrics.jvm.http.total\">Total requests</span> <b>{{vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count | number:0}}</b></p><div layout-gt-sm=\"row\"><table layout-fill><thead><tr><th data-translate=\"metrics.jvm.http.table.code\">Code</th><th data-translate=\"metrics.jvm.http.table.count\">Count</th><th class=\"text-right\" data-translate=\"metrics.jvm.http.table.mean\">Mean</th><th hide-xs class=\"text-right\"><span data-translate=\"metrics.jvm.http.table.average\">Average</span> (1 min)</th><th hide-xs class=\"text-right\"><span data-translate=\"metrics.jvm.http.table.average\">Average</span> (5 min)</th><th hide-xs hide-sm class=\"text-right\"><span data-translate=\"metrics.jvm.http.table.average\">Average</span> (15 min)</th></tr></thead><tbody><tr><td data-translate=\"metrics.jvm.http.code.ok\">OK</td><td><span>{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].count}}</span><md-progress-linear value=\"{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].count * 100 / vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count | number:0}}\"></md-progress-linear></td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].mean_rate | number:2}}</td><td hide-xs class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].m1_rate | number:2}}</td><td hide-xs class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].m5_rate | number:2}}</td><td hide-xs hide-sm class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].m15_rate | number:2}}</td></tr><tr><td data-translate=\"metrics.jvm.http.code.notfound\">Not Found</td><td><span>{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].count}}</span><md-progress-linear value=\"{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].count * 100 / vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count | number:0 }}\"></md-progress-linear></td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].mean_rate | number:2}}</td><td hide-xs class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].m1_rate | number:2}}</td><td hide-xs class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].m5_rate | number:2}}</td><td hide-xs hide-sm class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].m15_rate | number:2}}</td></tr><tr><td data-translate=\"metrics.jvm.http.code.servererror\">Server error</td><td><span>{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].count}}</span><md-progress-linear value=\"{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].count * 100 / vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count | number:0}}\"></md-progress-linear></td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].mean_rate | number:2}}</td><td hide-xs class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].m1_rate | number:2}}</td><td hide-xs class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].m5_rate | number:2}}</td><td hide-xs hide-sm class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].m15_rate | number:2}}</td></tr></tbody></table></div></div><div><h3 data-translate=\"metrics.servicesstats.title\">Services statistics (millisecond)</h3><div><table layout-fill><thead><tr><th hide-xs data-translate=\"metrics.servicesstats.table.name\">Service name</th><th hide-xs class=\"text-right\" data-translate=\"metrics.servicesstats.table.count\">Count</th><th hide-xs class=\"text-right\" data-translate=\"metrics.servicesstats.table.mean\">Mean</th><th hide-xs class=\"text-right\" data-translate=\"metrics.servicesstats.table.min\">Min</th><th hide-xs hide-sm class=\"text-right\" data-translate=\"metrics.servicesstats.table.p50\">p50</th><th hide-xs hide-sm class=\"text-right\" data-translate=\"metrics.servicesstats.table.p75\">p75</th><th hide-xs hide-sm class=\"text-right\" data-translate=\"metrics.servicesstats.table.p95\">p95</th><th hide-xs hide-sm class=\"text-right\" data-translate=\"metrics.servicesstats.table.p99\">p99</th><th hide-xs hide-sm class=\"text-right\" data-translate=\"metrics.servicesstats.table.max\">Max</th></tr></thead><tbody><tr ng-repeat=\"(k, v) in vm.servicesStats\"><td>{{k.split(\\'.rest.\\')[1]}}</td><td hide-xs class=\"text-right\">{{v.count}}</td><td hide-xs class=\"text-right\">{{v.mean * 1000 | number:0}}</td><td hide-xs class=\"text-right\">{{v.min * 1000 | number:0}}</td><td hide-xs hide-sm class=\"text-right\">{{v.p50 * 1000 | number:0}}</td><td hide-xs hide-sm class=\"text-right\">{{v.p75 * 1000 | number:0}}</td><td hide-xs hide-sm class=\"text-right\">{{v.p95 * 1000 | number:0}}</td><td hide-xs hide-sm class=\"text-right\">{{v.p99 * 1000 | number:0}}</td><td hide-xs hide-sm class=\"text-right\">{{v.max * 1000 | number:0}}</td></tr></tbody></table></div></div><div><!--<h3 data-translate=\"metrics.datasource.title\" ng-show=\"vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value > 0\">DataSource statistics (time in millisecond)</h3>--><h3 data-translate=\"metrics.datasource.title\">DataSource statistics (millisecond)</h3><!--<div ng-show=\"vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value > 0\">--><div><table layout-fill><thead><tr><th><span data-translate=\"metrics.datasource.usage\">Usage</span> ({{vm.metrics.gauges[\\'HikariPool-1.pool.ActiveConnections\\'].value}} / {{vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value}})</th><th class=\"text-right\" data-translate=\"metrics.datasource.count\">Count</th><th class=\"text-right\" data-translate=\"metrics.datasource.mean\">Mean</th><th hide-xs class=\"text-right\" data-translate=\"metrics.datasource.min\">Min</th><th hide-xs class=\"text-right\" data-translate=\"metrics.datasource.p50\">p50</th><th hide-xs hide-sm class=\"text-right\" data-translate=\"metrics.datasource.p75\">p75</th><th hide-xs hide-sm class=\"text-right\" data-translate=\"metrics.datasource.p95\">p95</th><th hide-xs hide-sm class=\"text-right\" data-translate=\"metrics.datasource.p99\">p99</th><th hide-xs hide-sm class=\"text-right\" data-translate=\"metrics.datasource.max\">Max</th></tr></thead><tbody><tr><td><div class=\"progress progress-striped\"><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value\" value=\"vm.metrics.gauges[\\'HikariPool-1.pool.ActiveConnections\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'HikariPool-1.pool.ActiveConnections\\'].value * 100 / vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value | number:0}}%</span></uib-progressbar></div></td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].count}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].mean | number:2}}</td><td hide-xs class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].min | number:2}}</td><td hide-xs class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p50 | number:2}}</td><td hide-xs hide-sm class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p75 | number:2}}</td><td hide-xs hide-sm class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p95 | number:2}}</td><td hide-xs hide-sm class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p99 | number:2}}</td><td hide-xs hide-sm class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].max | number:2}}</td></tr></tbody></table></div></div></div></div>');\n$templateCache.put('app/admin/user-management/user-management-detail.html','<div><md-button ui-sref=\"user-management\" class=\"md-raised md-primary\" data-translate=\"global.form.back\">Back</md-button></div><div><div class=\"m-content\"><h2 data-translate=\"usermanage.info\">User infomation</h2><div layout-gt-xs=\"row\"><div flex><p><span data-translate=\"global.form.id\">ID</span> : <b>{{vm.user.id}}</b></p><p><span data-translate=\"global.form.login\">Login</span> : <b>{{vm.user.login}}</b></p><p><span data-translate=\"global.form.firstName\">First name</span> : <b>{{vm.user.firstName}}</b></p><p><span data-translate=\"global.form.lastName\">Last name</span> : <b>{{vm.user.lastName}}</b></p><p><span data-translate=\"global.form.email\">Email address</span> : <b>{{vm.user.email}}</b></p></div><div flex><p><span data-translate=\"usermanage.createdBy\">Created by</span> : <b>{{vm.user.createdBy}}</b></p><p><span data-translate=\"global.form.created\">Created date</span> : <b>{{vm.user.createdDate| date: \\'medium\\'}}</b></p><p><span data-translate=\"usermanage.modifiedBy\">Modified by</span> : <b>{{vm.user.lastModifiedBy}}</b></p><p><span data-translate=\"usermanage.modified\">Modified date</span> : <b>{{vm.user.lastModifiedDate | date:\\'medium\\'}}</b></p><div layout=\"row\" layout-align=\"start center\"><md-input-container><label data-translate=\"global.form.language\">Language</label><md-select ng-model=\"vm.user.langKey\" aria-label=\"Language\"><md-option value=\"en\" ng-click=\"vm.setLanguage(vm.user,\\'en\\')\" data-translate=\"global.menu.language.eng\">English</md-option><md-option value=\"vi\" ng-click=\"vm.setLanguage(vm.user,\\'vi\\')\" data-translate=\"global.menu.language.vie\">Vietnamese</md-option></md-select></md-input-container><md-switch class=\"md-primary\" ng-model=\"vm.user.activated\" aria-label=\"Activated\" ng-change=\"vm.setActivated(vm.user,vm.user.activated)\"><span data-translate=\"usermanage.activated\">Activated</span></md-switch></div></div></div><div layout=\"row\"><span data-translate=\"usermanage.authority\">Authorities</span> :<div layout=\"column\"><b ng-repeat=\"authority in vm.user.authorities\">&nbsp; {{authority}}</b></div></div></div><p></p></div><div layout=\"row\"><md-button ui-sref=\"user-management.edit({login: vm.user.login})\" class=\"md-raised md-primary\" data-translate=\"global.form.edit\">Edit</md-button><md-button ui-sref=\"user-management.delete({login: vm.user.login})\" class=\"md-raised md-warn\" data-translate=\"global.form.delete\">Delete</md-button></div>');\n$templateCache.put('app/admin/user-management/user-management-dialog.html','<div layout-padding><div layout-padding class=\"md-whiteframe-1dp\"><span class=\"error-text\" ng-show=\"vm.message\">{{vm.message}}</span><form name=\"Form\" layout=\"column\" ng-submit=\"vm.save()\"><div layout=\"row\"><md-input-container flex><label data-translate=\"global.form.username\">Username</label><input type=\"text\" name=\"username\" ng-minlength=\"4\" ng-model=\"vm.user.login\" ng-pattern=\"/^[a-zA-Z0-9]*$/\" required></md-input-container><md-input-container flex><label data-translate=\"global.form.password\">Password</label><input type=\"password\" name=\"password\" ng-minlength=\"4\" ng-model=\"vm.user.password\" required></md-input-container></div><div layout=\"row\"><md-input-container><label data-translate=\"global.form.firstName\">First Name</label><input type=\"text\" name=\"firstName\" ng-minlength=\"3\" ng-model=\"vm.user.firstName\" required></md-input-container><md-input-container><label data-translate=\"global.form.lastName\">Last Name</label><input type=\"text\" name=\"lastName\" ng-minlength=\"3\" ng-model=\"vm.user.lastName\" required></md-input-container></div><md-input-container><label data-translate=\"global.form.email\">Email</label><input type=\"email\" name=\"email\" ng-model=\"vm.user.email\" required></md-input-container><md-input-container layout=\"row\" layout-align=\"left center\"><div><label data-translate=\"usermanage.authority\">Profile</label><md-select ng-model=\"vm.choice\"><md-option ng-repeat=\"item in vm.authorities\" value=\"{{item}}\">{{item}}</md-option></md-select></div><div><button type=\"button\" ng-disabled=\"!Form.$valid\" aria-label=\"Add\" class=\"md-button md-raised md-primary md-icon-button\" ng-click=\"vm.choose()\"><md-icon class=\"material-icons\">add</md-icon></button></div></md-input-container><div layout=\"row\" layout-align=\"left center\" ng-repeat=\"item in vm.user.authorities\"><md-button aria-label=\"delete\" class=\"md-icon-button\" ng-click=\"vm.deleteChoice($index)\"><md-icon class=\"material-icons\">clear</md-icon></md-button><span class=\"md-subhead m-1-line\" flex>{{item}}</span></div><div layout=\"row\"><button type=\"submit\" ng-disabled=\"!Form.$valid\" class=\"md-button md-raised md-primary\" data-translate=\"global.form.save\">Save</button> <span flex></span><md-button ng-click=\"vm.closeDialog()\" class=\"md-raised right\" data-translate=\"global.form.cancel\">Cancel</md-button></div></form></div></div>');\n$templateCache.put('app/admin/user-management/user-management.html','<div layout=\"row\" layout-align=\"center center\"><div flex-xs=\"20\" flex=\"10\" flex-gt-md=\"20\"><md-button ui-sref=\"user-management.new\" class=\"md-icon-button md-raised md-primary\"><i class=\"material-icons\">add</i></md-button></div><b flex data-translate=\"global.form.email\">Email adrress </b><b flex-xs=\"25\" flex-sm=\"20\" flex=\"15\" data-translate=\"usermanage.activated\">Activated </b><b hide-xs flex=\"30\" data-translate=\"global.form.created\">Created</b></div><div ng-repeat=\"user in vm.users\" ng-hide=\"vm.currentAccount.login==user.login\"><md-divider></md-divider><div layout=\"row\" layout-align=\"center center\"><div class=\"m-item-actions\" flex-xs=\"20\" flex=\"10\" flex-gt-md=\"20\" layout=\"row\" layout-align=\"start center\"><md-button hide-xs hide-sm hide-md class=\"md-icon-button md-raised md-warn\" ui-sref=\"user-management.delete({login: user.login})\"><i class=\"material-icons\">delete</i></md-button><md-button hide-xs hide-sm hide-md class=\"md-icon-button md-raised md-primary\" ui-sref=\"user-management.edit({login: user.login})\"><i class=\"material-icons\">edit</i></md-button><md-button class=\"md-icon-button md-raised md-primary\" ui-sref=\"user-management-detail({login:user.login})\"><i class=\"material-icons\">remove_red_eye</i></md-button></div><span flex class=\"m-1-line\">{{user.email}}</span><md-switch flex-xs=\"25\" flex-sm=\"20\" flex=\"15\" class=\"md-primary\" ng-model=\"user.activated\" aria-label=\"Switch 1\" ng-change=\"vm.setActive(user,user.activated)\"></md-switch><span hide-xs flex=\"30\">{{user.createdDate | date:\\'medium\\'}}</span></div></div>');\n$templateCache.put('app/components/alert/alert.html','<md-toast class=\"m-toast\"><span class=\"md-toast-text\" flex>{{vm.msg}}</span></md-toast>');\n$templateCache.put('app/components/login/login.html','<!--Anonymous--><md-card ng-show=\"{{!vm.isAuthenticated()}}\" class=\"m-login-panel\"><div layout-padding><span ng-show=\"vm.authenticationError\" class=\"error-text\" data-translate=\"global.form.error.login\">Username or password is incorrect!</span></div><md-card-content><form name=\"Form\" layout=\"column\" ng-submit=\"vm.login($event)\"><md-input-container><label data-translate=\"global.form.username\">Username</label><input id=\"username\" type=\"text\" name=\"username\" ng-model=\"vm.username\" minlength=\"3\" md-autofocus required></md-input-container><md-input-container><label data-translate=\"login.form.password\">Password</label><input type=\"password\" name=\"password\" ng-model=\"vm.password\" required minlength=\"3\"></md-input-container><md-input-container><md-checkbox class=\"md-primary\" type=\"checkbox\" id=\"rememberMe\" ng-model=\"vm.rememberMe\" checked=\"checked\" aria-label=\"Finished?\"><span data-translate=\"login.form.rememberme\">Remember me</span></md-checkbox></md-input-container><div layout=\"column\" layout-align=\"center center\"><a class=\"md-caption\" href=\"\" ng-click=\"vm.requestResetPassword() || vm.closeLoginDialog()\" data-translate=\"login.form.forgot\">Did you forget your password?</a><br></div><div layout=\"row\"><button type=\"submit\" ng-disabled=\"!Form.$valid\" class=\"md-button md-raised md-primary\" data-translate=\"login.form.submit\">Login</button> <span flex></span><md-button ui-sref=\"register\" ng-click=\"vm.closeLoginDialog()\" class=\"md-raised md-primary right\" data-translate=\"login.form.register\">Register</md-button></div></form><div layout=\"row\" layout-align=\"center center\"><jh-social ng-provider=\"google\"></jh-social><jh-social ng-provider=\"facebook\"></jh-social><jh-social ng-provider=\"twitter\"></jh-social></div></md-card-content></md-card><md-card ng-show=\"{{vm.isAuthenticated()}}\"><md-toolbar><div class=\"md-toolbar-tools\"><span>{{vm.username}}</span></div></md-toolbar><md-card-content><div layout=\"row\" layout-fill layout-align=\"center\"><md-button ng-click=\"vm.logout()\" class=\"md-raised md-warn right\" data-translate=\"global.form.logout\">Log out</md-button></div></md-card-content></md-card>');\n$templateCache.put('app/customer/my-notification/my-notification-view.html','<div class=\"m-common-toolbar\"></div><div class=\"m-notifications-view\" layout-padding layout-gt-sm=\"row\" layout-align-gt-sm=\"center center\"><div class=\"m-common-panel\" md-whiteframe=\"1\"><div layout=\"row\"><md-button ui-sref=\"my-notification\" class=\"md-raised md-primary\">Back</md-button><md-button ui-sref=\"my-notification.delete({id: vm.notification.id})\" class=\"md-raised md-warn\">Delete</md-button></div><p class=\"md-title\">{{vm.notification.title}}</p><p class=\"md-subhead\">{{vm.notification.content}}</p><p></p></div></div>');\n$templateCache.put('app/customer/my-notification/my-notifications.html','<div class=\"m-common-toolbar\"></div><section id=\"notifications\"><div class=\"m-notifications\" layout-padding layout-gt-sm=\"row\" layout-align-gt-sm=\"center center\"><md-list class=\"m-common-panel\" md-whiteframe=\"1\"><md-list-item class=\"md-2-line white\" ng-click=\"null\" ng-repeat=\"item in vm.notifications\" ui-sref=\"my-notification.view({id: item.id})\"><div layout=\"row\" class=\"md-list-item-text\"><md-icon class=\"material-icons {{item.isRead ? \\'\\' : \\'red-active\\'}}\" flex=\"none\">{{item.isRead ? \\'notifications\\' : \\'notifications_active\\'}}</md-icon><div flex><p><span class=\"md-title\">{{item.title}}</span></p><p><span class=\"md-subhead m-1-line\">{{item.content}}</span></p></div></div><md-divider></md-divider></md-list-item></md-list></div></section>');\n$templateCache.put('app/customer/my-website/my-website-custom.html','<div class=\"m-common-toolbar\"></div><div class=\"m-webcustom\" layout-gt-xs=\"row\" layout-align=\"center center\"><form name=\"Form\" layout-padding class=\"white-bg\" md-whiteframe=\"1\" ng-submit=\"vm.save()\"><md-content class=\"md-no-momentum white-bg\" layout-gt-sm=\"row\"><div layout=\"column\" layout-padding flex><h2 data-translate=\"myWebsite.custom.basicDetail\">Basic details</h2><md-input-container class=\"md-icon-float md-block\"><md-icon aria-label=\"keyboard_arrow_down\" class=\"material-icons\">title</md-icon><label data-translate=\"myWebsite.name\">Name</label><input name=\"title\" ng-model=\"vm.myWebsite.name\" type=\"text\" minlength=\"3\" ng-required=\"true\"><div ng-messages=\"Form.title.$error\"><div ng-message-exp=\"[\\'required\\',\\'minlength\\']\" data-translate=\"global.form.error.title\">More than 3 characters</div></div></md-input-container><md-input-container class=\"md-icon-float md-block\"><md-icon aria-label=\"keyboard_arrow_down\" class=\"material-icons\">description</md-icon><label data-translate=\"global.form.des\"></label><input name=\"des\" ng-model=\"vm.myWebsite.des\" type=\"text\" minlength=\"6\"><div ng-messages=\"Form.des.$error\"><div ng-message-exp=\"[\\'minlength\\']\" data-translate=\"global.form.error.des\">More than 6 characters</div></div></md-input-container><md-input-container class=\"md-icon-float md-block\"><md-icon aria-label=\"keyboard_arrow_down\" class=\"material-icons\">link</md-icon><label data-translate=\"myWebsite.subdomain\">Domain</label><input type=\"text\" name=\"domain\" readonly=\"readonly\" ng-model=\"vm.myWebsite.domain\"> <a ng-href=\"{{vm.getHost(vm.myWebsite.domain)}}\" target=\"_blank\">{{vm.getHost(vm.myWebsite.domain)}}</a></md-input-container></div><div flex class=\"mc-custom\"><h2 data-translate=\"myWebsite.custom.customization\">Customization</h2><div layout=\"row\"><div flex><div layout=\"row\" layout-align=\"left center\"><md-switch class=\"md-primary\" ng-model=\"vm.myWebsite.custom.basicInfo.isEnable\" ng-checked=\"true\" readonly=\"readonly\" aria-label=\"Basic Info\"><span data-translate=\"myWebsite.custom.basicInfo\">Basic info</span></md-switch><md-button ng-show=\"vm.myWebsite.custom.basicInfo.isEnable\" ng-click=\"vm.customizeBasicInfo()\" aria-label=\"button-label\" class=\"md-icon-button\"><md-icon class=\"material-icons\">edit</md-icon></md-button></div><div layout=\"row\" layout-align=\"left center\"><md-switch class=\"md-primary\" ng-model=\"vm.myWebsite.custom.song.isEnable\" aria-label=\"Songs\"><span data-translate=\"myWebsite.custom.song\">Songs</span></md-switch><md-button ng-show=\"vm.myWebsite.custom.song.isEnable\" ng-click=\"vm.customizeSong()\" aria-label=\"button-label\" class=\"md-icon-button\"><md-icon class=\"material-icons\">edit</md-icon></md-button></div><div layout=\"row\" layout-align=\"left center\"><md-switch class=\"md-primary\" ng-model=\"vm.myWebsite.custom.photo.isEnable\" aria-label=\"Photos\"><span data-translate=\"myWebsite.custom.photo\">Photos</span></md-switch><md-button ng-show=\"vm.myWebsite.custom.photo.isEnable\" ng-click=\"vm.customizePhoto()\" aria-label=\"button-label\" class=\"md-icon-button\"><md-icon class=\"material-icons\">edit</md-icon></md-button></div></div><div flex><div layout=\"row\" layout-align=\"left center\"><md-switch class=\"md-primary\" readonly=\"readonly\" ng-model=\"vm.myWebsite.custom.homepage.isEnable\" ng-checked=\"true\" aria-label=\"Toolbar\"><span data-translate=\"myWebsite.custom.homepage\">Homepage</span></md-switch><md-button ng-show=\"vm.myWebsite.custom.homepage.isEnable\" ng-click=\"vm.customizeHomepage()\" aria-label=\"button-label\" class=\"md-icon-button\"><md-icon class=\"material-icons\">edit</md-icon></md-button></div><div layout=\"row\" layout-align=\"left center\"><md-switch class=\"md-primary\" ng-model=\"vm.myWebsite.custom.toolbar.isEnable\" ng-checked=\"true\" readonly=\"readonly\" aria-label=\"Toolbar\"><span data-translate=\"myWebsite.custom.toolbar\">Toolbar</span></md-switch><md-button ng-show=\"vm.myWebsite.custom.toolbar.isEnable\" ng-click=\"vm.customizeToolbar()\" aria-label=\"button-label\" class=\"md-icon-button\"><md-icon class=\"material-icons\">edit</md-icon></md-button></div><div layout=\"row\" layout-align=\"left center\"><md-switch class=\"md-primary\" ng-model=\"vm.myWebsite.custom.sidenav.isEnable\" aria-label=\"Toolbar\" ng-checked=\"true\" readonly=\"readonly\"><span data-translate=\"myWebsite.custom.sidenav\">Sidenav</span></md-switch><md-button ng-show=\"vm.myWebsite.custom.sidenav.isEnable\" ng-click=\"vm.customizeSidenav()\" aria-label=\"button-label\" class=\"md-icon-button\"><md-icon class=\"material-icons\">edit</md-icon></md-button></div></div></div></div></md-content><div layout=\"row\"><button ng-disabled=\"!Form.$valid\" type=\"submit\" class=\"md-button md-raised md-primary\" data-translate=\"global.form.save\">Save</button><md-button ui-sref=\"my-website\" class=\"md-raised\" data-translate=\"global.form.cancel\">Cancel</md-button></div></form></div>');\n$templateCache.put('app/customer/my-website/my-website-dialog.html','<md-card><md-card-content><span class=\"error-text\" ng-show=\"vm.isDomainError\">Sub domain is already existed!</span><form name=\"Form\" layout=\"column\" ng-submit=\"vm.save()\"><md-input-container><label data-translate=\"myWebsite.name\">Name</label><input type=\"text\" name=\"name\" ng-minlength=\"3\" ng-model=\"vm.myWebsite.name\" md-autofocus required></md-input-container><md-input-container><label data-translate=\"myWebsite.subdomain\">Sub domain</label><input name=\"subdomain\" ng-model=\"vm.myWebsite.domain\" type=\"text\" minlength=\"3\" ng-pattern=\"/^[a-zA-Z]*$/\" required></md-input-container><md-input-container><label data-translate=\"myWebsite.template\">Template</label><md-select ng-model=\"vm.myWebsite.template\" required><md-option ng-repeat=\"item in vm.templates\" value=\"{{item.source}}\">{{item.name}}</md-option></md-select></md-input-container><p></p><div layout=\"row\"><button type=\"submit\" ng-disabled=\"!Form.$valid\" class=\"md-button md-raised md-primary\" data-translate=\"global.form.save\">Save</button> <span flex></span><md-button ng-click=\"vm.closeDialog()\" class=\"md-raised right\" data-translate=\"global.form.cancel\">Cancel</md-button></div></form></md-card-content></md-card>');\n$templateCache.put('app/customer/my-website/my-website-mail.html','<div class=\"m-common-toolbar\"></div><form name=\"Form\" layout-padding ng-submit=\"vm.sendEmail(vm.user.email)\"><md-content class=\"md-no-momentum\" md-whiteframe=\"1\"><h2>Share management with:</h2><div class=\"m-questions\" layout-padding layout-gt-sm=\"row\" layout-align=\"start center\"><div layout-padding><md-input-container layout-fill><md-icon style=\"color:black\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">email</md-icon><label>Email</label><input ng-model=\"vm.user.email\" type=\"email\" name=\"email\" ng-required=\"true\"><div ng-messages=\"Form.email.$error\"><div ng-message=\"required\">This is required and must be valid email</div></div></md-input-container><div layout=\"row\"><button type=\"submit\" ng-disabled=\"!Form.$valid\" class=\"md-button md-raised md-primary\">Send</button><md-button ui-sref=\"my-website\" class=\"md-raised\">Back</md-button></div></div></div><md-divider></md-divider><div layout=\"column\" layout-padding><div layout=\"row\" layout-align=\"left center\" ng-repeat=\"item in vm.website.sharedUsers\"><md-button aria-label=\"delete\" class=\"md-icon-button\" ng-click=\"vm.deleteEmail($index)\"><md-icon class=\"material-icons\">clear</md-icon></md-button><span class=\"md-subhead\" flex>{{item}}</span></div></div></md-content></form>');\n$templateCache.put('app/customer/my-website/my-website-share.html','<md-bottom-sheet class=\"m-webshare\" layout=\"column\"><div layout=\"row\" layout-fill layout-align=\"center center\"><button ui-sref=\"my-website.mail({id: vm.myWebsite.id})\" ng-click=\"vm.closeShare()\" type=\"button\" class=\"m-common-mail-btn\" md-ink-ripple></button> <button type=\"button\" class=\"m-common-facebook-btn\" md-ink-ripple ng-click=\"vm.shareFacebook()\"></button> <button type=\"button\" class=\"m-common-twitter-btn\" md-ink-ripple ng-click=\"vm.shareTwitter()\"></button></div></md-bottom-sheet>');\n$templateCache.put('app/customer/my-website/my-website-view.html','<div><h2><span data-translate=\"gsiteApp.myWebsite.detail.title\">Website</span> {{vm.myWebsite.name}}</h2><hr><jhi-alert-error></jhi-alert-error><dl class=\"dl-horizontal jh-entity-details\"><dt><span data-translate=\"gsiteApp.myWebsite.name\">Name</span></dt><dd><span>{{vm.myWebsite.name}}</span></dd><dt><span data-translate=\"gsiteApp.myWebsite.created\">Created</span></dt><dd><span>{{vm.myWebsite.created | date:\\'medium\\'}}</span></dd><dt><span data-translate=\"gsiteApp.myWebsite.domain\">Domain</span></dt><dd><span>{{vm.myWebsite.domain}}</span></dd></dl><button type=\"submit\" ui-sref=\"{{ vm.previousState }}\" class=\"btn btn-info\"><span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span> Back</span></button></div>');\n$templateCache.put('app/customer/my-website/my-websites.html','<div class=\"m-common-toolbar\"></div><section id=\"websites\"><div class=\"m-websites\" layout=\"column\" layout-align=\"center center\"><md-card class=\"m-websites-card\" ng-repeat=\"item in vm.websites\" layout-gt-sm=\"row\"><img flex ng-src=\"{{item.tempLink ? item.tempLink : \\'content/images/temp/temp-default.jpg\\'}}\" class=\"md-card-image\" alt=\"Washed Out\"><div flex><md-card-title><md-card-title-text><span class=\"md-headline\">{{item.name}}</span></md-card-title-text></md-card-title><md-card-content><span>{{item.des}}</span></md-card-content><div class=\"m-card-actions\" layout=\"row\" layout-align=\"start center\"><md-button ui-sref=\"my-website-view({website: item})\" class=\"md-icon-button md-raised md-primary\"><i class=\"material-icons\">remove_red_eye</i></md-button><md-button ui-sref=\"my-website.customize({id: item.id})\" class=\"md-icon-button md-raised md-primary\"><i class=\"material-icons\">edit</i></md-button><md-button ui-sref=\"my-website.share({id: item.id})\" class=\"md-icon-button md-raised md-primary\"><i class=\"material-icons\">share</i></md-button><md-button ui-sref=\"my-website.delete({id: item.id})\" class=\"md-icon-button md-raised md-warn\"><i class=\"material-icons\">delete</i></md-button></div></div></md-card></div></section>');\n$templateCache.put('app/customer/support/support.html','<div class=\"m-common-toolbar\"></div><div ui-view=\"supportbar\" ng-cloak></div><div ui-view=\"support-content\" ng-cloak></div>');\n$templateCache.put('app/layouts/accountbar/accountbar.html','<md-content class=\"white-bg\"><md-nav-bar md-selected-nav-item=\"vm.currentState\" nav-bar-aria-label=\"navigation links\"><md-nav-item ui-sref=\"settings\" md-nav-click=\"goto(settings)\" name=\"settings\"><span data-translate=\"global.general\">General</span></md-nav-item><md-nav-item ui-sref=\"password\" md-nav-click=\"goto(password)\" name=\"password\"><span data-translate=\"global.form.password\">Password</span></md-nav-item></md-nav-bar></md-content>');\n$templateCache.put('app/layouts/adminbar/adminbar.html','<md-content class=\"white-bg\"><md-nav-bar md-selected-nav-item=\"vm.currentState\" nav-bar-aria-label=\"navigation links\"><md-nav-item ui-sref=\"user-management\" md-nav-click=\"goto(user-management)\" name=\"user-management\"><span data-translate=\"global.menubar.users\">Users</span></md-nav-item><md-nav-item ui-sref=\"metrics\" md-nav-click=\"goto(metrics)\" name=\"metrics\"><span data-translate=\"global.menubar.metrics\">Metrics</span></md-nav-item><md-nav-item ui-sref=\"health\" md-nav-click=\"goto(health)\" name=\"health\"><span data-translate=\"global.menubar.health\">Health</span></md-nav-item><md-nav-item ui-sref=\"docs\" md-nav-click=\"goto(docs)\" name=\"docs\"><span data-translate=\"global.menubar.api\">API</span></md-nav-item><md-nav-item ui-sref=\"configuration\" md-nav-click=\"goto(configuration)\" name=\"configuration\"><span data-translate=\"global.menubar.config\">Config</span></md-nav-item><md-nav-item ui-sref=\"audits\" md-nav-click=\"goto(audits)\" name=\"audits\"><span data-translate=\"global.menubar.audits\">Audits</span></md-nav-item><md-nav-item ui-sref=\"logs\" md-nav-click=\"goto(logs)\" name=\"logs\"><span data-translate=\"global.menubar.logs\">Logs</span></md-nav-item></md-nav-bar></md-content>');\n$templateCache.put('app/layouts/custom-sidenav/custom-sidenav.html','<div class=\"m-custom-sidenav\" layout=\"column\"><div class=\"m-sidenav-header\" layout=\"row\" layout-align=\"left center\" ng-show=\"vm.isAuthenticated()\"><div><md-list-item><img ng-src=\"{{vm.userImage ? vm.userImage : \\'/content/images/icons/avatar.jpg\\'}}\" class=\"md-avatar m-sidnav-avatar\"></md-list-item><div><b>{{vm.username}}</b><br><span>{{vm.userEmail}}</span></div><p></p></div></div><div class=\"m-sidenav-header\" layout=\"row\" layout-align=\"left center\" ng-show=\"!vm.isAuthenticated()\"><div><md-button class=\"md-fab\" aria-label=\"Eat cake\" ng-click=\"vm.showLoginDialog()\"><md-icon class=\"material-icons\">perm_identity</md-icon></md-button><strong data-translate=\"global.menu.des.login\">Login and have fun!</strong></div></div><md-content><md-list-item ng-click=\"vm.goHomeSec()\"><div layout=\"row\"><md-icon class=\"material-icons\">home</md-icon><span data-translate=\"global.menu.home\">Home</span></div></md-list-item><md-list-item ui-sref=\"user-management\" ng-show=\"vm.isAuthenticated()\" has-authority=\"ROLE_ADMIN\"><div layout=\"row\"><md-icon class=\"material-icons\">insert_chart</md-icon><span data-translate=\"global.menu.admin\">Administration</span></div></md-list-item><md-list-item ui-sref=\"web-template\" ng-show=\"vm.isAuthenticated()\" has-authority=\"ROLE_MANAGER\"><div layout=\"row\"><md-icon class=\"material-icons\">dashboard</md-icon><span data-translate=\"global.menu.manage\">Management</span></div></md-list-item><md-list-item ng-click=\"vm.goTemplateSec()\"><div layout=\"row\"><md-icon class=\"material-icons\">view_modules</md-icon><span data-translate=\"global.menu.template\">Templates</span></div></md-list-item><md-list-item ng-click=\"vm.goFeatureSec()\" ng-hide=\"vm.isAuthenticated()\"><div layout=\"row\"><md-icon class=\"material-icons\">featured_play_list</md-icon><span data-translate=\"global.menu.feature\">Features</span></div></md-list-item><md-list-item ui-sref=\"my-website\" ng-show=\"vm.isAuthenticated()\"><div layout=\"row\"><md-icon class=\"material-icons\">web</md-icon><span data-translate=\"global.menu.web\">My websites</span></div></md-list-item><md-list-item ui-sref=\"my-notification\" ng-show=\"vm.isAuthenticated()\"><div layout=\"row\"><md-icon class=\"material-icons\">notifications_active</md-icon><span data-translate=\"global.menu.noti\">My notifications</span></div></md-list-item><md-list-item ui-sref=\"faq\"><div layout=\"row\"><md-icon class=\"material-icons\">question_answer</md-icon><span data-translate=\"global.menu.faq.title\">FAQ</span></div></md-list-item><md-list-item ui-sref=\"my-question\" ng-show=\"vm.isAuthenticated()\"><div layout=\"row\"><md-icon class=\"material-icons\">help</md-icon><span data-translate=\"global.menu.support\">Support</span></div></md-list-item><md-list-item ui-sref=\"settings\" ng-show=\"vm.isAuthenticated()\"><div layout=\"row\"><md-icon class=\"material-icons\">settings</md-icon><span data-translate=\"global.menu.setting\">Settings</span></div></md-list-item></md-content></div>');\n$templateCache.put('app/layouts/error/accessdenied.html','<div class=\"m-common-toolbar\"></div><div ng-cloak class=\"m-common-panel md-whiteframe-1dp\" layout=\"column\" layout-align=\"center center\"><h1 data-translate=\"error.title\">Access denied!</h1><div class=\"error-text\" data-translate=\"error.403\"><strong>You are not authorized to access the page.</strong></div></div>');\n$templateCache.put('app/layouts/error/error.html','<div class=\"m-common-toolbar\"></div><div ng-cloak class=\"m-common-panel md-whiteframe-1dp\" layout=\"column\" layout-align=\"center center\"><h1 data-translate=\"error.title\">Error Page!</h1><div ng-show=\"errorMessage\"><div class=\"error-text\">{{errorMessage}}</div></div></div>');\n$templateCache.put('app/layouts/error/pagenotfound.html','<div ng-cloak class=\"m-common-panel md-whiteframe-1dp\" layout=\"column\" layout-align=\"center center\"><h1>Page Not Found!</h1><md-button class=\"md-raised md-primary\" ng-href=\"http://localhost:9000\">GSite</md-button></div>');\n$templateCache.put('app/layouts/footer/footer.html','<footer><div layout=\"column\" layout-align=\"center center\" class=\"m-footer\"><p></p><div layout=\"row\"><a href=\"\" ui-sref=\"home\" data-translate=\"global.footer.about\">About</a> <a href=\"\" ui-sref=\"faq\" data-translate=\"global.footer.faq\">FAQ</a> <a href=\"\" ui-sref=\"my-feedback\" data-translate=\"global.footer.feedback\">Feedback</a> <a href=\"\" ui-sref=\"my-question\" data-translate=\"global.footer.support\">Support</a></div><h2>GSite</h2><div><span>\\xA9 2016-2017 GSite, Inc</span></div></div></footer>');\n$templateCache.put('app/layouts/managerbar/managerbar.html','<md-content class=\"white-bg\"><md-nav-bar md-selected-nav-item=\"vm.currentState\" nav-bar-aria-label=\"navigation links\"><md-nav-item ui-sref=\"web-template\" md-nav-click=\"goto(web-template)\" name=\"web-template\"><span data-translate=\"global.menubar.templates\">Templates</span></md-nav-item><md-nav-item ui-sref=\"website\" md-nav-click=\"goto(website)\" name=\"website\"><span data-translate=\"global.menubar.websites\">Websites</span></md-nav-item><md-nav-item ui-sref=\"question\" md-nav-click=\"goto(question)\" name=\"question\"><span data-translate=\"global.menubar.questions\">Questions</span></md-nav-item><md-nav-item ui-sref=\"feedback\" md-nav-click=\"goto(feedback)\" name=\"feedback\"><span data-translate=\"global.menubar.feedbacks\">Feedbacks</span></md-nav-item><md-nav-item ui-sref=\"notification\" md-nav-click=\"goto(notification)\" name=\"notification\"><span data-translate=\"global.menubar.noti\">Notifications</span></md-nav-item></md-nav-bar></md-content>');\n$templateCache.put('app/layouts/quicktool/quicktool.html','<md-fab-speed-dial md-direction=\"up\" class=\"md-scale md-fab-bottom-right m-quicktool\"><md-fab-trigger><md-button aria-label=\"menu\" class=\"md-fab md-warn\"><md-icon class=\"material-icons\">add</md-icon></md-button></md-fab-trigger><md-fab-actions><div><md-button ui-sref=\"my-website.new\" class=\"md-fab md-raised md-mini md-primary\"><md-tooltip md-direction=\"left\" md-visible=\"tooltipVisible\" md-autohide=\"false\"><span data-translate=\"global.quicktool.web\">Website</span></md-tooltip><md-icon class=\"material-icons\">web</md-icon></md-button></div><div><md-button ui-sref=\"my-question.new\" class=\"md-fab md-raised md-mini md-primary\"><md-tooltip md-direction=\"left\" md-visible=\"tooltipVisible\" md-autohide=\"false\"><span data-translate=\"global.quicktool.question\">Question</span></md-tooltip><md-icon class=\"material-icons\">question_answer</md-icon></md-button></div><div><md-button ui-sref=\"my-feedback.new\" class=\"md-fab md-raised md-mini md-primary\"><md-tooltip md-direction=\"left\" md-visible=\"tooltipVisible\" md-autohide=\"false\"><span data-translate=\"global.quicktool.feedback\">Feedback</span></md-tooltip><md-icon class=\"material-icons\">feedback</md-icon></md-button></div></md-fab-actions></md-fab-speed-dial>');\n$templateCache.put('app/layouts/sidenav/sidenav.html','<md-sidenav hide-lg hide-gt-lg class=\"md-sidenav-left md-whiteframe-4dp m-sidenav\" md-component-id=\"sidenav\" layout=\"column\"><div class=\"m-sidenav-header\" layout=\"row\" layout-align=\"left center\" ng-show=\"vm.isAuthenticated()\"><div><md-list-item><img ng-src=\"{{vm.userImage ? vm.userImage : \\'/content/images/icons/avatar.jpg\\'}}\" class=\"md-avatar m-sidnav-avatar\"></md-list-item><div><b>{{vm.username}}</b><br><span>{{vm.userEmail}}</span></div><p></p></div></div><div class=\"m-sidenav-header\" layout=\"row\" layout-align=\"left center\" ng-show=\"!vm.isAuthenticated()\"><div><md-button class=\"md-fab\" aria-label=\"Eat cake\" ng-click=\"vm.showLoginDialog()\"><md-icon class=\"material-icons\">perm_identity</md-icon></md-button><strong data-translate=\"global.menu.des.login\">Login and have fun!</strong></div></div><md-content><md-list-item ng-click=\"vm.goHomeSec()\"><div layout=\"row\"><md-icon class=\"material-icons\">home</md-icon><span data-translate=\"global.menu.home\">Home</span></div></md-list-item><md-list-item ui-sref=\"user-management\" ng-show=\"vm.isAuthenticated()\" has-authority=\"ROLE_ADMIN\"><div layout=\"row\"><md-icon class=\"material-icons\">insert_chart</md-icon><span data-translate=\"global.menu.home\">Administration</span></div></md-list-item><md-list-item ui-sref=\"web-template\" ng-show=\"vm.isAuthenticated()\" has-authority=\"ROLE_MANAGER\"><div layout=\"row\"><md-icon class=\"material-icons\">dashboard</md-icon><span data-translate=\"global.menu.manage\">Management</span></div></md-list-item><md-list-item ui-sref=\"template\" ng-click=\"vm.toggleSidenav()\"><div layout=\"row\"><md-icon class=\"material-icons\">view_modules</md-icon><span data-translate=\"global.menu.template\">Templates</span></div></md-list-item><md-list-item ng-click=\"vm.goFeatureSec()\"><div layout=\"row\"><md-icon class=\"material-icons\">featured_play_list</md-icon><span data-translate=\"global.menu.feature\">Features</span></div></md-list-item><md-list-item ui-sref=\"my-website\" ng-show=\"vm.isAuthenticated()\"><div layout=\"row\"><md-icon class=\"material-icons\">web</md-icon><span data-translate=\"global.menu.web\">My websites</span></div></md-list-item><md-list-item ui-sref=\"my-notification\" ng-show=\"vm.isAuthenticated()\"><div layout=\"row\"><md-icon class=\"material-icons\">notifications_active</md-icon><span data-translate=\"global.menu.noti\">My notifications</span></div></md-list-item><md-list-item ui-sref=\"faq\" ng-click=\"vm.toggleSidenav()\"><div layout=\"row\"><md-icon class=\"material-icons\">question_answer</md-icon><span data-translate=\"global.menu.faq.title\">FAQ</span></div></md-list-item><md-list-item ui-sref=\"my-question\" ng-show=\"vm.isAuthenticated()\"><div layout=\"row\"><md-icon class=\"material-icons\">help</md-icon><span data-translate=\"global.menu.support\">Support</span></div></md-list-item><md-list-item ui-sref=\"settings\" ng-show=\"vm.isAuthenticated()\"><div layout=\"row\"><md-icon class=\"material-icons\">settings</md-icon><span data-translate=\"global.menu.setting\">Settings</span></div></md-list-item><md-list-item class=\"m-sidnav-language\" hide-gt-sm><div layout=\"row\"><md-icon class=\"material-icons\">language</md-icon><md-select ng-model=\"vm.langKey\" aria-label=\"Language\"><md-option value=\"en\" ng-selected=\"true\" data-translate=\"global.menu.language.eng\" ng-click=\"vm.changeLanguage() || vm.toggleSidenav()\">English</md-option><md-option value=\"vi\" data-translate=\"global.menu.language.vie\" ng-click=\"vm.changeLanguage() || vm.toggleSidenav()\">Vietnamese</md-option></md-select></div></md-list-item></md-content></md-sidenav>');\n$templateCache.put('app/layouts/supportbar/supportbar.html','<md-content class=\"white-bg\"><md-nav-bar md-selected-nav-item=\"vm.currentState\" nav-bar-aria-label=\"navigation links\"><md-nav-item ui-sref=\"faq\" md-nav-click=\"goto(faq)\" name=\"faq\"><span data-translate=\"global.menubar.faq\">FAQ</span></md-nav-item><md-nav-item ui-sref=\"my-question\" md-nav-click=\"goto(my-question)\" name=\"my-question\" ng-show=\"vm.isAuthenticated()\"><span data-translate=\"global.menubar.question\">Question</span></md-nav-item><md-nav-item ui-sref=\"my-feedback\" md-nav-click=\"goto(my-feedback)\" name=\"my-feedback\" ng-show=\"vm.isAuthenticated()\"><span data-translate=\"global.menubar.feedback\">Feedback</span></md-nav-item></md-nav-bar></md-content>');\n$templateCache.put('app/layouts/toolbar/toolbar.html','<md-toolbar class=\"transparent m-toolbar\" ng-show=\"!showSearch\" md-whiteframe=\"3\"><div class=\"md-toolbar-tools\"><md-button hide-gt-md class=\"md-icon-button\" aria-label=\"Settings\" ng-click=\"vm.toggleSidenav()\"><md-icon class=\"material-icons\">menu</md-icon></md-button><h2><a href=\"\" ui-sref=\"home\"><span>Gift Site</span></a></h2><span flex></span><md-button class=\"md-icon-button\" aria-label=\"Search\" ng-click=\"showSearch = !showSearch; vm.search()\"><md-icon class=\"material-icons\">search</md-icon></md-button><md-button hide-xs hide-sm ui-sref=\"my-website\" class=\"md-icon-button\" aria-label=\"My Websites\" ng-show=\"vm.isAuthenticated()\"><md-icon class=\"material-icons\">web</md-icon></md-button><md-button class=\"md-icon-button\" aria-label=\"Login\" ng-click=\"vm.showLoginDialog()\"><md-icon class=\"material-icons\">perm_identity</md-icon></md-button><md-menu hide-xs hide-sm md-offset=\"0 50\"><md-button aria-label=\"Choose language\" class=\"md-icon-button\" ng-mouseenter=\"$mdMenu.open()\"><md-icon class=\"material-icons\">language</md-icon></md-button><md-menu-content width=\"3\" ng-mouseleave=\"$mdCloseMenu()\"><md-menu-item ng-click=\"vm.changeEnglish()\"><md-button data-translate=\"global.menu.language.eng\">English</md-button></md-menu-item><md-menu-item ng-click=\"vm.changeVietnam()\"><md-button data-translate=\"global.menu.language.vie\">Vietnamese</md-button></md-menu-item></md-menu-content></md-menu></div></md-toolbar><md-toolbar class=\"transparent m-toolbar\" ng-show=\"showSearch\" md-whiteframe=\"3\"><div class=\"md-toolbar-tools\"><md-button hide-xs hide-gt-md class=\"md-icon-button\" aria-label=\"Settings\" ng-click=\"vm.toggleSidenav()\"><md-icon class=\"material-icons\">menu</md-icon></md-button><h2 hide-xs><span>Gift Site</span></h2><md-button hide-gt-xs class=\"md-icon-button\" ng-click=\"showSearch = !showSearch\" aria-label=\"Back\"><i class=\"material-icons\">arrow_back</i></md-button><span flex></span><form ng-submit=\"vm.search()\"><md-input-container md-theme=\"input\" class=\"m-toolbar-search-box\" md-no-float flex-xs=\"90\"><input id=\"searchInput\" name=\"searchInput\" placeholder=\"{{\\'global.search.placeholder\\' | translate}}\" ng-model=\"vm.searchText\"></md-input-container><button class=\"md-button md-icon-button\" aria-label=\"Search\" type=\"submit\"><i class=\"material-icons\">search</i></button></form><md-button hide-xs hide-sm ui-sref=\"my-website\" class=\"md-icon-button\" aria-label=\"My Websites\" ng-show=\"vm.isAuthenticated()\"><md-icon class=\"material-icons\">web</md-icon></md-button><md-button hide-xs class=\"md-icon-button\" aria-label=\"More\" ng-click=\"vm.showLoginDialog()\"><md-icon class=\"material-icons\">perm_identity</md-icon></md-button><md-menu hide-xs hide-sm md-offset=\"0 50\"><md-button aria-label=\"Open menu with custom trigger\" class=\"md-icon-button\" ng-mouseenter=\"$mdOpenMenu()\"><md-icon class=\"material-icons\">language</md-icon></md-button><md-menu-content width=\"3\" ng-mouseleave=\"$mdCloseMenu()\"><md-menu-item ng-click=\"vm.changeEnglish()\"><md-button data-translate=\"global.menu.language.eng\">English</md-button></md-menu-item><md-menu-item ng-click=\"vm.changeVietnam()\"><md-button data-translate=\"global.menu.language.vie\">Vietnamese</md-button></md-menu-item></md-menu-content></md-menu></div></md-toolbar>');\n$templateCache.put('app/manager/notification/notification-detail.html','<div><md-button ui-sref=\"{{vm.previousState}}\" class=\"md-raised md-primary\">Back</md-button></div><div><div class=\"m-content\"><h2 data-translate=\"notification.info\">Notification infomation</h2><div layout-gt-xs=\"row\"><div flex><p><span data-translate=\"global.form.id\">ID</span> : <b>{{vm.notification.id}}</b></p><p><span data-translate=\"global.form.title\">Title</span> : <b>{{vm.notification.title}}</b></p></div><div flex><p><span data-translate=\"notification.content\">Content</span> : <b>{{vm.notification.content}}</b></p><p><span data-translate=\"global.form.created\">Created date</span> : <b>{{vm.notification.created | date: \\'medium\\'}}</b></p></div></div><div layout=\"row\"><span data-translate=\"notification.sentUsers\">Sent users</span> :<div layout=\"column\"><b ng-repeat=\"item in vm.website.sentUsers\">&nbsp; {{item}}</b></div></div></div><p></p></div><div layout=\"row\"><md-button ui-sref=\"notification.edit({id: vm.notification.id})\" class=\"md-raised md-primary\" data-translate=\"global.form.edit\">Edit</md-button><md-button ui-sref=\"notification.delete({id: vm.notification.id})\" class=\"md-raised md-warn\" data-translate=\"global.form.delete\">Delete</md-button></div>');\n$templateCache.put('app/manager/notification/notification-dialog.html','<div layout-padding><div layout-padding class=\"md-whiteframe-1dp\"><form name=\"Form\" layout=\"column\"><md-input-container><label data-translate=\"global.form.title\">Title</label><input type=\"text\" name=\"title\" ng-minlength=\"2\" ng-model=\"vm.notification.title\" required></md-input-container><md-input-container><label data-translate=\"notification.content\">Content</label><input type=\"text\" name=\"content\" ng-minlength=\"2\" ng-model=\"vm.notification.content\" required></md-input-container></form><div layout=\"row\"><md-button ng-click=\"vm.save()\" ng-disabled=\"!Form.$valid\" class=\"md-raised md-primary\" data-translate=\"global.form.save\">Save</md-button><span flex></span><md-button ng-click=\"vm.closeDialog()\" class=\"md-raised right\" data-translate=\"global.form.cancel\">Cancel</md-button></div></div></div>');\n$templateCache.put('app/manager/notification/notifications.html','<h2 data-translate=\"notification.title\">Notifications</h2><div><table layout-fill><thead><tr jh-sort=\"vm.predicate\" ascending=\"vm.reverse\" callback=\"vm.reset()\"><th><md-button ui-sref=\"notification.new\" class=\"md-icon-button md-raised md-primary\"><i class=\"material-icons\">add</i></md-button></th><th><span data-translate=\"global.form.title\">Title</span></th><th hide-xs hide-sm><span data-translate=\"notification.content\">Content</span></th><th hide-xs><span data-translate=\"global.form.created\">Created</span></th></tr></thead><tbody infinite-scroll=\"vm.loadPage(vm.page + 1)\" infinite-scroll-disabled=\"vm.page >= vm.links[\\'last\\']\"><tr ng-repeat=\"notification in vm.notifications track by notification.id\"><td><div class=\"m-item-actions\" layout=\"row\" layout-align=\"start center\"><md-button hide-xs hide-sm hide-md class=\"md-icon-button md-raised md-warn\" ui-sref=\"notification.delete({id: notification.id})\"><i class=\"material-icons\">delete</i></md-button><md-button hide-xs hide-sm hide-md class=\"md-icon-button md-raised md-primary\" ui-sref=\"notification.edit({id: notification.id})\"><i class=\"material-icons\">edit</i></md-button><md-button class=\"md-icon-button md-raised md-primary\" ui-sref=\"notification.detail({id:notification.id})\"><i class=\"material-icons\">remove_red_eye</i></md-button></div></td><td>{{notification.title}}</td><td hide-xs hide-sm>{{notification.content}}</td><td hide-xs>{{notification.created | date:\\'medium\\'}}</td></tr></tbody></table></div>');\n$templateCache.put('app/manager/question/question-detail.html','<div><md-button ui-sref=\"{{vm.previousState}}\" class=\"md-raised md-primary\" data-translate=\"global.form.back\">Back</md-button></div><div><div class=\"m-content\"><h2 data-translate=\"question.info\">Question infomation</h2><div layout-gt-xs=\"row\"><div flex><p><span data-translate=\"global.form.id\">ID</span> : <b>{{vm.question.id}}</b></p><p><span data-translate=\"question.content\">Content</span> : <b>{{vm.question.content}}</b></p><p><span data-translate=\"question.answer\">Answer</span> : <b>{{vm.question.answer}}</b></p></div><div flex><p><span data-translate=\"question.user\">User</span> : <b>{{vm.question.user_id}}</b></p><p><span data-translate=\"global.form.created\">Created date</span> : <b>{{vm.question.created | date:\\'medium\\'}}</b></p><p><md-switch class=\"md-primary\" ng-model=\"vm.question.frequent\" aria-label=\"Is frequent\" ng-change=\"vm.setFrequent()\"><span data-translate=\"question.frequent\">Is frequent</span></md-switch></p></div></div></div><p></p></div><div layout=\"row\"><md-button ui-sref=\"question.edit({id: vm.question.id})\" class=\"md-raised md-primary\" data-translate=\"global.form.edit\">Edit</md-button><md-button ui-sref=\"question.delete({id: vm.question.id})\" class=\"md-raised md-warn\" data-translate=\"global.form.delete\">Delete</md-button></div>');\n$templateCache.put('app/manager/question/question-dialog.html','<div layout-padding><div layout-padding class=\"md-whiteframe-1dp\"><form name=\"Form\" layout=\"column\"><md-input-container><label data-translate=\"question.content\">Content</label><input type=\"text\" name=\"content\" ng-minlength=\"3\" ng-model=\"vm.question.content\" required></md-input-container><md-input-container><label data-translate=\"question.answer\">Answer</label><input type=\"text\" name=\"des\" ng-minlength=\"3\" ng-model=\"vm.question.answer\" required></md-input-container><md-input-container layout-fill><label data-translate=\"question.user\">User</label><md-select ng-model=\"vm.question.user_id\" required><md-option ng-repeat=\"item in vm.users\" value=\"{{item.id}}\">{{item.id}}</md-option></md-select></md-input-container></form><div layout=\"row\"><md-button ng-click=\"vm.save()\" ng-disabled=\"!Form.$valid\" class=\"md-raised md-primary\" data-translate=\"global.form.save\">Save</md-button><span flex></span><md-button ng-click=\"vm.closeDialog()\" class=\"md-raised right\" data-translate=\"global.form.cancel\">Cancel</md-button></div></div></div>');\n$templateCache.put('app/manager/question/questions.html','<h2 data-translate=\"question.title\">Questions</h2><div><table layout-fill><thead><tr><th><md-button ui-sref=\"question.new\" class=\"md-icon-button md-raised md-primary\"><i class=\"material-icons\">add</i></md-button></th><th hide-xs hide-gt-xs><span data-translate=\"global.form.id\">ID</span></th><th><span data-translate=\"question.content\">Content</span></th><th hide-xs hide-sm><span data-translate=\"question.answer\">Answer</span></th><th hide-xs><span data-translate=\"global.form.created\">Created</span></th></tr></thead><tbody infinite-scroll=\"vm.loadPage(vm.page + 1)\" infinite-scroll-disabled=\"vm.page >= vm.links[\\'last\\']\"><tr ng-repeat=\"question in vm.questions track by question.id\"><td><div class=\"m-item-actions\" layout=\"row\" layout-align=\"start center\"><md-button hide-xs hide-sm hide-md class=\"md-icon-button md-raised md-warn\" ui-sref=\"question.delete({id: question.id})\"><i class=\"material-icons\">delete</i></md-button><md-button hide-xs hide-sm hide-md class=\"md-icon-button md-raised md-primary\" ui-sref=\"question.edit({id: question.id})\"><i class=\"material-icons\">edit</i></md-button><md-button class=\"md-icon-button md-raised md-primary\" ui-sref=\"question.detail({id:question.id})\"><i class=\"material-icons\">remove_red_eye</i></md-button></div></td><td hide-xs hide-gt-xs><a ui-sref=\"question-detail({id:question.id})\">{{question.id}}</a></td><td>{{question.content}}</td><td hide-xs hide-sm>{{question.answer}}</td><td hide-xs>{{question.created | date:\\'medium\\'}}</td></tr></tbody></table></div>');\n$templateCache.put('app/manager/feedback/feedback-detail.html','<div><md-button ui-sref=\"{{vm.previousState}}\" class=\"md-raised md-primary\" data-translate=\"global.form.back\">Back</md-button></div><div><div class=\"m-content\"><h2 data-translate=\"feedback.info\">Feedback infomation</h2><div layout-gt-xs=\"row\"><div flex><p><span data-translate=\"global.form.id\">ID</span> : <b>{{vm.feedback.id}}</b></p><p><span data-translate=\"global.form.title\">Title</span> : <b>{{vm.feedback.title}}</b></p><p><span data-translate=\"feedback.content\">Content</span> : <b>{{vm.feedback.content}}</b></p></div><div flex><p><span data-translate=\"feedback.user\">User </span>: <b>{{vm.feedback.user_id}}</b></p><p><span data-translate=\"global.form.created\">Created date</span> : <b>{{vm.feedback.created | date: \\'medium\\'}}</b></p></div></div></div><p></p></div><div layout=\"row\"><md-button ui-sref=\"feedback.edit({id: vm.feedback.id})\" class=\"md-raised md-primary\" data-translate=\"global.form.edit\">Edit</md-button><md-button ui-sref=\"feedback.delete({id: vm.feedback.id})\" class=\"md-raised md-warn\" data-translate=\"global.form.delete\">Delete</md-button></div>');\n$templateCache.put('app/manager/feedback/feedback-dialog.html','<div layout-padding><div layout-padding class=\"md-whiteframe-1dp\"><form name=\"Form\" layout=\"column\"><md-input-container><label data-translate=\"global.form.title\">Title</label><input type=\"text\" name=\"title\" ng-minlength=\"2\" ng-model=\"vm.feedback.title\" required></md-input-container><md-input-container><label data-translate=\"feedback.content\">Content</label><input type=\"text\" name=\"content\" ng-minlength=\"2\" ng-model=\"vm.feedback.content\" required></md-input-container><md-input-container layout-fill><label data-translate=\"feedback.user\">User</label><md-select ng-model=\"vm.feedback.user_id\" required><md-option ng-repeat=\"item in vm.users\" value=\"{{item.id}}\">{{item.id}}</md-option></md-select></md-input-container></form><div layout=\"row\"><md-button ng-click=\"vm.save()\" ng-disabled=\"!Form.$valid\" class=\"md-raised md-primary\" data-translate=\"global.form.save\">Save</md-button><span flex></span><md-button ng-click=\"vm.closeDialog()\" class=\"md-raised right\" data-translate=\"global.form.cancel\">Cancel</md-button></div></div></div>');\n$templateCache.put('app/manager/feedback/feedbacks.html','<h2 data-translate=\"feedback.title\">Feedbacks</h2><div><table layout-fill><thead><tr jh-sort=\"vm.predicate\" ascending=\"vm.reverse\" callback=\"vm.reset()\"><th><md-button ui-sref=\"feedback.new\" class=\"md-icon-button md-raised md-primary\"><i class=\"material-icons\">add</i></md-button></th><th><span data-translate=\"global.form.title\">Title</span></th><th hide-xs hide-sm><span data-translate=\"feedback.content\">Content</span></th><th hide-xs><span data-translate=\"global.form.created\">Created</span></th><th hide-xs hide-gt-xs><span data-translate=\"feedback.user\">User</span></th></tr></thead><tbody infinite-scroll=\"vm.loadPage(vm.page + 1)\" infinite-scroll-disabled=\"vm.page >= vm.links[\\'last\\']\"><tr ng-repeat=\"feedback in vm.feedbacks track by feedback.id\"><td><div class=\"m-item-actions\" layout=\"row\" layout-align=\"start center\"><md-button hide-xs hide-sm hide-md class=\"md-icon-button md-raised md-warn\" ui-sref=\"feedback.delete({id: feedback.id})\"><i class=\"material-icons\">delete</i></md-button><md-button hide-xs hide-sm hide-md class=\"md-icon-button md-raised md-primary\" ui-sref=\"feedback.edit({id: feedback.id})\"><i class=\"material-icons\">edit</i></md-button><md-button class=\"md-icon-button md-raised md-primary\" ui-sref=\"feedback.detail({id:feedback.id})\"><i class=\"material-icons\">remove_red_eye</i></md-button></div></td><td>{{feedback.title}}</td><td hide-xs hide-sm>{{feedback.content}}</td><td hide-xs>{{feedback.created | date:\\'medium\\'}}</td><td hide-xs hide-gt-xs>{{feedback.user_id}}</td></tr></tbody></table></div>');\n$templateCache.put('app/manager/web-template/web-template-detail.html','<div><md-button ui-sref=\"{{vm.previousState}}\" class=\"md-raised md-primary\" data-translate=\"global.form.back\">Back</md-button></div><div><div class=\"m-content\"><h2 data-translate=\"webTemplate.title\">Web template infomation</h2><div layout-gt-xs=\"row\"><div flex><p><span data-translate=\"global.form.id\">ID</span> : <b>{{vm.webTemplate.id}}</b></p><p><span data-translate=\"global.form.name\">Name</span> : <b>{{vm.webTemplate.name}}</b></p><p><span data-translate=\"webTemplate.source\">Source</span> : <b>{{vm.webTemplate.source}}</b></p><p><span data-translate=\"webTemplate.category\">Category</span> : <b>{{vm.webTemplate.category}}</b></p></div><div flex><p><span data-translate=\"webTemplate.rating\">Rating</span> : <b>{{vm.webTemplate.rating}}</b></p><p><span data-translate=\"webTemplate.price\">Price</span> : <b>{{vm.webTemplate.price}}$</b></p><p><span data-translate=\"global.form.created\">Created date</span> : <b>{{vm.webTemplate.created | date:\\'medium\\' }}</b></p><p></p><div class=\"m-upload-panel\" layout=\"row\" layout-align=\"left center\"><button type=\"button\" ng-disabled=\"vm.loading\" class=\"button md-button md-primary\" ngf-select=\"vm.upload($file)\" ng-model=\"vm.mainImageFile\" name=\"file\" ngf-pattern=\"\\'image/*\\'\" ngf-accept=\"\\'image/*\\'\"><span data-translate=\"global.form.uploadImage\">Upload image</span></button> <img ng-show=\"vm.mainImageFile\" ngf-thumbnail=\"vm.mainImageFile\"> <img ng-show=\"vm.tempImageLink\" ng-src=\"{{vm.tempImageLink}}\"></div><p></p></div></div></div><p></p></div><div layout=\"row\"><md-button ui-sref=\"web-template.edit({id: vm.webTemplate.id})\" class=\"md-raised md-primary\" data-translate=\"global.form.edit\">Edit</md-button><md-button ui-sref=\"web-template.delete({id: vm.webTemplate.id})\" class=\"md-raised md-warn\" data-translate=\"global.form.delete\">Delete</md-button></div>');\n$templateCache.put('app/manager/web-template/web-template-dialog.html','<div layout-padding><div layout-padding class=\"md-whiteframe-1dp\"><form name=\"Form\" layout=\"column\"><md-input-container><label data-translate=\"global.form.name\">Name</label><input type=\"text\" name=\"name\" ng-minlength=\"3\" ng-model=\"vm.webTemplate.name\" required></md-input-container><div layout=\"row\"><md-input-container><label data-translate=\"webTemplate.rating\">Rating</label><input type=\"number\" name=\"rating\" ng-model=\"vm.webTemplate.rating\" min=\"1\" required></md-input-container><md-input-container><label data-translate=\"webTemplate.price\">Price</label><input type=\"number\" name=\"rating\" ng-model=\"vm.webTemplate.price\" min=\"0\" required></md-input-container></div><div layout=\"row\"><md-input-container><label data-translate=\"webTemplate.category\">Category</label><input type=\"text\" name=\"name\" ng-minlength=\"3\" ng-model=\"vm.webTemplate.category\" required></md-input-container><md-input-container><label data-translate=\"webTemplate.source\">Source</label><md-select ng-model=\"vm.webTemplate.source\" required><md-option ng-repeat=\"item in vm.sources\" value=\"{{item}}\">{{item}}</md-option></md-select></md-input-container></div><div layout=\"row\"><md-button ng-click=\"vm.save()\" ng-disabled=\"!Form.$valid\" class=\"md-raised md-primary\" data-translate=\"global.form.save\">Save</md-button><span flex></span><md-button ng-click=\"vm.closeDialog()\" class=\"md-raised right\" data-translate=\"global.form.cancel\">Cancel</md-button></div></form></div></div>');\n$templateCache.put('app/manager/web-template/web-templates.html','<h2 data-translate=\"webTemplate.title\">Web Templates</h2><div><table layout-fill><thead><tr><th><md-button ui-sref=\"web-template.new\" class=\"md-icon-button md-raised md-primary\"><i class=\"material-icons\">add</i></md-button></th><th><span data-translate=\"webTemplate.name\">Name</span></th><th hide-xs hide-sm><span data-translate=\"webTemplate.rating\">Rating</span></th><th hide-xs><span data-translate=\"webTemplate.category\">Category</span></th><th><span data-translate=\"webTemplate.source\">Source</span></th><th hide-xs hide-sm data-translate=\"webTemplate.date\">Date</th></tr></thead><tbody infinite-scroll=\"vm.loadPage(vm.page + 1)\" infinite-scroll-disabled=\"vm.page >= vm.links[\\'last\\']\"><tr ng-repeat=\"webTemplate in vm.webTemplates track by webTemplate.id\"><td><div class=\"m-item-actions\" layout=\"row\" layout-align=\"start center\"><md-button hide-xs hide-sm hide-md class=\"md-icon-button md-raised md-warn\" ui-sref=\"web-template.delete({id: webTemplate.id})\"><i class=\"material-icons\">delete</i></md-button><md-button hide-xs hide-sm hide-md class=\"md-icon-button md-raised md-primary\" ui-sref=\"web-template.edit({id: webTemplate.id})\"><i class=\"material-icons\">edit</i></md-button><md-button class=\"md-icon-button md-raised md-primary\" ui-sref=\"web-template.detail({id:webTemplate.id})\"><i class=\"material-icons\">remove_red_eye</i></md-button></div></td><td>{{webTemplate.name}}</td><td hide-xs hide-sm>{{webTemplate.rating}}</td><td hide-xs>{{webTemplate.category}}</td><td><a ui-sref=\"{{webTemplate.source}}\">{{webTemplate.source}}</a></td><td hide-xs hide-sm>{{webTemplate.created | date:\\'medium\\'}}</td></tr></tbody></table></div>');\n$templateCache.put('app/manager/website/website-detail.html','<div><md-button ui-sref=\"{{vm.previousState}}\" class=\"md-raised md-primary\" data-translate=\"global.form.back\">Back</md-button></div><div><div class=\"m-content\"><h2 data-translate=\"website.info\">Website infomation</h2><div layout-gt-xs=\"row\"><div flex><p><span data-translate=\"global.form.id\">ID</span> : <b>{{vm.website.id}}</b></p><p><span data-translate=\"global.form.name\">Name</span> : <b>{{vm.website.name}}</b></p><p><span data-translate=\"website.subdomain\">Sub domain</span> : <b>{{vm.website.domain}}</b> <a ng-href=\"{{vm.getHost(vm.myWebsite.domain)}}\" target=\"_blank\">{{vm.getHost(vm.myWebsite.domain)}}</a></p><p><span data-translate=\"website.customcomponent\">Custom components</span> : <b ng-show=\"vm.website.custom.toolbar.isEnable\">Toolbar </b><b ng-show=\"vm.website.custom.homepage.isEnable\">Homepage </b><b ng-show=\"vm.website.custom.sidenav.isEnable\">Sidenav </b><b ng-show=\"vm.website.custom.footer.isEnable\">Footer</b> <b ng-show=\"vm.website.custom.basicInfo.isEnable\">BasicInfo </b><b ng-show=\"vm.website.custom.song.isEnable\">Song </b><b ng-show=\"vm.website.custom.photo.isEnable\">Photo</b></p></div><div flex><p><span data-translate=\"website.template\">Template</span> : <b>{{vm.website.template}}</b></p><p><span data-translate=\"website.user\">User</span> : <b>{{vm.website.user_id}}</b></p><p><span data-translate=\"global.form.created\">Created date</span> : <b>{{vm.website.created | date:\\'HH:mm dd-MM-yyyy\\'}}</b></p><p><span data-translate=\"global.form.des\">Description</span> : <b>{{vm.website.des}}</b></p></div></div><div layout=\"row\"><span data-translate=\"website.sharedUsers\">Shared users</span> :<div layout=\"column\"><b ng-repeat=\"item in vm.website.sharedUsers\">&nbsp; {{item}}</b></div></div></div><p></p></div><div layout=\"row\"><md-button ui-sref=\"website.edit({id: vm.website.id})\" class=\"md-raised md-primary\" data-translate=\"global.form.edit\">Edit</md-button><md-button ui-sref=\"website.delete({id: vm.website.id})\" class=\"md-raised md-warn\" data-translate=\"global.form.delete\">Delete</md-button></div>');\n$templateCache.put('app/manager/website/website-dialog.html','<div layout-padding><div layout-padding class=\"md-whiteframe-1dp\"><span class=\"error-text\" ng-show=\"vm.isDomainError\" data-translate=\"website.error.domain\">Sub domain is already existed!</span><form name=\"Form\" layout=\"column\" ng-submit=\"vm.save()\"><md-input-container><label data-translate=\"global.form.name\">Name</label><input type=\"text\" name=\"name\" ng-minlength=\"2\" ng-model=\"vm.website.name\" required></md-input-container><md-input-container><label data-translate=\"website.subdomain\">Sub domain</label><input name=\"subdomain\" ng-model=\"vm.website.domain\" type=\"text\" minlength=\"3\" ng-pattern=\"/^[a-zA-Z]*$/\" required></md-input-container><md-input-container><label data-translate=\"global.form.des\">Description</label><input type=\"text\" name=\"des\" ng-minlength=\"2\" ng-model=\"vm.website.des\" required></md-input-container><div layout=\"row\"><md-input-container><label data-translate=\"website.template\">Template</label><md-select ng-model=\"vm.website.template\" required><md-option ng-repeat=\"item in vm.templates\" value=\"{{item.source}}\">{{item.name}}</md-option></md-select></md-input-container><md-input-container><label data-translate=\"website.user\">User</label><md-select ng-model=\"vm.website.user_id\" required><md-option ng-repeat=\"item in vm.users\" value=\"{{item.login}}\">{{item.login}}</md-option></md-select></md-input-container></div><div layout=\"row\" layout-align=\"left center\" ng-repeat=\"item in vm.sharedUsers\"><md-button aria-label=\"delete\" class=\"md-icon-button\" ng-click=\"vm.deleteUser($index)\"><md-icon class=\"material-icons\">clear</md-icon></md-button><span class=\"md-subhead m-1-line\" flex>{{item}}</span></div><div layout=\"row\"><button type=\"submit\" ng-disabled=\"!Form.$valid\" class=\"md-button md-raised md-primary\" data-translate=\"global.form.save\">Save</button> <span flex></span><md-button ng-click=\"vm.closeDialog()\" class=\"md-raised right\" data-translate=\"global.form.cancel\">Cancel</md-button></div></form></div></div>');\n$templateCache.put('app/manager/website/websites.html','<h2 data-translate=\"website.title\">Websites</h2><div><table layout-fill><thead><tr><th><md-button ui-sref=\"website.new\" class=\"md-icon-button md-raised md-primary\"><i class=\"material-icons\">add</i></md-button></th><th><span data-translate=\"global.form.name\">Name</span></th><th hide-xs><span data-translate=\"global.form.created\">Created</span></th><th hide-xs hide-sm><span data-translate=\"website.user\">User</span></th><th hide-xs hide-sm><span data-translate=\"website.template\">Template</span></th><th><span data-translate=\"website.subdomain\">Sub Domain</span></th></tr></thead><tbody><tr ng-repeat=\"website in vm.websites track by website.id\"><td><div class=\"m-item-actions\" layout=\"row\" layout-align=\"start center\"><md-button hide-xs hide-sm hide-md class=\"md-icon-button md-raised md-warn\" ui-sref=\"website.delete({id: website.id})\"><i class=\"material-icons\">delete</i></md-button><md-button hide-xs hide-sm hide-md class=\"md-icon-button md-raised md-primary\" ui-sref=\"website.edit({id: website.id})\"><i class=\"material-icons\">edit</i></md-button><md-button class=\"md-icon-button md-raised md-primary\" ui-sref=\"website.detail({id:website.id})\"><i class=\"material-icons\">remove_red_eye</i></md-button></div></td><td>{{website.name}}</td><td hide-xs>{{website.created | date:\\'HH:mm dd-MM-yyyy\\'}}</td><td hide-xs hide-sm>{{website.user_id}}</td><td hide-xs hide-sm>{{website.template}}</td><td>{{website.domain}}</td></tr></tbody></table></div>');\n$templateCache.put('app/payment/website-payment/website-payment.html','<div class=\"m-common-toolbar\"></div><div class=\"m-webpayment\" layout-gt-xs=\"row\" layout-align=\"center center\"><form name=\"Form\" layout-padding ng-submit=\"vm.buyWithCard()\"><md-content class=\"md-no-momentum white-bg\" md-whiteframe=\"1\"><h2 data-translate=\"webPayment.title\">Purchase website with:</h2><div layout=\"row\"><md-button ng-disabled=\"vm.isPaying\" class=\"md-raised m-common-paypal-btn\" aria-label=\"PayPal\" ng-click=\"vm.buyNow()\"></md-button><button ng-disabled=\"vm.isPaying\" type=\"submit\" class=\"md-button md-raised m-common-creditcard-btn\" aria-label=\"Credit card\"></button></div><div layout-gt-sm=\"row\" layout-padding><div layout-padding flex><md-input-container class=\"md-icon-float md-block\"><md-icon style=\"color:black\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">credit_card</md-icon><label data-translate=\"webPayment.cardType\">Type</label><md-select ng-model=\"vm.card.type\" required><md-option value=\"mastercard\">Mastercard</md-option><md-option value=\"visa\">Visa</md-option></md-select><div ng-messages=\"Form.type.$error\"><div ng-message=\"required\">This is required.</div></div></md-input-container><br><md-input-container class=\"md-icon-float md-block\"><md-icon style=\"color:black\" class=\"material-icons\">confirmation_number</md-icon><label data-translate=\"webPayment.cardNumber\">Card number</label><input name=\"number\" ng-model=\"vm.card.number\" type=\"text\" required ng-pattern=\"/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14})$/\"><div ng-messages=\"Form.number.$error\"><div ng-message=\"required\">Visa or Master card number</div></div></md-input-container></div><div class=\"mc-person\" flex><md-input-container class=\"md-icon-float md-block\"><md-icon style=\"color:black\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">perm_identity</md-icon><label data-translate=\"global.form.firstName\"></label><input name=\"firstName\" ng-model=\"vm.card.firstName\" type=\"text\" ng-minlength=\"2\" ng-required=\"true\"><div ng-messages=\"Form.firstName.$error\"><div ng-message=\"required\">This is required.</div></div></md-input-container><md-input-container class=\"md-icon-float md-block\"><md-icon style=\"color:black\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">perm_identity</md-icon><label data-translate=\"global.form.lastName\"></label><input name=\"lastName\" ng-model=\"vm.card.lastName\" type=\"text\" ng-minlength=\"2\" ng-required=\"true\"><div ng-messages=\"Form.lastName.$error\"><div ng-message=\"required\">This is required.</div></div></md-input-container><p></p><div layout=\"row\"><md-input-container flex=\"10\"><md-icon style=\"color:black\" class=\"material-icons\">date_range</md-icon></md-input-container><md-input-container><label data-translate=\"webPayment.month\">Month</label><md-select name=\"month\" ng-model=\"vm.card.month\" required><md-option value=\"1\">01</md-option><md-option value=\"2\">02</md-option><md-option value=\"3\">03</md-option><md-option value=\"4\">04</md-option><md-option value=\"5\">05</md-option><md-option value=\"6\">06</md-option><md-option value=\"7\">07</md-option><md-option value=\"8\">08</md-option><md-option value=\"9\">09</md-option><md-option value=\"10\">10</md-option><md-option value=\"11\">11</md-option><md-option value=\"12\">12</md-option></md-select><div ng-messages=\"Form.month.$error\"><div ng-message=\"required\">This is required.</div></div></md-input-container><md-input-container><label data-translate=\"webPayment.year\">Year</label><md-select name=\"year\" ng-model=\"vm.card.year\" required><md-option value=\"2018\">2018</md-option><md-option value=\"2019\">2019</md-option><md-option value=\"2020\">2020</md-option><md-option value=\"2021\">2021</md-option><md-option value=\"2022\">2022</md-option><md-option value=\"2023\">2023</md-option><md-option value=\"2024\">2024</md-option><md-option value=\"2025\">2025</md-option></md-select><div ng-messages=\"Form.year.$error\"><div ng-message=\"required\">Required</div></div></md-input-container><md-input-container><md-icon style=\"color:black\" class=\"material-icons\">verified_user</md-icon><input name=\"cvv\" ng-model=\"vm.card.cvv\" type=\"text\" placeholder=\"CVV\" ng-required=\"true\" ng-pattern=\"/^[0-9]{3,4}$/\"><div ng-messages=\"Form.cvv.$error\"><div ng-message=\"required\">Required</div></div></md-input-container></div></div></div><div layout=\"row\"><button type=\"submit\" ng-disabled=\"!Form.$valid || vm.isPaying\" class=\"md-button md-raised md-primary\" data-translate=\"webPayment.purchase\">Purechase</button><md-button ui-sref=\"my-website\" ng-disabled=\"vm.isPaying\" class=\"md-raised\" data-translate=\"global.form.cancel\">Cancel</md-button></div></md-content></form></div>');\n$templateCache.put('app/templates/basic-template/basic-template.html','<div class=\"m-basic-template-style\"><div ui-view=\"m-toolbar\"></div><div ui-view=\"m-sidenav\"></div><div ui-view=\"m-home\"></div><div ui-view=\"m-footer\"></div><div ui-view=\"m-audio-player\"></div></div>');\n$templateCache.put('app/templates/beautiful-template/beautiful-template.html','<div class=\"m-beautiful-template-style\"><div ui-view=\"m-toolbar\"></div><div ui-view=\"m-sidenav\"></div><div ui-view=\"m-home\"></div><div ui-view=\"m-footer\"></div><div ui-view=\"m-audio-player\"></div></div>');\n$templateCache.put('app/templates/latest-template/latest-template.html','<div class=\"m-latest-template-style\"><div ui-view=\"m-toolbar\"></div><div ui-view=\"m-sidenav\"></div><div ui-view=\"m-home\"></div><div ui-view=\"m-footer\"></div><div ui-view=\"m-audio-player\"></div></div>');\n$templateCache.put('app/web-modules/m-audio-player/m-audio-player.html','<div class=\"m-template-audio-player\" ng-show=\"vm.isShow\"><div layout=\"row\" layout-padding layout=\"left center\"><b flex=\"50\" class=\"m-1-line\">{{vm.song.title}}</b><md-button aria-label=\"button-label\" class=\"md-icon-button\" ng-click=\"vm.back()\"><md-icon class=\"material-icons white\">skip_previous</md-icon></md-button><md-button aria-label=\"button-label\" class=\"md-icon-button\" ng-click=\"vm.play()\"><md-icon class=\"material-icons white\">{{vm.isPlaying ? \\'pause\\' : \\'play_arrow\\'}}</md-icon></md-button><md-button aria-label=\"button-label\" class=\"md-icon-button\" ng-click=\"vm.next()\"><md-icon class=\"material-icons white\">skip_next</md-icon></md-button><md-button aria-label=\"button-label\" class=\"md-icon-button\" ng-click=\"vm.repeatOne()\"><md-icon class=\"material-icons white\">{{vm.isRepeatOne ? \\'repeat_one\\' : \\'repeat\\'}}</md-icon></md-button><md-button ng-hide=\"vm.isPlaying\" aria-label=\"button-label\" class=\"md-icon-button\" ng-click=\"vm.hide()\"><md-icon class=\"material-icons white\">clear</md-icon></md-button><span flex=\"11\" ng-show=\"vm.isPlaying\">{{vm.audio.remaining | trackTime}}</span></div></div>');\n$templateCache.put('app/web-modules/m-basic-info/m-basic-info-dialog.html','<md-card><md-card-content><form name=\"Form\" ng-model=\"vm.form\" layout=\"column\"><div layout-gt-xs=\"row\"><md-input-container layout-fill><label data-translate=\"global.form.firstName\">First Name</label><input type=\"text\" name=\"firstName\" ng-minlength=\"3\" ng-model=\"vm.basicinfo.firstName\" required></md-input-container><md-input-container layout-fill><label data-translate=\"global.form.lastName\">Last name</label><input type=\"text\" name=\"lastName\" ng-minlength=\"3\" ng-model=\"vm.basicinfo.lastName\" required></md-input-container></div><div layout-gt-xs=\"row\"><md-input-container layout-fill><label data-translate=\"global.form.email\">Email</label><input type=\"email\" name=\"email\" ng-minlength=\"3\" ng-model=\"vm.basicinfo.email\" required></md-input-container><md-input-container layout-fill><label data-translate=\"global.form.age\">Age</label><input type=\"number\" name=\"age\" min=\"6\" ng-model=\"vm.basicinfo.age\" required></md-input-container></div><div><md-input-container layout-fill><label data-translate=\"global.form.des\">Description</label><input type=\"text\" name=\"des\" ng-minlength=\"6\" ng-model=\"vm.basicinfo.des\" required></md-input-container></div></form></md-card-content></md-card>');\n$templateCache.put('app/web-modules/m-basic-info/m-basic-info.html','<div layout-gt-sm=\"row\" layout-align-gt-sm=\"center center\"><div class=\"m-common-content-item m-template-info\"><div class=\"m-template-info-panel\"><h2>Basic infomation</h2><div layout-gt-xs=\"row\"><div flex><p><span data-translate=\"template.info.fname\">First name : </span><b>{{vm.basicInfo.firstName}}</b></p><p><span data-translate=\"template.info.lname\">Last name : </span><b>{{vm.basicInfo.lastName}}</b></p></div><div flex><p><span data-translate=\"template.info.email\">Email address : </span><b>{{vm.basicInfo.email}}</b></p><p><span data-translate=\"template.info.age\">Age : </span><b>{{vm.basicInfo.age}}</b></p></div></div><p><span data-translate=\"template.info.overview\">Overview : </span><b>{{vm.basicInfo.des}}</b></p></div></div></div>');\n$templateCache.put('app/web-modules/m-footer/m-footer-dialog.html','<md-card><md-card-content><p hide-xs class=\"md-title\">Edit footer</p><form name=\"Form\" layout-fill><md-input-container layout-fill><label>Title</label><input ng-model=\"vm.item.title\" type=\"text\" ng-required=\"true\"></md-input-container><md-input-container layout-fill><label>URL</label><input ng-model=\"vm.item.url\" type=\"text\" ng-required=\"true\"></md-input-container><md-input-container layout-fill layout=\"row\"><div><button type=\"submit\" aria-label=\"Add\" class=\"md-button md-raised md-primary md-icon-button\"><md-icon class=\"material-icons\">add</md-icon></button></div><div><div layout=\"row\" layout-align=\"left center\" ng-repeat=\"item in vm.footer.items\"><md-button aria-label=\"delete\" class=\"md-icon-button\" ng-click=\"vm.deleteItem($index)\"><md-icon class=\"material-icons\">clear</md-icon></md-button><span class=\"md-subhead m-1-line\" flex>{{item.title}}</span></div></div></md-input-container></form></md-card-content></md-card>');\n$templateCache.put('app/web-modules/m-footer/m-footer.html','<footer><div layout=\"column\" layout-align=\"center center\" class=\"m-template-footer\"><p></p><div layout=\"row\"><a href=\"\" ui-sref=\"{{vm.homeState + \\'.info\\'}}\"><span data-translate=\"template.menu.info\">Information</span> </a><a href=\"\" ui-sref=\"{{vm.homeState + \\'.song\\'}}\" ng-show=\"vm.website.custom.song.isEnable\"><span data-translate=\"template.menu.songs\">Songs</span> </a><a href=\"\" ui-sref=\"{{vm.homeState + \\'.photo\\'}}\" ng-show=\"vm.website.custom.photo.isEnable\"><span data-translate=\"template.menu.photos\">Photos</span></a></div><h3>GSite Support</h3><div><a href=\"\" ng-click=\"vm.changeEnglish()\"><span data-translate=\"template.footer.english\">English</span> </a><a href=\"\" ng-click=\"vm.changeVietnam()\"><span data-translate=\"template.footer.vietnam\">Vietnamese</span></a></div><div><p>\\xA9 2016-2017 <a ng-href=\"/#/\">GSite</a>, Inc</p></div></div></footer>');\n$templateCache.put('app/web-modules/m-home/m-home-dialog.html','<md-card class=\"m-template-home-dialog\"><md-card-content><form name=\"Form\" layout=\"column\"><md-input-container layout-fill><label data-translate=\"global.form.name\">Name</label><input type=\"text\" name=\"name\" ng-minlength=\"3\" ng-model=\"vm.homepage.name\" required></md-input-container><md-input-container layout-fill><label data-translate=\"global.form.fullName\">Full name</label><input type=\"text\" name=\"fullName\" ng-minlength=\"3\" ng-model=\"vm.homepage.fullName\" required></md-input-container><md-input-container layout-fill layout=\"row\" layout-align=\"left center\"><button type=\"button\" ng-disabled=\"vm.loading\" class=\"button md-button md-primary\" ngf-select=\"vm.upload($file)\" ng-model=\"vm.mainImageFile\" name=\"file\" ngf-pattern=\"\\'image/*\\'\" ngf-accept=\"\\'image/*\\'\" data-translate=\"myWebsite.custom.uploadPhoto\">Upload photo</button> <img ng-show=\"vm.mainImageFile\" ngf-thumbnail=\"vm.mainImageFile\"> <img ng-show=\"vm.homepage.tempImageLink\" ng-src=\"{{vm.homepage.tempImageLink}}\"></md-input-container></form></md-card-content></md-card>');\n$templateCache.put('app/web-modules/m-home/m-home.html','<div class=\"m-template-home\"><section><div layout-gt-sm=\"row\" layout-align-gt-sm=\"center center\"><div class=\"m-common-content-item\" layout-gt-sm=\"column\" layout-align-gt-sm=\"center center\"><img class=\"m-template-home-avatar\" ng-src=\"{{vm.mainImageLink ? vm.mainImageLink : \\'content/images/temp/temp-default.jpg\\'}}\"><div layout=\"column\" layout-padding layout-align=\"center center\"><a href=\"\" ui-sref=\"{{vm.homeState + \\'.info\\'}}\"><span class=\"md-title\">{{vm.homepage.name}} </span></a><span class=\"md-subtitle\">{{vm.homepage.fullName}}</span></div></div></div></section><section ng-show=\"vm.song.isEnable\"><div layout=\"column\" layout-align-gt-sm=\"center center\"><a href=\"\" ui-sref=\"{{vm.homeState + \\'.song\\'}}\"><p class=\"md-title\" align=\"center\"><span data-translate=\"template.favor.songs\">Favorite Songs</span><md-icon aria-label=\"keyboard_arrow_down\" class=\"material-icons\">keyboard_arrow_down</md-icon></p></a><div class=\"m-template-song-panel\"><div class=\"m-template-song-item\" ng-repeat=\"item in vm.songs\"><div layout=\"row\" layout-padding layout-align=\"center center\"><b class=\"m-1-line\" flex>{{ item.title }}</b> <span class=\"m-1-line\" flex-xs=\"45\" flex-gt-xs=\"25\">{{ item.artist }}</span> <span hide-xs hide-sm flex=\"15\">{{ item.date }}</span> <span hide-xs flex=\"10\">{{ item.length }}</span><md-button aria-label=\"button-label\" class=\"md-icon-button m-common-song-play-btn\" ng-click=\"vm.playSongAt($index)\"><md-icon class=\"material-icons\">play_arrow</md-icon></md-button><md-button hide-xs aria-label=\"button-label\" class=\"md-icon-button m-common-song-download-btn\" ng-click=\"vm.downloadSongAt($index)\"><md-icon class=\"material-icons\">file_download</md-icon></md-button></div><md-divider></md-divider></div></div></div></section><section ng-show=\"vm.photo.isEnable\"><div layout=\"column\" class=\"m-template-home-photo\"><a href=\"\" ui-sref=\"{{vm.homeState + \\'.photo\\'}}\"><p class=\"md-title\" align=\"center\"><span data-translate=\"template.favor.photos\">Favorite Photos</span><md-icon aria-label=\"keyboard_arrow_down\" class=\"material-icons\">keyboard_arrow_down</md-icon></p></a><div class=\"m-photo-normal-form\" layout=\"column\" layout-align=\"center center\"><div class=\"m-common-content-item\" layout-padding layout=\"column\" layout-align=\"center center\" ng-repeat=\"item in vm.photos\"><img ng-src=\"{{item.tempLink}}\"><div><md-button aria-label=\"button-label\" class=\"md-icon-button m-common-view-btn\" ng-click=\"vm.viewPhoto(item)\"><md-icon class=\"material-icons\">remove_red_eye</md-icon></md-button><span>{{item.des}}</span></div></div></div><div class=\"m-photo-beautiful-form\" hidden><div layout=\"column\" layout-align=\"center center\"><div class=\"m-common-content-item\" layout-padding ng-repeat=\"item in vm.photos\"><div layout=\"row\"><img ng-src=\"{{item.tempLink}}\" flex><div flex><md-button aria-label=\"button-label\" class=\"md-icon-button m-common-view-btn\" ng-click=\"vm.viewPhoto(item)\"><md-icon class=\"material-icons\">remove_red_eye</md-icon></md-button><b>{{item.name}}</b><p>{{item.des}}</p></div></div></div></div></div></div></section></div>');\n$templateCache.put('app/web-modules/m-photo/m-photo-dialog.html','<md-card><md-card-content><form name=\"Form\" layout=\"column\" ng-submit=\"vm.submit()\"><md-input-container><div class=\"md-button md-primary\" ng-disabled=\"vm.loading\" ngf-select=\"vm.upload($file)\" ngf-select ng-model=\"vm.photoFile\" name=\"file\" ngf-pattern=\"\\'image/*\\'\" ngf-accept=\"\\'image/*\\'\"><span data-translate=\"myWebsite.custom.uploadPhoto\">Upload photo</span></div></md-input-container><md-input-container ng-show=\"vm.photoFile\"><label data-translate=\"global.form.name\">Name</label><input ng-model=\"vm.item.name\" type=\"text\" ng-required=\"true\"></md-input-container><md-input-container ng-show=\"vm.photoFile\"><label data-translate=\"global.form.des\">Description</label><input ng-model=\"vm.item.des\" type=\"text\" ng-required=\"true\"></md-input-container><md-input-container layout=\"row\"><div><button type=\"submit\" aria-label=\"Add\" ng-disabled=\"!Form.$valid || vm.loading\" class=\"md-button md-raised md-primary md-icon-button\"><md-icon class=\"material-icons\">add</md-icon></button></div><div><div layout=\"row\" layout-align=\"left center\" ng-repeat=\"item in vm.photo.items\"><md-button aria-label=\"delete\" class=\"md-icon-button\" ng-disabled=\"vm.loading\" ng-click=\"vm.deleteItem($index)\"><md-icon class=\"material-icons\">clear</md-icon></md-button><span class=\"md-subhead m-1-line\" flex>{{item.name}}</span></div></div></md-input-container></form></md-card-content></md-card>');\n$templateCache.put('app/web-modules/m-photo/m-photo-view-dialog.html','<div class=\"m-template-photo-dialog\" aria-label=\"{{vm.photo.title}}\"><img ng-src=\"{{vm.photo.tempLink}}\"></div>');\n$templateCache.put('app/web-modules/m-photo/m-photo.html','<div class=\"m-template-photo\"><div class=\"m-photo-normal-form\" layout=\"column\" layout-align=\"center center\"><div class=\"m-common-content-item\" layout-padding layout=\"column\" layout-align=\"center center\" ng-repeat=\"item in vm.photos\"><img ng-src=\"{{item.tempLink}}\"><div><md-button aria-label=\"button-label\" class=\"md-icon-button m-common-view-btn\" ng-click=\"vm.viewAt($index)\"><md-icon class=\"material-icons\">remove_red_eye</md-icon></md-button><span>{{item.des}}</span></div></div></div><div hidden class=\"m-photo-beautiful-form\"><div layout-gt-sm=\"column\" layout-align-gt-sm=\"center center\"><div class=\"m-common-content-item\" layout-padding ng-repeat=\"item in vm.photos\"><div layout=\"row\"><img ng-src=\"{{item.tempLink}}\" flex><div flex><md-button aria-label=\"button-label\" class=\"md-icon-button m-common-view-btn\" ng-click=\"vm.viewAt($index)\"><md-icon class=\"material-icons\">remove_red_eye</md-icon></md-button><b>{{item.name}}</b><p>{{item.des}}</p></div></div></div></div></div></div>');\n$templateCache.put('app/web-modules/m-sidenav/m-sidenav-dialog.html','<md-card><md-card-content><form name=\"Form\" layout-fill><md-input-container layout-fill><label data-translate=\"global.form.title\">Title</label><input type=\"text\" name=\"title\" ng-minlength=\"2\" ng-model=\"vm.sidenav.title\" required></md-input-container><div class=\"m-color-picker\" label=\"{{\\'myWebsite.custom.textColor\\' | translate}}\" icon=\"text_format\" md-color-picker ng-model=\"vm.sidenav.textColor\" md-color-history=\"true\"></div><div class=\"m-color-picker\" label=\"{{\\'myWebsite.custom.backgroundColor\\' | translate}}\" md-color-picker ng-model=\"vm.sidenav.backgroundColor\" md-color-history=\"true\"></div></form></md-card-content></md-card>');\n$templateCache.put('app/web-modules/m-sidenav/m-sidenav.html','<md-sidenav class=\"md-sidenav-left m-sidenav\" md-component-id=\"m-sidenav\" md-whiteframe=\"4\" style=\"background-color: {{vm.sidenav.backgroundColor}}; color: {{vm.sidenav.textColor}}\"><md-toolbar class=\"md-theme-indigo\" style=\"background-color: {{vm.sidenav.barColor}}\"><h1 class=\"md-toolbar-tools\">{{vm.sidenav.title}}</h1></md-toolbar><md-content><md-list class=\"m-template-sidenav-list\"><md-list-item class=\"md-2-line\" ui-sref=\"{{vm.homeState}}\" ng-click=\"vm.toggleLeft()\"><i class=\"material-icons\" flex=\"15\">home</i><div class=\"md-list-item-text\" layout=\"column\" flex><h3>Home</h3><h4>Welcome to my website</h4></div></md-list-item><md-list-item class=\"md-2-line\" ui-sref=\"{{vm.homeState + \\'.info\\'}}\" ng-click=\"vm.toggleLeft()\"><i class=\"material-icons\" flex=\"15\">person</i><div class=\"md-list-item-text\" layout=\"column\" flex><h3>Information</h3><h4>Overview of what you should know</h4></div></md-list-item><md-list-item ng-show=\"vm.website.custom.photo.isEnable\" class=\"md-2-line\" ui-sref=\"{{vm.homeState + \\'.photo\\'}}\" ng-click=\"vm.toggleLeft()\"><i class=\"material-icons\" flex=\"15\">photo_library</i><div class=\"md-list-item-text\" layout=\"column\" flex><h3>Photos</h3><h4>Album contain all photo of reciever</h4></div></md-list-item><md-list-item ng-show=\"vm.website.custom.song.isEnable\" class=\"md-2-line\" ui-sref=\"{{vm.homeState + \\'.song\\'}}\" ng-click=\"vm.toggleLeft()\"><i class=\"material-icons\" flex=\"15\">library_music</i><div class=\"md-list-item-text\" layout=\"column\" flex><h3>Songs</h3><h4>All favorite songs and their playlist</h4></div></md-list-item><md-list-item class=\"md-2-line\"><div layout=\"row\" layout-fill><md-icon class=\"material-icons\" flex=\"15\">language</md-icon><md-select ng-model=\"vm.lang\" aria-label=\"Language\"><md-option value=\"en\" ng-selected=\"true\">English</md-option><md-option value=\"vi\">Vietnamese</md-option></md-select><span flex></span></div></md-list-item></md-list></md-content></md-sidenav>');\n$templateCache.put('app/web-modules/m-song/m-song-dialog.html','<md-card><md-card-content><form name=\"Form\" layout=\"column\" ng-submit=\"vm.submit(vm.item)\"><md-input-container><div class=\"md-button md-primary\" ng-disabled=\"vm.loading\" ngf-select=\"vm.upload($file)\" ngf-select ng-model=\"vm.songFile\" name=\"file\" ngf-pattern=\"\\'audio/*\\'\" ngf-accept=\"\\'audio/*\\'\"><span data-translate=\"myWebsite.custom.uploadSong\">Upload song</span></div></md-input-container><md-input-container ng-show=\"vm.songFile\"><label data-translate=\"global.form.title\">Title</label><input ng-model=\"vm.item.title\" type=\"text\" minlength=\"3\" required></md-input-container><md-input-container layout=\"row\"><div><button type=\"submit\" ng-disabled=\"!Form.$valid || vm.loading\" aria-label=\"Add\" class=\"md-button md-raised md-primary md-icon-button\"><md-icon class=\"material-icons\">add</md-icon></button></div><div><div layout=\"row\" layout-align=\"left center\" ng-repeat=\"item in vm.song.items\"><md-button aria-label=\"delete\" class=\"md-icon-button\" ng-disabled=\"vm.loading\" ng-click=\"vm.deleteItem($index)\"><md-icon class=\"material-icons\">clear</md-icon></md-button><span class=\"md-subhead m-1-line\" flex>{{item.title}}</span></div></div></md-input-container></form></md-card-content></md-card>');\n$templateCache.put('app/web-modules/m-song/m-song.html','<div layout-gt-sm=\"column\" layout-align-gt-sm=\"center center\"><div class=\"m-common-content-item\" ng-repeat=\"item in vm.songs\"><div layout=\"row\" layout-padding layout-align=\"center center\"><span hide-xs>{{$index + 1}}</span> <b class=\"m-1-line\" flex>{{ item.title }}</b> <span class=\"m-1-line\" flex=\"25\">{{ item.artist }}</span> <span hide-xs hide-sm flex=\"15\">{{ item.date }}</span> <span hide-xs flex=\"10\">{{ item.length }}</span><md-button aria-label=\"button-label\" class=\"md-icon-button m-common-song-play-btn\" ng-click=\"vm.playAt($index)\"><md-icon class=\"material-icons\">play_arrow</md-icon></md-button><md-button hide-xs aria-label=\"button-label\" class=\"md-icon-button m-common-song-download-btn\" ng-click=\"vm.downloadSongAt($index)\"><md-icon class=\"material-icons\">file_download</md-icon></md-button></div><md-divider></md-divider></div></div>');\n$templateCache.put('app/web-modules/m-toolbar/m-toolbar-dialog.html','<md-card><md-card-content><form name=\"Form\" layout=\"column\"><md-input-container><label data-translate=\"global.form.title\">Title</label><input type=\"text\" name=\"title\" ng-minlength=\"2\" ng-model=\"vm.toolbar.title\" required></md-input-container><div md-color-picker label=\"{{\\'myWebsite.custom.textColor\\' | translate}}\" icon=\"text_format\" ng-model=\"vm.toolbar.textColor\" md-color-history=\"true\"></div></form></md-card-content></md-card>');\n$templateCache.put('app/web-modules/m-toolbar/m-toolbar.html','<md-toolbar class=\"md-hue-2 m-template-toolbar\"><div class=\"md-toolbar-tools\" layout-gt-sm=\"row\"><md-button class=\"md-icon-button m-sidenav-togger\" ng-click=\"vm.toggleLeft()\" aria-label=\"Settings\"><md-icon style=\"color: {{vm.toolbar.textColor}}\" class=\"material-icons\">menu</md-icon></md-button><!--<div flex=\"5\" layout=\"row\" layout-align=\"center center\">\\n            <img  class=\"m-person-avatar\" ng-src=\"content/images/other/avatar.jpg\" class=\"md-avatar\" />\\n        </div>--><h2><span style=\"color: {{vm.toolbar.textColor}}\">{{vm.toolbar.title}}</span></h2><span flex></span><div hide-xs hide-sm><md-button class=\"m-normal-text\" aria-label=\"Home\" ui-sref=\"{{vm.homeState}}\" data-translate=\"template.menu.home\">Home</md-button><md-button class=\"m-normal-text\" ui-sref=\"{{vm.homeState + \\'.info\\'}}\" data-translate=\"template.menu.info\" ng-show=\"vm.website.custom.basicInfo.isEnable\">Information</md-button><md-button class=\"m-normal-text\" ui-sref=\"{{vm.homeState + \\'.photo\\'}}\" data-translate=\"template.menu.photos\" ng-show=\"vm.website.custom.photo.isEnable\">Photos</md-button><md-button class=\"m-normal-text\" ui-sref=\"{{vm.homeState + \\'.song\\'}}\" data-translate=\"template.menu.songs\" ng-show=\"vm.website.custom.song.isEnable\">Songs</md-button></div></div></md-toolbar>');\n$templateCache.put('app/account/reset/finish/reset.finish.html','<div class=\"m-common-toolbar\"></div><div class=\"m-common-panel md-whiteframe-1dp\" layout=\"column\" layout-align=\"center center\"><h1 data-translate=\"reset.finish.title\">Reset password</h1><div ng-show=\"vm.keyMissing\"><p data-translate=\"reset.finish.messages.keymissing\" class=\"error-text\">The password reset key is missing.</p></div><p data-translate=\"reset.finish.messages.info\" ng-hide=\"vm.success || vm.keyMissing\">Choose a new password</p><p ng-show=\"vm.error\" class=\"error-text\" data-translate=\"reset.finish.messages.error.title\">Your password couldn\\'t be reset.</p><p ng-show=\"vm.success\" data-translate=\"reset.finish.messages.success\" translate-compile>Your password has been reset. Please sign in</p><div ng-show=\"vm.success\" layout=\"row\" layout-align=\"center center\"><md-button class=\"md-raised md-primary\" aria-label=\"login\">Login</md-button></div><form name=\"Form\" ng-hide=\"vm.keyMissing\" ng-show=\"!vm.success\" ng-submit=\"vm.finishReset($event)\"><md-input-container><md-icon style=\"color:black\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">lock</md-icon><label data-translate=\"global.form.password\">Password</label><input id=\"password\" type=\"password\" name=\"password\" ng-model=\"vm.resetAccount.password\" md-autofocus required=\"\" minlength=\"8\"><div ng-messages=\"Form.password.$error\"><div ng-message-exp=\"[\\'required\\', \\'minlength\\']\" data-translate=\"global.form.error.password\">More than 8 characters</div></div></md-input-container><md-input-container><md-icon style=\"color:black\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">verified_user</md-icon><label data-translate=\"global.form.confirmpassword\">Confirm password</label><input type=\"password\" name=\"confirmpassword\" ng-model=\"vm.confirmpassword\" required=\"\" match-password=\"password\"><div ng-messages=\"Form.confirmpassword.$error\"><div ng-message-exp=\"[\\'required\\',\\'passwordMatch\\']\" data-translate=\"global.form.error.confirmpassword\">Match with the password</div></div></md-input-container><div layout=\"row\" layout-align=\"center center\"><button type=\"submit\" ng-disabled=\"!Form.$valid\" class=\"md-button md-raised md-primary\">Reset</button><md-button ui-sref=\"home\" class=\"md-raised\">Cancel</md-button></div></form></div>');\n$templateCache.put('app/account/reset/request/reset.request.html','<div class=\"m-common-toolbar\"></div><div class=\"m-common-panel md-whiteframe-1dp\" layout=\"column\" layout-align=\"center center\"><h1 data-translate=\"reset.request.title\">Reset your password</h1><div layout=\"column\" layout-align=\"center center\" ng-show=\"vm.errorEmailNotExists\"><strong class=\"error-text\" data-translate=\"reset.request.messages.notfound.title\">E-Mail address isn\\'t registered!</strong><p data-translate=\"reset.request.messages.notfound.subtitle\">Please check and try again.</p></div><div><p data-translate=\"reset.request.messages.success\" ng-show=\"vm.success\">Please check your e-mails.</p></div><div><p data-translate=\"reset.request.messages.info\" ng-show=\"!vm.success\">Enter the e-mail address you used to register.</p></div><form name=\"Form\" ng-show=\"!vm.success\"><md-input-container layout-fill><md-icon style=\"color:black\" aria-label=\"keyboard_arrow_down\" class=\"material-icons\">email</md-icon><label data-translate=\"global.form.email\">Email</label><input id=\"emailInput\" type=\"email\" name=\"email\" ng-model=\"vm.resetAccount.email\" ng-pattern=\"/^.+@.+\\\\..+$/\" md-autofocus required><div ng-messages=\"Form.email.$error\"><div ng-message-exp=\"[\\'required\\', \\'pattern\\']\" data-translate=\"global.form.error.email\">This is required and must be valid email</div></div></md-input-container><div layout=\"row\" layout-fill><md-button ng-disabled=\"!Form.$valid\" ng-click=\"vm.requestReset()\" class=\"md-raised md-primary\" data-translate=\"global.form.reset\">Reset</md-button><span flex></span><md-button ui-sref=\"home\" ng-click=\"vm.cancel()\" class=\"md-raised right\" data-translate=\"global.form.cancel\">Cancel</md-button></div></form></div>');\n$templateCache.put('app/account/social/directive/social.html','<form action=\"{{ providerURL }}\" method=\"POST\"><button type=\"submit\" class=\"m-common-{{ provider }}-btn\" md-ink-ripple></button> <input name=\"scope\" type=\"hidden\" value=\"{{\\xA0providerSetting }}\"> <input name=\"_csrf\" type=\"hidden\" value=\"{{\\xA0csrf }}\"></form>');\n$templateCache.put('app/customer/support/faq/faqs.html','<div class=\"m-feedbacks\" layout-padding layout-gt-sm=\"row\" layout-align=\"center center\"><md-list class=\"md-dense m-common-panel\" md-whiteframe=\"1\"><md-list-item class=\"md-3-line\" ng-repeat=\"item in vm.faqs\"><div class=\"md-list-item-text\"><p><md-icon class=\"material-icons\">help</md-icon><span class=\"md-subhead\">{{item.content}}</span></p><p><md-icon class=\"material-icons\">question_answer</md-icon><span class=\"md-title\">{{item.answer}}</span></p></div><md-divider></md-divider></md-list-item></md-list></div>');\n$templateCache.put('app/customer/support/my-feedback/my-feedback-dialog.html','<md-card><md-card-content><p class=\"md-title\" data-translate=\"myFeedback.title\">Feedbacks</p><form name=\"Form\" layout-fill ng-submit=\"vm.submit()\"><md-input-container layout-fill><label data-translate=\"myFeedback.criteria\">Criteria</label><md-select ng-model=\"vm.feedback.title\" required><md-option value=\"Speed\" data-translate=\"myFeedback.option.speed\">Speed</md-option><md-option value=\"Accuracy\" data-translate=\"myFeedback.option.accuracy\">Accuracy</md-option><md-option value=\"Usability\" data-translate=\"myFeedback.option.usability\">Usability</md-option></md-select></md-input-container><p></p><md-radio-group ng-show=\"vm.feedback.title != null\" ng-model=\"vm.feedback.content\" required><md-radio-button value=\"Quite good and easy\" class=\"md-primary\"><span data-translate=\"myFeedback.option.good\">Quite good and easy!</span></md-radio-button><md-radio-button value=\"Not good enough\" class=\"md-primary\"><span data-translate=\"myFeedback.option.normal\">Not good enough!</span></md-radio-button><md-radio-button value=\"Have some problems\" class=\"md-primary\"><span data-translate=\"myFeedback.option.bad\">Have some problems!</span></md-radio-button></md-radio-group><p></p><div layout=\"row\" layout-fill><button ng-disabled=\"!Form.$valid\" class=\"md-button md-raised md-primary\" data-translate=\"global.form.send\">Send</button> <span flex></span><md-button ng-click=\"vm.closeDialog()\" class=\"md-raised right\" data-translate=\"global.form.cancel\">Cancel</md-button></div></form></md-card-content></md-card>');\n$templateCache.put('app/customer/support/my-feedback/my-feedbacks.html','<div class=\"m-feedbacks\" layout-padding layout-gt-sm=\"row\" layout-align=\"center center\"><md-list class=\"md-dense m-common-panel\" md-whiteframe=\"1\"><md-list-item class=\"md-3-line\" ng-repeat=\"item in vm.feedbacks\"><div class=\"md-list-item-text\"><p><md-icon class=\"material-icons\">feedback</md-icon><span class=\"md-subhead\">{{item.title}}</span></p><p><md-icon class=\"material-icons\">question_answer</md-icon><span class=\"md-title\">{{item.content}}</span></p></div><md-divider></md-divider></md-list-item></md-list></div>');\n$templateCache.put('app/customer/support/my-question/my-question-dialog.html','<md-card><md-card-content><p class=\"md-title\" data-translate=\"myQuestion.title\">Question</p><form name=\"Form\" layout=\"column\" ng-submit=\"vm.submit()\"><md-input-container><label data-translate=\"myQuestion.content\">Content</label><input type=\"text\" name=\"content\" ng-minlength=\"6\" ng-model=\"vm.question.content\" required><div ng-messages=\"Form.content.$error\"><div ng-message=\"required\" data-translate=\"global.form.error.des\">This is required. More than 6 characters</div></div></md-input-container><div layout=\"row\"><button ng-disabled=\"!Form.$valid\" class=\"md-button md-raised md-primary\" data-translate=\"global.form.send\">Send</button> <span flex></span><md-button ng-click=\"vm.closeDialog()\" class=\"md-raised right\" data-translate=\"global.form.cancel\">Cancel</md-button></div></form></md-card-content></md-card>');\n$templateCache.put('app/customer/support/my-question/my-questions.html','<div class=\"m-questions\" layout-padding layout-gt-sm=\"row\" layout-align=\"center center\"><md-list class=\"md-dense m-common-panel\" md-whiteframe=\"1\"><md-list-item class=\"md-3-line white-bg\" ng-repeat=\"item in vm.questions\"><div class=\"md-list-item-text\"><p><md-icon class=\"material-icons\">help</md-icon><span class=\"md-subhead\">{{item.content}}</span></p><p><md-icon class=\"material-icons\">question_answer</md-icon><span class=\"md-title\">{{item.answer}}</span></p></div><md-divider></md-divider></md-list-item></md-list></div>');}]);})();"],"sourceRoot":"/source/"}